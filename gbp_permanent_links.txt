# gbp_permanent_links_jrw v0.14_jrw
# Custom permanent links rules
# Graeme Porteous, modified by Jeffrey Woldan
# http://rgbp.co.uk/projects/textpattern/gbp_permanent_links/

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YTo5OntzOjQ6Im5hbWUiO3M6MjM6ImdicF9wZXJtYW5lbnRfbGlua3NfanJ3IjtzOjc6InZl
cnNpb24iO3M6ODoiMC4xNF9qcnciO3M6NjoiYXV0aG9yIjtzOjQzOiJHcmFlbWUgUG9ydGVv
dXMsIG1vZGlmaWVkIGJ5IEplZmZyZXkgV29sZGFuIjtzOjEwOiJhdXRob3JfdXJpIjtzOjU5
OiJodHRwOi8vcmdicC5jby51ay9wcm9qZWN0cy90ZXh0cGF0dGVybi9nYnBfcGVybWFuZW50
X2xpbmtzLyI7czoxMToiZGVzY3JpcHRpb24iO3M6Mjg6IkN1c3RvbSBwZXJtYW5lbnQgbGlu
a3MgcnVsZXMiO3M6NDoidHlwZSI7czoxOiIxIjtzOjQ6ImhlbHAiO3M6MTUxOiJoMS4gZ2Jw
X3Blcm1hbmVudF9saW5rcy4KClRoZXJlIGlzIG5vIHBsdWdpbiBkb2N1bWVudGF0aW9uLiBG
b3IgaGVscCBwbGVhc2UgdXNlIHRoZSAiZm9ydW0gdGhyZWFkIjpodHRwOi8vZm9ydW0udGV4
dHBhdHRlcm4uY29tL3ZpZXd0b3BpYy5waHA/aWQ9MTg5MTguIjtzOjQ6ImNvZGUiO3M6Njgy
MTM6IgovLyBDb25zdGFudHMKQGRlZmluZSgnZ2JwX3NhdmUnLCAnc2F2ZScpOwpAZGVmaW5l
KCdnYnBfcG9zdCcsICdwb3N0Jyk7CkBkZWZpbmUoJ2dicF9zZXBhcmF0b3InLCAnJn4mfiYn
KTsKCi8vIHJlcXVpcmVfcGx1Z2luKCkgd2lsbCByZXNldCB0aGUgJHR4cF9jdXJyZW50X3Bs
dWdpbiBnbG9iYWwKZ2xvYmFsICR0eHBfY3VycmVudF9wbHVnaW47CiRnYnBfY3VycmVudF9w
bHVnaW4gPSAkdHhwX2N1cnJlbnRfcGx1Z2luOwpyZXF1aXJlX3BsdWdpbignZ2JwX2FkbWlu
X2xpYnJhcnknKTsKJHR4cF9jdXJyZW50X3BsdWdpbiA9ICRnYnBfY3VycmVudF9wbHVnaW47
CgpjbGFzcyBQZXJtYW5lbnRMaW5rcyBleHRlbmRzIEdCUFBsdWdpbgp7Cgl2YXIgJHBlcm1p
c3Npb25zID0gJzEsMic7Cgl2YXIgJHByZWZlcmVuY2VzID0gYXJyYXkoCgkJJ3Nob3dfcHJl
Zml4JyA9PiBhcnJheSgndmFsdWUnID0+IDAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJ
CSdzaG93X3N1ZmZpeCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwLCAndHlwZScgPT4gJ3llc25v
cmFkaW8nKSwKCQknb21pdF90cmFpbGluZ19zbGFzaCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAw
ICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3JlZGlyZWN0X210X3N0eWxlX2xpbmtz
JyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQkn
Y2xlYW5fcGFnZV9hcmNoaXZlX2xpbmtzJyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlw
ZScgPT4gJ3llc25vcmFkaW8nKSwKCQknam9pbl9wcmV0ZXh0X3RvX3BhZ2VsaW5rcycgPT4g
YXJyYXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2NoZWNr
X3ByZXRleHRfY2F0ZWdvcnlfY29udGV4dCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwICwgJ3R5
cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2NoZWNrX3ByZXRleHRfc2VjdGlvbl9jb250ZXh0
JyA9PiBhcnJheSgndmFsdWUnID0+IDAgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQkn
Zm9yY2VfbG93ZXJjYXNlX3VybHMnID0+IGFycmF5KCd2YWx1ZScgPT4gMSAsICd0eXBlJyA9
PiAneWVzbm9yYWRpbycpLAoJCSdhdXRvbWF0aWNhbGx5X2FwcGVuZF90aXRsZScgPT4gYXJy
YXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3Blcm1saW5r
X3JlZGlyZWN0X2h0dHBfc3RhdHVzJyA9PiBhcnJheSgndmFsdWUnID0+ICczMDEnICwgJ3R5
cGUnID0+ICd0ZXh0X2lucHV0JyksCgkJJ3VybF9yZWRpcmVjdF9odHRwX3N0YXR1cycgPT4g
YXJyYXkoJ3ZhbHVlJyA9PiAnMzAyJyAsICd0eXBlJyA9PiAndGV4dF9pbnB1dCcpLAoJCSd0
ZXh0X2FuZF9yZWdleF9zZWdtZW50X3Njb3JlcycgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAnMCcg
LCAndHlwZScgPT4gJ3RleHRfaW5wdXQnKSwKCQknZGVidWcnID0+IGFycmF5KCd2YWx1ZScg
PT4gMCwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkpOwoJdmFyICRtYXRjaGVkX3Blcm1s
aW5rID0gYXJyYXkoKTsKCXZhciAkcGFydGlhbF9tYXRjaGVzID0gYXJyYXkoKTsKCXZhciAk
Y2xlYXZlcl9wYXJ0aWFsX21hdGNoOwoJdmFyICRidWZmZXJfZGVidWcgPSBhcnJheSgpOwoK
CWZ1bmN0aW9uIHByZWxvYWQgKCkgewoJCW5ldyBQZXJtYW5lbnRMaW5rc0xpc3RUYWJWaWV3
KCdsaXN0JywgJ2xpc3QnLCAkdGhpcyk7CgkJbmV3IFBlcm1hbmVudExpbmtzQnVpbGRUYWJW
aWV3KCdidWlsZCcsICdidWlsZCcsICR0aGlzKTsKCQluZXcgR0JQUHJlZmVyZW5jZVRhYlZp
ZXcoJHRoaXMpOwoJfQoKCWZ1bmN0aW9uIG1haW4gKCkgewoJCXJlcXVpcmVfcHJpdnMoJHRo
aXMtPmV2ZW50KTsKCX0KCglmdW5jdGlvbiBnZXRfYWxsX3Blcm1saW5rcyAoJHNvcnQgPSAw
LCAkZXhjbHVkZSA9IGFycmF5KCkpIHsKCQlzdGF0aWMgJHJzOwoJCWlmICghaXNzZXQoJHJz
KSkKCQkJJHJzID0gc2FmZV9jb2x1bW4oCgkJCQkiUkVQTEFDRShuYW1lLCAneyR0aGlzLT5w
bHVnaW5fbmFtZX1fJywgJycpIEFTIGlkIiwgJ3R4cF9wcmVmcycsCgkJCQkiYGV2ZW50YCA9
ICd7JHRoaXMtPmV2ZW50fScgQU5EIGBuYW1lYCBSRUdFWFAgJ157JHRoaXMtPnBsdWdpbl9u
YW1lfV8uezEzfSQnIgoJCQkpOwoKCQlpZiAoQHR4cGludGVyZmFjZSA9PSAncHVibGljJykK
CQkJJHRoaXMtPmRlYnVnKCdMb2FkaW5nIHBlcm1saW5rcyBmcm9tIGRiJyk7CgkJJGkgPSAw
OwoKCQkkcGVybWxpbmtzID0gYXJyYXkoKTsKCQlmb3JlYWNoICgkcnMgYXMgJGlkKSB7CgkJ
CSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJGlkKTsKCgkJCWlmIChjb3VudCgkZXhjbHVk
ZSkgPiAwKQoJCQkJZm9yZWFjaCAoJHBsWydjb21wb25lbnRzJ10gYXMgJHBsX2MpIHsKCQkJ
CQlpZiAoaXNfYXJyYXkoJGV4Y2x1ZGUpICYmIGluX2FycmF5KCRwbF9jWyd0eXBlJ10sICRl
eGNsdWRlKSkKCQkJCQkJY29udGludWUgMjsKCQkJCQlpZiAoaXNfc3RyaW5nKCRleGNsdWRl
KSAmJiAkcGxfY1sndHlwZSddID09PSAkZXhjbHVkZSkKCQkJCQkJY29udGludWUgMjsKCQkJ
CX0KCgkJCSRwZXJtbGlua3NbJGlkXSA9ICRwbDsKCgkJCWlmICgkc29ydCkKCQkJCSRwcmVj
ZWRlbmNlWyRpZF0gPSAkcGVybWxpbmtzWyRpZF1bJ3NldHRpbmdzJ11bJ3BsX3ByZWNlZGVu
Y2UnXTsKCQl9CgoJCS8vIElmIG1vcmUgdGhhbiBvbmUgcGVybWFuZW50IGxpbmssIHNvcnQg
YnkgdGhlaXIgcHJlY2VkZW5jZSB2YWx1ZS4KCQlpZiAoJHNvcnQgJiYgY291bnQoJHBlcm1s
aW5rcykgPiAxKQoJCQlhcnJheV9tdWx0aXNvcnQoJHByZWNlZGVuY2UsIFNPUlRfREVTQywg
JHBlcm1saW5rcyk7CgoJCWlmIChAdHhwaW50ZXJmYWNlID09ICdwdWJsaWMnKSB7CgkJCWZv
cmVhY2ggKCRwZXJtbGlua3MgYXMgJHBsKQoJCQkJJHRoaXMtPmRlYnVnKCRwbFsnc2V0dGlu
Z3MnXVsncGxfcHJlY2VkZW5jZSddLic6ICcuJHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ10u
JyAoJy4kcGxbJ3NldHRpbmdzJ11bJ3BsX3ByZXZpZXcnXS4nKScpOwoJCX0KCgkJcmV0dXJu
ICRwZXJtbGlua3M7Cgl9CgoJZnVuY3Rpb24gZ2V0X3Blcm1saW5rICgkaWQpIHsKCQkkcGVy
bWxpbmsgPSAkdGhpcy0+cHJlZigkaWQpOwoJCXJldHVybiBpc19hcnJheSgkcGVybWxpbmsp
ID8gJHBlcm1saW5rIDogYXJyYXkoKTsKCX0KCglmdW5jdGlvbiByZW1vdmVfcGVybWxpbmsg
KCRpZCkgewoJCSRwZXJtbGluayA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJGlkKTsKCQlzYWZl
X2RlbGV0ZSgndHhwX3ByZWZzJywgImBldmVudGAgPSAneyR0aGlzLT5ldmVudH0nIEFORCBg
bmFtZWAgTElLRSAneyR0aGlzLT5wbHVnaW5fbmFtZX1feyRpZH0lJyIpOwoJCXJldHVybiAk
cGVybWxpbmtbJ3NldHRpbmdzJ11bJ3BsX25hbWUnXTsKCX0KCglmdW5jdGlvbiBfZmVlZF9l
bnRyeSAoKSB7CgkJc3RhdGljICRzZXQ7CgkJaWYgKCFpc3NldCgkc2V0KSkgewoJCQkvLyBX
ZSdyZSBpbiBhIGZlZWQgZm9yY2UgZGVidWdnaW5nIG9mZi4KCQkJJHRoaXMtPnByZWZlcmVu
Y2VzWydkZWJ1ZyddWyd2YWx1ZSddID0gJEdMT0JBTFNbJ3ByZWZzJ11bJHRoaXMtPnBsdWdp
bl9uYW1lLidfZGVidWcnXSA9IDA7CgoJCQkkdGhpcy0+c2V0X3Blcm1saW5rX21vZGUodHJ1
ZSk7CgkJCSRzZXQgPSB0cnVlOwoJCX0KCX0KCglmdW5jdGlvbiBfdGV4dHBhdHRlcm4gKCkg
ewoJCWdsb2JhbCAkcGx1Z2luc192ZXIsICRwcmV0ZXh0LCAkcHJlZnMsICRwbHVnaW5fY2Fs
bGJhY2s7CgoJCSR0aGlzLT5kZWJ1ZygnUGx1Z2luOiAnLiR0aGlzLT5wbHVnaW5fbmFtZS4n
IC0gJy4kcGx1Z2luc192ZXJbJHRoaXMtPnBsdWdpbl9uYW1lXSk7CgkJJHRoaXMtPmRlYnVn
KCdGdW5jdGlvbjogJy5fX0ZVTkNUSU9OX18uJygpJyk7CgoJCS8vIFVSSQoJCSRyZXEgPSAk
cHJldGV4dFsncmVxJ107CgkJJHJlcSA9IHByZWdfcmVwbGFjZSgnJVw/W15cL10rJCUnLCAn
JywgJHJlcSk7CgkJJHRoaXMtPmRlYnVnKCdSZXF1ZXN0IFVSSTogJy4kcmVxKTsKCQkkdXJp
ID0gZXhwbG9kZSgnLycsIHRyaW0oJHJlcSwgJy8nKSk7CgoJCS8vIFRoZSBudW1iZXIgb2Yg
Y29tcG9uZW50cyBjb21lcyBpbiB1c2VmdWwgd2hlbiBkZXRlcm1pbmluZyB0aGUgYmVzdCBw
YXJ0aWFsIG1hdGNoLgoJCSR1cmlfY29tcG9uZW50X2NvdW50ID0gY291bnQoJHVyaSk7CgoJ
CS8vIFBlcm1hbmVudCBsaW5rcwoJCSRwZXJtbGlua3MgPSAkdGhpcy0+Z2V0X2FsbF9wZXJt
bGlua3MoMSk7CgoJCS8vIEZvcmNlIFRleHRwYXR0ZXJuIGFuZCB0YWdzIHRvIHVzZSBtZXNz
eSBVUkxzIC0gdGhlc2UgYXJlIGVhc2llciB0bwoJCS8vIGZpbmQgaW4gcmVnZXgKCQkkdGhp
cy0+c2V0X3Blcm1saW5rX21vZGUoKTsKCgkJaWYgKGNvdW50KCRwZXJtbGlua3MpKSB7CgoJ
CQkvLyBXZSBhbHNvIHdhbnQgdG8gbWF0Y2ggdGhlIGZyb250IHBhZ2Ugb2YgdGhlIHNpdGUg
KGZvciBwYWdlIG51bWJlcnMgLyBmZWVkcyBldGMuLikuCgkJCS8vIEFkZCBhIHBlcm1saW5r
cyBydWxlIHdoaWNoIHdpbGwgZG8gdGhhdC4KCQkJJHBlcm1saW5rc1snZGVmYXVsdCddID0g
YXJyYXkoCgkJCQknY29tcG9uZW50cycgPT4gYXJyYXkoKSwKCQkJCSdzZXR0aW5ncycgPT4g
YXJyYXkoCgkJCQkJJ3BsX25hbWUnID0+ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1bHQn
LCAncGxfcHJlY2VkZW5jZScgPT4gJycsICdwbF9wcmV2aWV3JyA9PiAnLycsCgkJCQkJJ2Nv
bl9zZWN0aW9uJyA9PiAnJywgJ2Nvbl9jYXRlZ29yeScgPT4gJycsICdkZXNfc2VjdGlvbicg
PT4gJycsICdkZXNfY2F0ZWdvcnknID0+ICcnLAoJCQkJCSdkZXNfcGVybWxpbmsnID0+ICcn
LCAnZGVzX2ZlZWQnID0+ICcnLCAnZGVzX2xvY2F0aW9uJyA9PiAnJywgJ2Rlc19wYWdlJyA9
PiAnJwoJCQkpKTsKCgkJCS8vIEV4dGVuZCB0aGUgcHJldGV4dF9yZXBsYWNlbWVudCBzY29w
ZSBvdXRzaWRlIHRoZSBmb3JlYWNoIHBlcm1saW5rIGxvb3AKCQkJJHByZXRleHRfcmVwbGFj
ZW1lbnQgPSBOVUxMOwoKCQkJZm9yZWFjaCgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGwpIHsK
CQkJCS8vIEV4dHJhY3QgdGhlIHBlcm1saW5rIHNldHRpbmdzCgkJCQkkcGxfc2V0dGluZ3Mg
PSAkcGxbJ3NldHRpbmdzJ107CgkJCQlleHRyYWN0KCRwbF9zZXR0aW5ncyk7CgoJCQkJJHRo
aXMtPmRlYnVnKCdQZXJtbGluayBuYW1lOiAnLiRwbF9uYW1lKTsKCQkJCSR0aGlzLT5kZWJ1
ZygnUGVybWxpbmsgaWQ6ICcuJGlkKTsKCQkJCSR0aGlzLT5kZWJ1ZygnUHJldmlldzogJy4k
cGxfcHJldmlldyk7CgoJCQkJJHBsX2NvbXBvbmVudHMgPSAkcGxbJ2NvbXBvbmVudHMnXTsK
CgkJCQkvLyBVUkkgY29tcG9uZW50cwoJCQkJJHVyaV9jb21wb25lbnRzID0gJHVyaTsKCgkJ
CQkkdGhpcy0+ZGVidWcoJ1BMIGNvbXBvbmVudCBjb3VudDogJy5jb3VudCgkcGxfY29tcG9u
ZW50cykpOwoJCQkJJHRoaXMtPmRlYnVnKCdVUkwgY29tcG9uZW50IGNvdW50OiAnLmNvdW50
KCR1cmlfY29tcG9uZW50cykpOwoKCQkJCSRkYXRlID0gZmFsc2U7ICR0aXRsZV9wYWdlX2Zl
ZWQgPSBmYWxzZTsKCQkJCWZvcmVhY2goJHBsX2NvbXBvbmVudHMgYXMgJHBsX2MpCgkJCQkJ
Ly8gQXJlIHdlIGV4cGVjdGluZyBhIGRhdGUgY29tcG9uZW50PyBJZiBzbyB0aGUgbnVtYmVy
IG9mIHBsIGFuZCB1cmkgY29tcG9uZW50cyB3b24ndCBtYXRjaAoJCQkJCWlmICgkcGxfY1sn
dHlwZSddID09ICdkYXRlJykKCQkJCQkgCSRkYXRlID0gdHJ1ZTsKCQkJCQkvLyBEbyB3ZSBo
YXZlIGVpdGhlciBhIHRpdGxlLCBwYWdlIG9yIGEgZmVlZCBjb21wb25lbnQ/CgkJCQkJZWxz
ZSBpZiAoaW5fYXJyYXkoJHBsX2NbJ3R5cGUnXSwgYXJyYXkoJ3RpdGxlJywgJ3BhZ2UnLCAn
ZmVlZCcpKSkKCQkJCQkJJHRpdGxlX3BhZ2VfZmVlZCA9IHRydWU7CgoJCQkJaWYgKCEkdGl0
bGVfcGFnZV9mZWVkKQoJCQkJCS8vIElmIHRoZXJlIGlzbid0IGEgdGl0bGUsIHBhZ2Ugb3Ig
ZmVlZCBjb21wb25lbnQgdGhlbiBhcHBlbmQgYSBzcGVjaWFsIHR5cGUgZm9yIGNsZWF2ZXIg
cGFydGlhbCBtYXRjaGluZwoJCQkJCSRwbF9jb21wb25lbnRzW10gPSBhcnJheSgndHlwZScg
PT4gJ3RpdGxlX3BhZ2VfZmVlZCcsICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywg
J3JlZ2V4JyA9PiAnJywgJ3RleHQnID0+ICcnKTsKCgkJCQkvLyBFeGl0IGVhcmx5IGlmIHRo
ZXJlIGFyZSBtb3JlIFVSTCBjb21wb25lbnRzIHRoYW4gUEwgY29tcG9uZW50cywKCQkJCS8v
IHRha2luZyBpbnRvIGFjY291bnQgd2hldGhlciB0aGVyZSBpcyBhIGRhdGEgY29tcG9uZW50
CgkJCQlpZiAoISR1cmlfY29tcG9uZW50c1swXSB8fCBjb3VudCgkdXJpX2NvbXBvbmVudHMp
ID4gY291bnQoJHBsX2NvbXBvbmVudHMpICsgKCRkYXRlID8gMiA6IDApKSB7CgkJCQkJJHRo
aXMtPmRlYnVnKCdNb3JlIFVSTCBjb21wb25lbnRzIHRoYW4gUEwgY29tcG9uZW50cycpOwoJ
CQkJCWNvbnRpbnVlOwoJCQkJfQoKCQkJCS8vIFJlc2V0IHByZXRleHRfcmVwbGFjZW1lbnQg
YXMgd2UgYXJlIGFib3V0IHRvIHN0YXJ0IGFub3RoZXIgY29tcGFyaXNvbgoJCQkJJHByZXRl
eHRfcmVwbGFjZW1lbnQgPSBhcnJheSgncGVybWxpbmtfaWQnID0+ICRpZCk7CgoJCQkJLy8g
UmVzZXQgdGhlIGFydGljbGUgY29udGV4dCBzdHJpbmcKCQkJCSRjb250ZXh0ID0gYXJyYXko
KTsKCQkJCXVuc2V0KCRjb250ZXh0X3N0cik7CgkJCQlpZiAoIWVtcHR5KCRkZXNfc2VjdGlv
bikpCgkJCQkJJGNvbnRleHRbXSA9ICJgU2VjdGlvbmAgPSAnJGRlc19zZWN0aW9uJyI7CgkJ
CQlpZiAoIWVtcHR5KCRkZXNfY2F0ZWdvcnkpKQoJCQkJCSRjb250ZXh0W10gPSAiKGBDYXRl
Z29yeTFgID0gJyRkZXNfY2F0ZWdvcnknIE9SIGBDYXRlZ29yeTJgID0gJyRkZXNfY2F0ZWdv
cnknKSI7CgkJCQkkY29udGV4dF9zdHIgPSAoY291bnQoJGNvbnRleHQpID4gMCA/ICdhbmQg
Jy5qb2luKCcgYW5kICcsICRjb250ZXh0KSA6ICcnKTsKCgkJCQkvLyBBc3N1bWUgdGhlcmUg
aXMgbm8gbWF0Y2gKCQkJCSRwYXJ0aWFsX21hdGNoID0gZmFsc2U7CgkJCQkkY2xlYXZlcl9w
YXJ0aWFsX21hdGNoID0gZmFsc2U7CgoJCQkJLy8gTG9vcCB0aHJvdWdoIHRoZSBwZXJtbGlu
ayBjb21wb25lbnRzCgkJCQlmb3JlYWNoICgkcGxfY29tcG9uZW50cyBhcyAkcGxfY19pbmRl
eCA9PiAkcGxfYykgewoJCQkJCS8vIEFzc3VtZSB0aGVyZSBpcyBubyBtYXRjaAoJCQkJCSRt
YXRjaCA9IGZhbHNlOwoKCQkJCQkvLyBDaGVjayB0byBzZWUgaWYgdGhlcmUgYXJlIHN0aWxs
IFVSSSBjb21wb25lbnRzIHRvIGJlIGNoZWNrZWQuCgkJCQkJaWYgKGNvdW50KCR1cmlfY29t
cG9uZW50cykpCgkJCQkJCS8vIEdldCB0aGUgbmV4dCBjb21wb25lbnQuCgkJCQkJCSR1cmlf
YyA9IGFycmF5X3NoaWZ0KCR1cmlfY29tcG9uZW50cyk7CgoJCQkJCWVsc2UgaWYgKCEkdGl0
bGVfcGFnZV9mZWVkICYmIGNvdW50KCRwbF9jb21wb25lbnRzKSAtIDEgPT0gJHVyaV9jb21w
b25lbnRfY291bnQpIHsKCQkJCQkJLy8gSWYgd2UgYXBwZW5kZWQgYSB0aXRsZV9wYWdlX2Zl
ZWQgY29tcG9uZW50IGVhcmxpZXIgYW5kIHBlcm1saW5rIGFuZCBVUkkgY29tcG9uZW50cwoJ
CQkJCQkvLyBjb3VudHMgYXJlIGVxdWFsLCB3ZSBtdXN0IG9mIGZpbmlzaGVkIGNoZWNraW5n
IHRoaXMgcGVybWxpbmssIGFuZCBpdCBtYXRjaGVzIHNvIGJyZWFrLgoJCQkJCQkkbWF0Y2gg
PSB0cnVlOwoJCQkJCQlicmVhazsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJLy8gSWYgdGhlcmUg
YXJlIG5vIG1vcmUgVVJJIGNvbXBvbmVudHMgdGhlbiB3ZSBoYXZlIGEgcGFydGlhbCBtYXRj
aC4KCQkJCQkJLy8gU3RvcmUgdGhlIHBhcnRpYWwgbWF0Y2ggZGF0YSB1bmxlc3MgdGhlcmUg
aGFzIGJlZW4gYSBwcmVjZWRpbmcgcGVybWxpbmsgd2l0aCB0aGUKCQkJCQkJLy8gc2FtZSBu
dW1iZXIgb2YgY29tcG9uZW50cywgYXMgcGVybWxpbmsgaGF2ZSBhbHJlYWR5IGJlZW4gc29y
dGVkIGJ5IHByZWNlZGVuY2UuCgkJCQkJCWlmICghYXJyYXlfa2V5X2V4aXN0cygkdXJpX2Nv
bXBvbmVudF9jb3VudCwgJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcykpCgkJCQkJCQkkdGhpcy0+
cGFydGlhbF9tYXRjaGVzWyR1cmlfY29tcG9uZW50X2NvdW50XSA9ICRwcmV0ZXh0X3JlcGxh
Y2VtZW50OwoKCQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2Vz
IGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJdW5z
ZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoKCQkJCQkJLy8gQnJlYWsgZWFybHkgZm9ybSB0
aGUgZm9yZWFjaCBwZXJtbGluayBjb21wb25lbnRzIGxvb3AuCgkJCQkJCSRwYXJ0aWFsX21h
dGNoID0gdHJ1ZTsKCQkJCQkJYnJlYWs7CgkJCQkJfQoKCQkJCQkvLyBFeHRyYWN0IHRoZSBw
ZXJtbGluayBjb21wb25lbnRzLgoJCQkJCWV4dHJhY3QoJHBsX2MpOwoKCQkJCQkvLyBJZiBp
dCdzIGEgZGF0ZSwgZ3JhYiBhbmQgY29tYmluZSB0aGUgbmV4dCB0d28gVVJJIGNvbXBvbmVu
dHMuCgkJCQkJaWYgKCR0eXBlID09ICdkYXRlJykKCQkJCQkJJHVyaV9jIC49ICcvJy5hcnJh
eV9zaGlmdCgkdXJpX2NvbXBvbmVudHMpLicvJy5hcnJheV9zaGlmdCgkdXJpX2NvbXBvbmVu
dHMpOwoKCQkJCQkvLyBEZWNvZGUgdGhlIFVSTAoJCQkJCSR1cmlfYyA9IHVybGRlY29kZSgk
dXJpX2MpOwoKCQkJCQkvLyBBbHdheXMgY2hlY2sgdGhlIHR5cGUgdW5sZXNzIHRoZSBwcmVm
aXggb3Igc3VmZml4IGFyZW4ndCB0aGVyZQoJCQkJCSRjaGVja190eXBlID0gdHJ1ZTsKCgkJ
CQkJLy8gQ2hlY2sgcHJlZml4CgkJCQkJaWYgKCRwcmVmaXggJiYgJHRoaXMtPnByZWYoJ3No
b3dfcHJlZml4JykpIHsKCQkJCQkJJHNhbml0aXplZF9wcmVmaXggPSB1cmxkZWNvZGUoJHRo
aXMtPmVuY29kZV91cmwoJHByZWZpeCkpOwoJCQkJCQlpZiAoKCRwb3MgPSBzdHJwb3MoJHVy
aV9jLCAkc2FuaXRpemVkX3ByZWZpeCkpID09PSBmYWxzZSB8fCAkcG9zICE9IDApIHsKCQkJ
CQkJCSRjaGVja190eXBlID0gZmFsc2U7CgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NhblwndCBm
aW5kIHByZWZpeDogJy4kcHJlZml4KTsKCQkJCQkJfSBlbHNlCgkJCQkJCQkvLyBDaGVjayBw
YXNzZWQsIHJlbW92ZSBwcmVmaXggcmVhZHkgZm9yIHRoZSBuZXh0IGNoZWNrCgkJCQkJCQkk
dXJpX2MgPSBzdWJzdHJfcmVwbGFjZSgkdXJpX2MsICcnLCAwLCBzdHJsZW4oJHNhbml0aXpl
ZF9wcmVmaXgpKTsKCQkJCQl9CgoJCQkJCS8vIENoZWNrIHN1ZmZpeAoJCQkJCWlmICgkY2hl
Y2tfdHlwZSAmJiAkc3VmZml4ICYmICR0aGlzLT5wcmVmKCdzaG93X3N1ZmZpeCcpKSB7CgkJ
CQkJCSRzYW5pdGl6ZWRfc3VmZml4ID0gdXJsZGVjb2RlKCR0aGlzLT5lbmNvZGVfdXJsKCRz
dWZmaXgpKTsKCQkJCQkJaWYgKCgkcG9zID0gc3RycnBvcygkdXJpX2MsICRzYW5pdGl6ZWRf
c3VmZml4KSkgPT09IGZhbHNlKSB7CgkJCQkJCQkkY2hlY2tfdHlwZSA9IGZhbHNlOwoJCQkJ
CQkJJHRoaXMtPmRlYnVnKCdDYW5cJ3QgZmluZCBzdWZmaXg6ICcuJHN1ZmZpeCk7CgkJCQkJ
CX0gZWxzZQoJCQkJCQkJLy8gQ2hlY2sgcGFzc2VkLCByZW1vdmUgc3VmZml4IHJlYWR5IGZv
ciB0aGUgbmV4dCBjaGVjawoJCQkJCQkJJHVyaV9jID0gc3Vic3RyX3JlcGxhY2UoJHVyaV9j
LCAnJywgJHBvcywgc3RybGVuKCRzYW5pdGl6ZWRfc3VmZml4KSk7CgkJCQkJfQoKCQkJCQkv
LyBCb3RoIHRoZSBwcmVmaXggYW5kIHN1ZmZpeCBzZXR0aW5ncyBoYXZlIHBhc3NlZAoJCQkJ
CWlmICgkY2hlY2tfdHlwZSkgewoJCQkJCQkkdGhpcy0+ZGVidWcoJ0NoZWNraW5nIGlmICIn
LiR1cmlfYy4nIiBpcyBvZiB0eXBlICInLiR0eXBlLiciJyk7CgkJCQkJCSR1cmlfYyA9IGRv
U2xhc2goJHVyaV9jKTsKCgkJCQkJCS8vCgkJCQkJCWlmICgkcHJlZnNbJ3Blcm1hbGlua190
aXRsZV9mb3JtYXQnXSkgewoJCQkJCQkJJG10X3NlYXJjaCA9IGFycmF5KCcvXy8nLCAnL1wu
aHRtbCQvJyk7CgkJCQkJCQkkbXRfcmVwbGFjZSA9IGFycmF5KCctJywgJycpOwoJCQkJCQl9
IGVsc2UgewoJCQkJCQkJJG10X3NlYXJjaCA9IGFycmF5KCcvKD86XnxfKSguKS9lJywgJy9c
Lmh0bWwkLycpOwoJCQkJCQkJJG10X3JlcGxhY2UgPSBhcnJheSgic3RydG91cHBlcignXFwx
JykiLCAnJyk7CgkJCQkJCX0KCQkJCQkJJG10X3VyaV9jID0gJHRoaXMtPnByZWYoJ3JlZGly
ZWN0X210X3N0eWxlX2xpbmtzJykKCQkJCQkJCT8gcHJlZ19yZXBsYWNlKCRtdF9zZWFyY2gs
ICRtdF9yZXBsYWNlLCAkdXJpX2MpCgkJCQkJCQk6ICcnOwoKCQkJCQkJLy8gQ29tcGFyZSBi
YXNlZCBvbiB0eXBlCgkJCQkJCXN3aXRjaCAoJHR5cGUpIHsKCQkJCQkJCWNhc2UgJ3NlY3Rp
b24nOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygnbmFtZScsICd0eHBfc2VjdGlvbics
ICIoYG5hbWVgIGxpa2UgJyR1cmlfYycgb3IgYG5hbWVgIGxpa2UgJyRtdF91cmlfYycpIGxp
bWl0IDEiKSkgewoJCQkJCQkJCQkkdGhpcy0+ZGVidWcoJ1NlY3Rpb24gbmFtZTogJy4kcnNb
J25hbWUnXSk7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ10gPSAkcnNbJ25h
bWUnXTsKCQkJCQkJCQkJJGNvbnRleHRbXSA9ICJgU2VjdGlvbmAgPSAneyRyc1snbmFtZSdd
fSciOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJ
CQkJCQkJY2FzZSAnY2F0ZWdvcnknOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygnbmFt
ZScsICd0eHBfY2F0ZWdvcnknLCAiKGBuYW1lYCBsaWtlICckdXJpX2MnIG9yIGBuYW1lYCBs
aWtlICckbXRfdXJpX2MnKSBhbmQgYHR5cGVgID0gJ2FydGljbGUnIGxpbWl0IDEiKSkgewoJ
CQkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NhdGVnb3J5IG5hbWU6ICcuJHJzWyduYW1lJ10pOwoJ
CQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYyddID0gJHJzWyduYW1lJ107CgkJCQkJ
CQkJCSRjb250ZXh0W10gPSAiKGBDYXRlZ29yeTFgID0gJ3skcnNbJ25hbWUnXX0nIE9SIGBD
YXRlZ29yeTJgID0gJyR1cmlfYycpIjsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJ
CQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3RpdGxlJzoKCQkJCQkJCQlpZiAoJHJz
ID0gc2FmZV9yb3coJ3VybF90aXRsZScsICd0ZXh0cGF0dGVybicsICIoYHVybF90aXRsZWAg
bGlrZSAnJHVyaV9jJyBvciBgdXJsX3RpdGxlYCBsaWtlICckbXRfdXJpX2MnKSAkY29udGV4
dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgbGltaXQgMSIpKSB7CgkJCQkJCQkJLy9pZiAoJHJz
ID0gc2FmZV9yb3coJ0lELCBQb3N0ZWQnLCAndGV4dHBhdHRlcm4nLCAiKGB1cmxfdGl0bGVg
IGxpa2UgJyR1cmlfYycgb3IgYHVybF90aXRsZWAgbGlrZSAnJG10X3VyaV9jJykgJGNvbnRl
eHRfc3RyIGFuZCBgU3RhdHVzYCA+PSA0IGxpbWl0IDEiKSkgewoJCQkJCQkJCQkvLyR0aGlz
LT5kZWJ1ZygnQXJ0aWNsZSBpZDogJy4kcnNbJ0lEJ10pOwoJCQkJCQkJCQkkbXRfcmVkaXJl
Y3QgPSAoJHVyaV9jICE9ICRtdF91cmlfYyk7CgkJCQkJCQkJCS8vJHByZXRleHRfcmVwbGFj
ZW1lbnRbJ2lkJ10gPSAkcnNbJ0lEJ107CgkJCQkJCQkJCS8vJHByZXRleHRfcmVwbGFjZW1l
bnRbJ1Bvc3RlZCddID0gJHJzWydQb3N0ZWQnXTsKCQkJCQkJCQkJLy8kcHJldGV4dFsnbnVt
UGFnZXMnXSA9IDE7CgkJCQkJCQkJCS8vJHByZXRleHRbJ2lzX2FydGljbGVfbGlzdCddID0g
ZmFsc2U7CgkJCQkJCQkJCSR0aGlzLT5kZWJ1ZygnVVJMIFRpdGxlOiAnLiRyc1sndXJsX3Rp
dGxlJ10pOwoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsndXJsX3RpdGxlJ10gPSAk
cnNbJ3VybF90aXRsZSddOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJ
CQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnaWQnOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3Jv
dygnSUQsIFBvc3RlZCcsICd0ZXh0cGF0dGVybicsICJgSURgID0gJyR1cmlfYycgJGNvbnRl
eHRfc3RyIGFuZCBgU3RhdHVzYCA+PSA0IGxpbWl0IDEiKSkgewoJCQkJCQkJCQkkcHJldGV4
dF9yZXBsYWNlbWVudFsnaWQnXSA9ICRyc1snSUQnXTsKCQkJCQkJCQkJJHByZXRleHRfcmVw
bGFjZW1lbnRbJ1Bvc3RlZCddID0gJHJzWydQb3N0ZWQnXTsKCQkJCQkJCQkJJHByZXRleHRb
J251bVBhZ2VzJ10gPSAxOwoJCQkJCQkJCQkkcHJldGV4dFsnaXNfYXJ0aWNsZV9saXN0J10g
PSBmYWxzZTsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVh
azsKCQkJCQkJCWNhc2UgJ2F1dGhvcic6CgkJCQkJCQkJaWYgKCRhdXRob3IgPSBzYWZlX2Zp
ZWxkKCduYW1lJywgJ3R4cF91c2VycycsICJSZWFsTmFtZSBsaWtlICckdXJpX2MnIGxpbWl0
IDEiKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYXV0aG9yJ10gPSAkYXV0
aG9yOwoJCQkJCQkJCQkkY29udGV4dFtdID0gImBBdXRob3JJRGAgPSAnJGF1dGhvciciOwoJ
CQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJ
Y2FzZSAnbG9naW4nOgoJCQkJCQkJCWlmICgkYXV0aG9yID0gc2FmZV9maWVsZCgnbmFtZScs
ICd0eHBfdXNlcnMnLCAibmFtZSBsaWtlICckdXJpX2MnIGxpbWl0IDEiKSkgewoJCQkJCQkJ
CQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYXV0aG9yJ10gPSAkYXV0aG9yOwoJCQkJCQkJCQkk
Y29udGV4dFtdID0gImBBdXRob3JJRGAgPSAnJGF1dGhvciciOwoJCQkJCQkJCQkkbWF0Y2gg
PSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnY3VzdG9tJzoK
CQkJCQkJCQkkY3VzdG9tX29wdGlvbnMgPSBhcnJheV92YWx1ZXMoYXJyYXlfbWFwKGFycmF5
KCR0aGlzLCAiZW5jb2RlX3VybCIpLCBzYWZlX2NvbHVtbigiY3VzdG9tXyRjdXN0b20iLCAn
dGV4dHBhdHRlcm4nLCAiY3VzdG9tXyRjdXN0b20gIT0gJyciKSkpOwoJCQkJCQkJCWlmICgk
dGhpcy0+cHJlZignZm9yY2VfbG93ZXJjYXNlX3VybHMnKSkKCQkJCQkJCQkJJGN1c3RvbV9v
cHRpb25zID0gYXJyYXlfbWFwKCJzdHJ0b2xvd2VyIiwgJGN1c3RvbV9vcHRpb25zKTsKCQkJ
CQkJCQlpZiAoaW5fYXJyYXkoJHVyaV9jLCAkY3VzdG9tX29wdGlvbnMpKSB7CgkJCQkJCQkJ
CSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdk
YXRlJzoKCQkJCQkJCQlpZiAocHJlZ19tYXRjaCgnL15cZHs0fVwvXGR7Mn1cL1xkezJ9JC8n
LCAkdXJpX2MpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydkYXRlJ10gPSBz
dHJfcmVwbGFjZSgnLycsICctJywgJHVyaV9jKTsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsK
CQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3llYXInOgoJCQkJCQkJCWlm
IChwcmVnX21hdGNoKCcvXlxkezR9JC8nLCAkdXJpX2MpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0
X3JlcGxhY2VtZW50Wyd5ZWFyJ10gPSAkdXJpX2M7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7
CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdtb250aCc6CgkJCQkJCQlj
YXNlICdkYXknOgoJCQkJCQkJCWlmIChwcmVnX21hdGNoKCcvXlxkezJ9JC8nLCAkdXJpX2Mp
KSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WyR0eXBlXSA9ICR1cmlfYzsKCQkJ
CQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNh
c2UgJ3BhZ2UnOgoJCQkJCQkJCWlmIChpc19udW1lcmljKCR1cmlfYykpIHsKCQkJCQkJCQkJ
JHByZXRleHRfcmVwbGFjZW1lbnRbJ3BnJ10gPSAkdXJpX2M7CgkJCQkJCQkJCSRtYXRjaCA9
IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdmZWVkJzoKCQkJ
CQkJCQlpZiAoaW5fYXJyYXkoJHVyaV9jLCBhcnJheSgncnNzJywgJ2F0b20nKSkpIHsKCQkJ
CQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJHVyaV9jXSA9IDE7CgkJCQkJCQkJCSRtYXRj
aCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdzZWFyY2gn
OgoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncSddID0gJHVyaV9jOwoJCQkJCQkJ
CQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICd0ZXh0JzoKCQkJ
CQkJCQlpZiAoJHRoaXMtPmVuY29kZV91cmwoJHRleHQpID09ICR1cmlfYykgewoJCQkJCQkJ
CQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsicGVybWxp
bmtfdGV4dF97JG5hbWV9Il0gPSAkdXJpX2M7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJ
CQkJCQljYXNlICdyZWdleCc6CgkJCQkJCQkJLy8gQ2hlY2sgdG8gc2VlIGlmIHJlZ2V4IGlz
IHZhbGlkIHdpdGhvdXQgb3V0cHV0dGluZyBlcnJvciBtZXNzYWdlcy4KCQkJCQkJCQlvYl9z
dGFydCgpOwoJCQkJCQkJCXByZWdfbWF0Y2goJHJlZ2V4LCAkdXJpX2MsICRyZWdleF9tYXRj
aGVzKTsKCQkJCQkJCQkkaXNfdmFsaWRfcmVnZXggPSAhKG9iX2dldF9jbGVhbigpKTsKCQkJ
CQkJCQlpZiAoJGlzX3ZhbGlkX3JlZ2V4ICYmIEAkcmVnZXhfbWF0Y2hlc1swXSkgewoJCQkJ
CQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsicGVy
bWxpbmtfcmVnZXhfeyRuYW1lfSJdID0gJHJlZ2V4X21hdGNoZXNbMF07CgkJCQkJCQkJfQoJ
CQkJCQkJYnJlYWs7CgkJCQkJCX0gLy8gc3dpdGNoIHR5cGUgZW5kCgoJCQkJCQkvLyBVcGRh
dGUgdGhlIGFydGljbGUgY29udGV4dCBzdHJpbmcKCQkJCQkJJGNvbnRleHRfc3RyID0gKGNv
dW50KCRjb250ZXh0KSA+IDAgPyAnYW5kICcuam9pbignIGFuZCAnLCAkY29udGV4dCkgOiAn
Jyk7CgoJCQkJCQkkdGhpcy0+ZGVidWcoKCRtYXRjaCA9PSB0cnVlKSA/ICdZRVMnIDogJ05P
Jyk7CgoJCQkJCQlpZiAoISRtYXRjaCAmJiAhJGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkgewoJ
CQkJCQkJLy8gVGhlcmUgaGFzbid0IGJlZW4gYSBtYXRjaCBvciBhIGNvbXBsZXRlIGNsZWF2
ZXIgcGFydGlhbCBtYXRjaC4gTGV0cyB0cnkgdG8gYmUgY2xlYXZlciBhbmQKCQkJCQkJCS8v
IGNoZWNrIHRvIHNlZSBpZiB0aGlzIGNvbXBvbmVudCBpcyBlaXRoZXIgYSB0aXRsZSwgcGFn
ZSBvciBhIGZlZWQuIFRoaXMgbWFrZXMgaXQgbW9yZSBwcm9iYWJsZQoJCQkJCQkJLy8gYSBz
dWNjZXNzZnVsIG1hdGNoIGZvciBhIGdpdmVuIHBlcm1saW5rIHJ1bGUgb2NjdXJzLgoJCQkJ
CQkJJHRoaXMtPmRlYnVnKCdDaGVja2luZyBpZiAiJy4kdXJpX2MuJyIgaXMgb2YgdHlwZSAi
dGl0bGVfcGFnZV9mZWVkIicpOwoKCQkJCQkJCWlmICgkdHlwZSAhPSAndGl0bGUnICYmICR1
cmxfdGl0bGUgPSBzYWZlX2ZpZWxkKCd1cmxfdGl0bGUnLCAndGV4dHBhdHRlcm4nLCAiYHVy
bF90aXRsZWAgbGlrZSAnJHVyaV9jJyAkY29udGV4dF9zdHIgYW5kIGBTdGF0dXNgID49IDQg
bGltaXQgMSIpKSB7CgkJCQkJCQkJLy8kcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSA9ICRJ
RDsKCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsndXJsX3RpdGxlJ10gPSAkdXJsX3Rp
dGxlOwoJCQkJCQkJCSRwcmV0ZXh0WydudW1QYWdlcyddID0gMTsKCQkJCQkJCQkkcHJldGV4
dFsnaXNfYXJ0aWNsZV9saXN0J10gPSBmYWxzZTsKCQkJCQkJCQkkY2xlYXZlcl9wYXJ0aWFs
X21hdGNoID0gdHJ1ZTsKCQkJCQkJCX0gZWxzZSBpZiAoJHRoaXMtPnByZWYoJ2NsZWFuX3Bh
Z2VfYXJjaGl2ZV9saW5rcycpICYmICR0eXBlICE9ICdwYWdlJyAmJiBpc19udW1lcmljKCR1
cmlfYykpIHsKCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncGcnXSA9ICR1cmlfYzsK
CQkJCQkJCQkkY2xlYXZlcl9wYXJ0aWFsX21hdGNoID0gdHJ1ZTsKCQkJCQkJCX0gZWxzZSBp
ZiAoJHR5cGUgIT0gJ2ZlZWQnICYmIGluX2FycmF5KCR1cmlfYywgYXJyYXkoJ3JzcycsICdh
dG9tJykpKSB7CgkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJHVyaV9jXSA9IDE7CgkJ
CQkJCQkJJGNsZWF2ZXJfcGFydGlhbF9tYXRjaCA9IHRydWU7CgkJCQkJCQl9CgoJCQkJCQkJ
JHRoaXMtPmRlYnVnKCgkY2xlYXZlcl9wYXJ0aWFsX21hdGNoID09IHRydWUpID8gJ1lFUycg
OiAnTk8nKTsKCgkJCQkJCQlpZiAoJGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkgewoJCQkJCQkJ
CSR0aGlzLT5jbGVhdmVyX3BhcnRpYWxfbWF0Y2ggPSAkcHJldGV4dF9yZXBsYWNlbWVudDsK
CgkJCQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2VzIGNvdWxk
IG9mIGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJCQl1bnNldCgk
cHJldGV4dF9yZXBsYWNlbWVudCk7CgoJCQkJCQkJCSRjbGVhdmVyX3BhcnRpYWxfbWF0Y2gg
PSB0cnVlOwoJCQkJCQkJCWNvbnRpbnVlIDI7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9IC8v
IGNoZWNrIHR5cGUgZW5kCgoJCQkJCS8vIEJyZWFrIGVhcmx5IGlmIHRoZSBjb21wb25lbnQg
ZG9lc24ndCBtYXRjaCwgYXMgdGhlcmUgaXMgbm8gcG9pbnQgY29udGludWluZwoJCQkJCWlm
ICgkbWF0Y2ggPT0gZmFsc2UpIHsKCQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVu
dCBhcyBjaGFuZ2VzIGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25l
bnQKCQkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoJCQkJCQlicmVhazsKCQkJ
CQl9CgkJCQl9IC8vIGZvcmVhY2ggcGVybWxpbmsgY29tcG9uZW50IGVuZAoKCQkJCWlmICgh
aXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10pKSB7CgkJCQkJaWYoaXNzZXQoJHBy
ZXRleHRfcmVwbGFjZW1lbnRbJ3VybF90aXRsZSddKSkgewoJCQkJCQlpZihpc3NldCgkcHJl
dGV4dF9yZXBsYWNlbWVudFsneWVhciddKSkgewoJCQkJCQkJJGRhdGVfdmFsID0gJHByZXRl
eHRfcmVwbGFjZW1lbnRbJ3llYXInXTsKCQkJCQkJCWlmKGlzc2V0KCRwcmV0ZXh0X3JlcGxh
Y2VtZW50Wydtb250aCddKSkgewoJCQkJCQkJCSRkYXRlX3ZhbCAuPSAnLScgLiAkcHJldGV4
dF9yZXBsYWNlbWVudFsnbW9udGgnXTsKCQkJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBs
YWNlbWVudFsnZGF5J10pKSB7CgkJCQkJCQkJCSRkYXRlX3ZhbCAuPSAnLScgLiAkcHJldGV4
dF9yZXBsYWNlbWVudFsnZGF5J107CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJ
CWlmICgkcnMgPSBzYWZlX3JvdygnSUQsIFBvc3RlZCcsICd0ZXh0cGF0dGVybicsICJgdXJs
X3RpdGxlYCBsaWtlICckcHJldGV4dF9yZXBsYWNlbWVudFt1cmxfdGl0bGVdJyAkY29udGV4
dF9zdHIgYW5kIGBQb3N0ZWRgIGxpa2UgJyRkYXRlX3ZhbCUnIGFuZCBgU3RhdHVzYCA+PSA0
IG9yZGVyIGJ5IGBJRGAgZGVzYyBsaW1pdCAxIikpIHsKCQkJCQkJCSRwcmV0ZXh0X3JlcGxh
Y2VtZW50WydpZCddID0gJHJzWydJRCddOwoJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRb
J1Bvc3RlZCddID0gJHJzWydQb3N0ZWQnXTsKCQkJCQkJCSRwcmV0ZXh0WydudW1QYWdlcydd
ID0gMTsKCQkJCQkJCSRwcmV0ZXh0Wydpc19hcnRpY2xlX2xpc3QnXSA9IGZhbHNlOwoJCQkJ
CQl9CgkJCQkJfQoJCQkJfQoKCQkJCWlmICgkbWF0Y2ggfHwgJHBhcnRpYWxfbWF0Y2ggfHwg
JGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkgewoJCQkJCS8vIEV4dHJhY3QgdGhlIHNldHRpbmdz
IGZvciB0aGlzIHBlcm1saW5rCgkJCQkJQGV4dHJhY3QoJHBlcm1saW5rc1skcHJldGV4dF9y
ZXBsYWNlbWVudFsncGVybWxpbmtfaWQnXV1bJ3NldHRpbmdzJ10pOwoKCQkJCQkvLyBDaGVj
ayB0aGUgcGVybWxpbmsgc2VjdGlvbiBhbmQgY2F0ZWdvcnkgY29uZGl0aW9ucwoJCQkJCWlm
ICgoIWVtcHR5KCRjb25fc2VjdGlvbikgJiYgJGNvbl9zZWN0aW9uICE9IEAkcHJldGV4dF9y
ZXBsYWNlbWVudFsncyddKSB8fAoJCQkJCSghZW1wdHkoJGNvbl9jYXRlZ29yeSkgJiYgJGNv
bl9jYXRlZ29yeSAhPSBAJHByZXRleHRfcmVwbGFjZW1lbnRbJ2MnXSkpIHsKCQkJCQkJJHRo
aXMtPmRlYnVnKCdQZXJtbGluayBjb25kaXRpb25zIGZhaWxlZCcpOwoJCQkJCQlpZiAoQCRj
b25fc2VjdGlvbikgICR0aGlzLT5kZWJ1ZygnY29uX3NlY3Rpb24gPSAnLiAkY29uX3NlY3Rp
b24pOwoJCQkJCQlpZiAoQCRjb25fY2F0ZWdvcnkpICR0aGlzLT5kZWJ1ZygnY29uX2NhdGVn
b3J5ID0gJy4gJGNvbl9jYXRlZ29yeSk7CgoJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNl
bWVudCk7CgkJCQkJfQoJCQkJCWVsc2UgaWYgKCRtYXRjaCAmJiBpc3NldCgkcHJldGV4dF9y
ZXBsYWNlbWVudCkpCgkJCQkJCSR0aGlzLT5kZWJ1ZygnV2UgaGF2ZSBhIG1hdGNoIScpOwoK
CQkJCQllbHNlIGlmICgkcGFydGlhbF9tYXRjaCAmJiBjb3VudCgkdGhpcy0+cGFydGlhbF9t
YXRjaGVzKSkKCQkJCQkJJHRoaXMtPmRlYnVnKCdXZSBoYXZlIGEgXCdwYXJ0aWFsIG1hdGNo
XCcnKTsKCgkJCQkJZWxzZSBpZiAoJGNsZWF2ZXJfcGFydGlhbF9tYXRjaCAmJiBpc3NldCgk
Y2xlYXZlcl9wYXJ0aWFsX21hdGNoKSkKCQkJCQkJJHRoaXMtPmRlYnVnKCdXZSBoYXZlIGEg
XCdjbGVhdmVyIHBhcnRpYWwgbWF0Y2hcJycpOwoKCQkJCQllbHNlIHsKCQkJCQkJJHRoaXMt
PmRlYnVnKCdFcnJvcjogQ2FuXCd0IGRldGVybWluZSB0aGUgY29ycmVjdCB0eXBlIG1hdGNo
Jyk7CgkJCQkJCS8vIFRoaXMgcGVybWxpbmsgaGFzIGZhaWxlZCwgY29udGludWUgZXhlY3V0
aW9uIG9mIHRoZSBmb3JlYWNoIHBlcm1saW5rcyBsb29wCgkJCQkJCXVuc2V0KCRwcmV0ZXh0
X3JlcGxhY2VtZW50KTsKCQkJCQl9CgkJCQl9CgoJCQkJLy8gV2UgaGF2ZSBhIG1hdGNoCgkJ
CQlpZiAoQCRwcmV0ZXh0X3JlcGxhY2VtZW50KQoJCQkJCWJyZWFrOwoKCQkJfSAvLyBmb3Jl
YWNoIHBlcm1saW5rcyBlbmQKCgkJCS8vIElmIHRoZXJlIGlzIG5vIG1hdGNoIHJlc3RvcmUg
dGhlIG1vc3QgbGlrZWx5IHBhcnRpYWwgbWF0Y2guIFNvcnRlZCBieSBudW1iZXIgb2YgY29t
cG9uZW50cyBhbmQgdGhlbiBwcmVjZWRlbmNlCgkJCWlmICghQCRwcmV0ZXh0X3JlcGxhY2Vt
ZW50ICYmIGNvdW50KCR0aGlzLT5wYXJ0aWFsX21hdGNoZXMpKSB7CgkJCQkkcHRfc2xpY2Ug
PSBhcnJheV9zbGljZSgkdGhpcy0+cGFydGlhbF9tYXRjaGVzLCAtMSk7CgkJCQkkcHJldGV4
dF9yZXBsYWNlbWVudCA9IGFycmF5X3NoaWZ0KCRwdF9zbGljZSk7CgkJCX0KCQkJdW5zZXQo
JHRoaXMtPnBhcnRpYWxfbWF0Y2hlcyk7CgoJCQkvLyBSZXN0b3JlIHRoZSBjbGVhdmVyX3Bh
cnRpYWxfbWF0Y2ggaWYgdGhlcmUgaXMgbm8gb3RoZXIgbWF0Y2hlcwoJCQlpZiAoIUAkcHJl
dGV4dF9yZXBsYWNlbWVudCAmJiAkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21hdGNoKQoJCQkJ
JHByZXRleHRfcmVwbGFjZW1lbnQgPSAkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21hdGNoOwoJ
CQl1bnNldCgkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21hdGNoKTsKCgkJCS8vIEV4dHJhY3Qg
dGhlIHNldHRpbmdzIGZvciB0aGlzIHBlcm1saW5rCgkJCUBleHRyYWN0KCRwZXJtbGlua3Nb
JHByZXRleHRfcmVwbGFjZW1lbnRbJ3Blcm1saW5rX2lkJ11dWydzZXR0aW5ncyddKTsKCgkJ
CS8vIElmIHByZXRleHRfcmVwbGFjZW1lbnQgaXMgc3RpbGwgc2V0IGhlcmUgdGhlbiB3ZSBo
YXZlIGEgbWF0Y2gKCQkJaWYgKEAkcHJldGV4dF9yZXBsYWNlbWVudCkgewoJCQkJJHRoaXMt
PmRlYnVnKCdQcmV0ZXh0IFJlcGxhY2VtZW50ICcucHJpbnRfcigkcHJldGV4dF9yZXBsYWNl
bWVudCwgMSkpOwoKCQkJCWlmICghZW1wdHkoJGRlc19zZWN0aW9uKSkKCQkJCQkkcHJldGV4
dF9yZXBsYWNlbWVudFsncyddID0gJGRlc19zZWN0aW9uOwoJCQkJaWYgKCFlbXB0eSgkZGVz
X2NhdGVnb3J5KSkKCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYyddID0gJGRlc19jYXRl
Z29yeTsKCQkJCWlmICghZW1wdHkoJGRlc19mZWVkKSkKCQkJCQkkcHJldGV4dF9yZXBsYWNl
bWVudFskZGVzX2ZlZWRdID0gMTsKCgkJCQlpZiAoQCRwcmV0ZXh0X3JlcGxhY2VtZW50Wydp
ZCddICYmIEAkcHJldGV4dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10pIHsKCQkJCSAJaWYgKCRu
cCA9IGdldE5leHRQcmV2KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCddLCAkcHJldGV4dF9y
ZXBsYWNlbWVudFsnUG9zdGVkJ10sIEAkcHJldGV4dF9yZXBsYWNlbWVudFsncyddKSkKCQkJ
CQkJJHByZXRleHRfcmVwbGFjZW1lbnQgPSBhcnJheV9tZXJnZSgkcHJldGV4dF9yZXBsYWNl
bWVudCwgJG5wKTsKCQkJCX0KCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydQb3N0
ZWQnXSk7CgoJCQkJLy8gSWYgdGhlcmUgaXMgYSBtYXRjaCB0aGVuIHdlIG1vc3Qgc2V0IHRo
ZSBodHRwIHN0YXR1cyBjb3JyZWN0bHkgYXMgdHhwJ3MgcHJldGV4dCBtaWdodCBzZXQgaXQg
dG8gNDA0CgkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnc3RhdHVzJ10gPSAnMjAwJzsKCgkJ
CQkvLyBTdG9yZSB0aGUgb3JnaW5pYWwgSFRUUCBzdGF0dXMgY29kZQoJCQkJLy8gV2UgbWln
aHQgbmVlZCB0byBsb2cgdGhlIHBhZ2UgaGl0IGlmIGl0IGVxdWFscyA0MDQKCQkJCSRvcmdp
bmlhbF9zdGF0dXMgPSAkcHJldGV4dFsnc3RhdHVzJ107CgoJCQkJLy8gVHhwIG9ubHkgbG9v
a3MgYXQgdGhlIG1vbnRoLCBidXQgZHVlIHRvIGhvdyB3ZSBwaGFzZSB0aGUgbW9udGggd2Ug
Y2FuIG1hbmlwdWxhdGUgdGhlIHNxbCB0byBvdXIgbmVlZHMKCQkJCWlmIChhcnJheV9rZXlf
ZXhpc3RzKCdkYXRlJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKSB7CgkJCQkJJHByZXRleHRf
cmVwbGFjZW1lbnRbJ21vbnRoJ10gPSAkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF0ZSddOwoJ
CQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydkYXRlJ10pOwoJCQkJfSBlbHNlIGlm
IChhcnJheV9rZXlfZXhpc3RzKCd5ZWFyJywgJHByZXRleHRfcmVwbGFjZW1lbnQpIHx8CgkJ
CQlhcnJheV9rZXlfZXhpc3RzKCdtb250aCcsICRwcmV0ZXh0X3JlcGxhY2VtZW50KSB8fAoJ
CQkJYXJyYXlfa2V5X2V4aXN0cygnZGF5JywgJHByZXRleHRfcmVwbGFjZW1lbnQpKSB7CgkJ
CQkJJG1vbnRoID0gJyc7CgkJCQkJJG1vbnRoIC49IChhcnJheV9rZXlfZXhpc3RzKCd5ZWFy
JywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/ICRwcmV0ZXh0X3JlcGxhY2VtZW50
Wyd5ZWFyJ10uJy0nIDogJ19fX18tJzsKCQkJCQkkbW9udGggLj0gKGFycmF5X2tleV9leGlz
dHMoJ21vbnRoJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/ICRwcmV0ZXh0X3Jl
cGxhY2VtZW50Wydtb250aCddLictJyA6ICdfXy0nOwoJCQkJCSRtb250aCAuPSAoYXJyYXlf
a2V5X2V4aXN0cygnZGF5JywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/ICRwcmV0
ZXh0X3JlcGxhY2VtZW50WydkYXknXS4nICcgOiAnX18gJzsKCgkJCQkJJHByZXRleHRfcmVw
bGFjZW1lbnRbJ21vbnRoJ10gPSAkbW9udGg7CgkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFj
ZW1lbnRbJ3llYXInXSk7CgkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ2RheSdd
KTsKCQkJCX0KCgkJCQkvLyBTZWN0aW9uIG5lZWRzIHRvIGJlIGRlZmluZWQgc28gd2UgY2Fu
IGFsd2F5cyBnZXQgYSBwYWdlIHRlbXBsYXRlLgoJCQkJaWYgKCFhcnJheV9rZXlfZXhpc3Rz
KCdzJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJewoJCQkJCWlmICghQCRwcmV0ZXh0
X3JlcGxhY2VtZW50WydpZCddKQoJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncyddID0g
J2RlZmF1bHQnOwoJCQkJCWVsc2UKCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3MnXSA9
IHNhZmVfZmllbGQoJ1NlY3Rpb24nLCAndGV4dHBhdHRlcm4nLCAnSUQgPSAnLiRwcmV0ZXh0
X3JlcGxhY2VtZW50WydpZCddKTsKCQkJCX0KCgkJCQkvLyBTZXQgdGhlIGNzcyBhbmQgcGFn
ZSB0ZW1wbGF0ZSwgb3RoZXJ3aXNlIHdlIGdldCBhbiB1bmtub3duIHNlY3Rpb24KCQkJCSRz
ZWN0aW9uX3NldHRpbmdzID0gc2FmZV9yb3coJ2NzcywgcGFnZScsICd0eHBfc2VjdGlvbics
ICJuYW1lID0gJ3skcHJldGV4dF9yZXBsYWNlbWVudFsncyddfScgbGltaXQgMSIpOwoJCQkJ
JHByZXRleHRfcmVwbGFjZW1lbnRbJ3BhZ2UnXSA9IChAJGRlc19wYWdlKSA/ICRkZXNfcGFn
ZSA6ICRzZWN0aW9uX3NldHRpbmdzWydwYWdlJ107CgkJCQkkcHJldGV4dF9yZXBsYWNlbWVu
dFsnY3NzJ10gID0gJHNlY3Rpb25fc2V0dGluZ3NbJ2NzcyddOwoKCQkJCSR0aGlzLT5tYXRj
aGVkX3Blcm1saW5rID0gJHByZXRleHRfcmVwbGFjZW1lbnQ7CgoJCQkJZ2xvYmFsICRwZXJt
bGlua19tb2RlOwoKCQkJCWlmIChpbl9hcnJheSgkcHJlZnNbJ3Blcm1saW5rX21vZGUnXSwg
YXJyYXkoJ2lkX3RpdGxlJywgJ3NlY3Rpb25faWRfdGl0bGUnKSkgJiYgQCRwcmV0ZXh0X3Jl
cGxhY2VtZW50WydwZyddICYmICFAJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10pIHsKCQkJ
CQkkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSA9ICcnOwoJCQkJCSRwcmV0ZXh0X3JlcGxh
Y2VtZW50Wydpc19hcnRpY2xlX2xpc3QnXSA9IHRydWU7CgkJCQl9CgoJCQkJLy8gTWVyZ2Ug
cHJldGV4dF9yZXBsYWNlbWVudCB3aXRoIHByZXRleHQKCQkJCSRwcmV0ZXh0ID0gYXJyYXlf
bWVyZ2UoJHByZXRleHQsICRwcmV0ZXh0X3JlcGxhY2VtZW50KTsKCgkJCQlpZiAoaXNfbnVt
ZXJpYyhAJHByZXRleHRbJ2lkJ10pKSB7CgkJCQkJJGEgPSBzYWZlX3JvdygnKiwgdW5peF90
aW1lc3RhbXAoUG9zdGVkKSBhcyB1UG9zdGVkLCB1bml4X3RpbWVzdGFtcChFeHBpcmVzKSBh
cyB1RXhwaXJlcywgdW5peF90aW1lc3RhbXAoTGFzdE1vZCkgYXMgdUxhc3RNb2QnLCAndGV4
dHBhdHRlcm4nLCAnSUQ9Jy5pbnR2YWwoJHByZXRleHRbJ2lkJ10pLicgYW5kIFN0YXR1cyA+
PSA0Jyk7CgkJCQkJcG9wdWxhdGVBcnRpY2xlRGF0YSgkYSk7CgkJCQl9CgoJCQkJLy8gRXhw
b3J0IHJlcXVpcmVkIHZhbHVlcyB0byB0aGUgZ2xvYmFsIG5hbWVzcGFjZQoJCQkJZm9yZWFj
aCAoYXJyYXkoJ2lkJywgJ3MnLCAnYycsICdwZycsICdpc19hcnRpY2xlX2xpc3QnLCAncHJl
dl9pZCcsICdwcmV2X3RpdGxlJywgJ25leHRfaWQnLCAnbmV4dF90aXRsZScsICdjc3MnKSBh
cyAka2V5KSB7CgkJCQkJaWYgKGFycmF5X2tleV9leGlzdHMoJGtleSwgJHByZXRleHQpKQoJ
CQkJCQkkR0xPQkFMU1ska2V5XSA9ICRwcmV0ZXh0WyRrZXldOwoJCQkJfQoKCQkJCWlmIChj
b3VudCgkdGhpcy0+bWF0Y2hlZF9wZXJtbGluaykgfHwgQCRtdF9yZWRpcmVjdCkgewoJCQkJ
CSRwbF9pbmRleCA9ICRwcmV0ZXh0WydwZXJtbGlua19pZCddOwoJCQkJCWlmICghQCRtdF9y
ZWRpcmVjdCB8fCAhJHRoaXMtPnByZWYoJ3JlZGlyZWN0X210X3N0eWxlX2xpbmtzJykpIHsK
CQkJCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkcHJldGV4dFsncGVybWxpbmtfaWQn
XSk7CgkJCQkJCSRwbF9pbmRleCA9IEAkcGxbJ3NldHRpbmdzJ11bJ2Rlc19wZXJtbGluaydd
OwoJCQkJCX0KCgkJCQkJaWYgKEAkcHJldGV4dFsnaWQnXSAmJiAkcGxfaW5kZXgpIHsKCQkJ
CQkJaWYgKGNvdW50KCR0aGlzLT5nZXRfcGVybWxpbmsoJHBsX2luZGV4KSkgPiAwKSB7CgkJ
CQkJCQlvYl9jbGVhbigpOwoJCQkJCQkJZ2xvYmFsICRzaXRldXJsOwoJCQkJCQkJJHJzID0g
c2FmZV9yb3coJyosIElEIGFzIHRoaXNpZCwgdW5peF90aW1lc3RhbXAoUG9zdGVkKSBhcyBw
b3N0ZWQnLCAndGV4dHBhdHRlcm4nLCAiSUQgPSAneyRwcmV0ZXh0WydpZCddfSciKTsKCQkJ
CQkJCSRob3N0ID0gcnRyaW0oc3RyX3JlcGxhY2UocnRyaW0oZG9TdHJpcCgkcHJldGV4dFsn
c3VicGF0aCddKSwgJy8nKSwgJycsIGh1KSwgJy8nKTsKCQkJCQkJCSR0aGlzLT5yZWRpcmVj
dCgkaG9zdC4kdGhpcy0+X3Blcm1saW5rdXJsKCRycywgUEVSTUxJTktVUkwsICRwbF9pbmRl
eCksICR0aGlzLT5wcmVmKCdwZXJtbGlua19yZWRpcmVjdF9odHRwX3N0YXR1cycpKTsKCQkJ
CQkJfQoJCQkJCX0gZWxzZSBpZiAoJHVybCA9IEAkcGxbJ3NldHRpbmdzJ11bJ2Rlc19sb2Nh
dGlvbiddKSB7CgkJCQkJCW9iX2NsZWFuKCk7CgkJCQkJCSR0aGlzLT5yZWRpcmVjdCgkdXJs
LCAkdGhpcy0+cHJlZigndXJsX3JlZGlyZWN0X2h0dHBfc3RhdHVzJykpOwoJCQkJCX0KCQkJ
CX0KCgkJCQlpZiAoQCRwcmV0ZXh0Wydyc3MnXSkgewoJCQkJCWlmIChAJHByZXRleHRbJ3Mn
XSkKCQkJCQkJJF9QT1NUWydzZWN0aW9uJ10gPSAkcHJldGV4dFsncyddOwoJCQkJCWlmIChA
JHByZXRleHRbJ2MnXSkKCQkJCQkJJF9QT1NUWydjYXRlZ29yeSddID0gJHByZXRleHRbJ2Mn
XTsKCQkJCQlvYl9jbGVhbigpOwoJCQkJCWluY2x1ZGUgdHhwYXRoLicvcHVibGlzaC9yc3Mu
cGhwJzsKCQkJCQlleGl0KHJzcygpKTsKCQkJCX0KCgkJCQlpZiAoQCRwcmV0ZXh0WydhdG9t
J10pIHsKCQkJCQlpZiAoQCRwcmV0ZXh0WydzJ10pCgkJCQkJCSRfUE9TVFsnc2VjdGlvbidd
ID0gJHByZXRleHRbJ3MnXTsKCQkJCQlpZiAoQCRwcmV0ZXh0WydjJ10pCgkJCQkJCSRfUE9T
VFsnY2F0ZWdvcnknXSA9ICRwcmV0ZXh0WydjJ107CgkJCQkJb2JfY2xlYW4oKTsKCQkJCQlp
bmNsdWRlIHR4cGF0aC4nL3B1Ymxpc2gvYXRvbS5waHAnOwoJCQkJCWV4aXQoYXRvbSgpKTsK
CQkJCX0KCgkJCQkkdGhpcy0+ZGVidWcoJ1ByZXRleHQgJy5wcmludF9yKCRwcmV0ZXh0LCAx
KSk7CgkJCX0gZWxzZSB7CgkJCQkkdGhpcy0+ZGVidWcoJ05PIENIQU5HRVMgTUFERScpOwoJ
CQl9CgoJCQkvLyBMb2cgdGhpcyBwYWdlIGhpdAoJCQlpZiAoQCRvcmdpbmlhbF9zdGF0dXMg
PT0gNDA0KQoJCQkJbG9nX2hpdCgkcHJldGV4dFsnc3RhdHVzJ10pOwoKCQkJLy8gU3RhcnQg
b3V0cHV0IGJ1ZmZlcmluZyBhbmQgcHNldWRvIGNhbGxiYWNrIHRvIHRleHRwYXR0ZXJuX2Vu
ZAoJCQlvYl9zdGFydChhcnJheSgmJHRoaXMsICdfdGV4dHBhdHRlcm5fZW5kX2NhbGxiYWNr
JykpOwoKCQkJLy8gVHhQIDQuMC41IChyMjQzNikgaW50cm9kdWNlZCB0aGUgdGV4dHBhdHRl
cm5fZW5kIGNhbGxiYWNrIG1ha2luZyB0aGUgZm9sbG93aW5nIHJlZHVuZGFudAoJCQkkdmVy
c2lvbiA9IGFycmF5X3N1bShhcnJheV9tYXAoCgkJCQljcmVhdGVfZnVuY3Rpb24oJyRsaW5l
JywgJ2lmIChwcmVnX21hdGNoKFwnL15cJCcuJ0xhc3RDaGFuZ2VkUmV2aXNpb246IChcdysp
IFwkL1wnLCAkbGluZSwgJG1hdGNoKSkgcmV0dXJuICRtYXRjaFsxXTsnKSwKCQkJCUBmaWxl
KHR4cGF0aCAuICcvcHVibGlzaC5waHAnKQoJCQkpKTsKCQkJaWYgKCR2ZXJzaW9uID49ICcy
NDM2JykgcmV0dXJuOwoKCQkJLy8gUmVtb3ZlIHRoZSBwbHVnaW4gY2FsbGJhY2tzIHdoaWNo
IGhhdmUgYWxyZWFkeSBiZWVuIGNhbGxlZAoJCQlmdW5jdGlvbiBmaWx0ZXJfY2FsbGJhY2tz
KCRjKSB7CgkJCQlpZiAoJGNbJ2V2ZW50J10hPSd0ZXh0cGF0dGVybicpIHJldHVybiB0cnVl
OwoJCQkJaWYgKEAkY1snZnVuY3Rpb24nXVswXS0+cGx1Z2luX25hbWUgPT0gJ2dicF9wZXJt
YW5lbnRfbGlua3MnICYmCgkJCQkJCUAkY1snZnVuY3Rpb24nXVsxXSA9PSAnX3RleHRwYXR0
ZXJuJykKCQkJCXsKCQkJCQkkR0xPQkFMU1snZ2JwX2ZvdW5kX3NlbGYnXSA9IHRydWU7CgkJ
CQkJcmV0dXJuIGZhbHNlOwoJCQkJfQoJCQkJcmV0dXJuIEAkR0xPQkFMU1snZ2JwX2ZvdW5k
X3NlbGYnXTsKCQkJfQoJCQkkcGx1Z2luX2NhbGxiYWNrID0gYXJyYXlfZmlsdGVyKCRwbHVn
aW5fY2FsbGJhY2ssICdmaWx0ZXJfY2FsbGJhY2tzJyk7CgkJCXVuc2V0KCRHTE9CQUxTWydn
YnBfZm91bmRfc2VsZiddKTsKCgkJCS8vIFJlLWNhbGwgdGV4dHBhdHRlcm4KCQkJdGV4dHBh
dHRlcm4oKTsKCgkJCS8vIENhbGwgY3VzdG9tIHRleHRwYXR0ZXJuX2VuZCBjYWxsYmFjawoJ
CQkkdGhpcy0+X3RleHRwYXR0ZXJuX2VuZCgpOwoKCQkJLy8gdGV4dHBhdHRlcm4oKSBoYXMg
cnVuLCBraWxsIHRoZSBjb25uZWN0aW9uCgkJCWRpZSgpOwoJCX0KCgl9IC8vIGZ1bmN0aW9u
IF90ZXh0cGF0dGVybiBlbmQKCglmdW5jdGlvbiBfdGV4dHBhdHRlcm5fZW5kICgpIHsKCQkv
LyBSZWRpcmVjdCB0byBhIDQwNCBpZiB0aGUgcGFnZSBudW1iZXIgaXMgZ3JlYXRlciB0aGFu
IHRoZSBtYXggbnVtYmVyIG9mIHBhZ2VzCgkJLy8gSGFzIHRvIGJlIGFmdGVyIHRleHRwYXR0
ZXJuKCkgYXMgJHRoaXNwYWdlIGlzIHNldCBkdXJpbmcgPHR4cDphcnRpY2xlIC8+CgkJZ2xv
YmFsICR0aGlzcGFnZSwgJHByZXRleHQ7CgkJaWYgKChAJHByZXRleHRbJ3BnJ10gJiYgaXNz
ZXQoJHRoaXNwYWdlKSkgJiYKCQkoJHRoaXNwYWdlWydudW1QYWdlcyddIDwgJHByZXRleHRb
J3BnJ10pKSB7CgkJCW9iX2VuZF9jbGVhbigpOwoJCQl0eHBfZGllKGdUeHQoJzQwNF9ub3Rf
Zm91bmQnKSwgJzQwNCcpOwoJCX0KCgkJLy8gU3RvcCBvdXRwdXQgYnVmZmVyaW5nLCB0aGlz
IHNlbmRzIHRoZSBidWZmZXIgdG8gX3RleHRwYXR0ZXJuX2VuZF9jYWxsYmFjaygpCgkJd2hp
bGUgKEBvYl9lbmRfZmx1c2goKSk7CgoJfSAvLyBmdW5jdGlvbiBfdGV4dHBhdHRlcm5fZW5k
IGVuZAoKCWZ1bmN0aW9uIF90ZXh0cGF0dGVybl9lbmRfY2FsbGJhY2sgKCRodG1sLCAkb3Zl
cnJpZGUgPSAnJykgewoJCWdsb2JhbCAkcHJldGV4dCwgJHByb2R1Y3Rpb25fc3RhdHVzOwoK
CQlpZiAoJG92ZXJyaWRlKSAkcHJldGV4dFsncGVybWxpbmtfb3ZlcnJpZGUnXSA9ICRvdmVy
cmlkZTsKCQkkaHRtbCA9IHByZWdfcmVwbGFjZV9jYWxsYmFjaygKCQkJJyVocmVmPSIoJy5o
dS4nfFw/KShbXiJdKikiJScsCgkJCWFycmF5KCYkdGhpcywgJ19wYWdlbGlua3VybCcpLAoJ
CQkkaHRtbAoJCSk7CgkJdW5zZXQoJHByZXRleHRbJ3Blcm1saW5rX292ZXJyaWRlJ10pOwoK
CQlpZiAoJHRoaXMtPnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rpb25fc3Rh
dHVzLCBhcnJheSgnZGVidWcnLCAndGVzdGluZycpKSkgewoJCQkkZGVidWcgPSBqb2luKG4s
ICR0aGlzLT5idWZmZXJfZGVidWcpOwoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnID0gYXJyYXko
KTsKCQkJaWYgKCRkZWJ1ZykKCQkJCSRodG1sID0gY29tbWVudChuLiRkZWJ1Zy5uKSAuICRo
dG1sOwoJCX0KCgkJcmV0dXJuICRodG1sOwoJfSAvLyBmdW5jdGlvbiBfdGV4dHBhdHRlcm5f
ZW5kX2NhbGxiYWNrIGVuZAoKCWZ1bmN0aW9uIGNoZWNrX3Blcm1saW5rX2NvbmRpdGlvbnMg
KCRwbCwgJGFydGljbGVfYXJyYXkpIHsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXlbJ3Nl
Y3Rpb24nXSkpICRhcnRpY2xlX2FycmF5WydzZWN0aW9uJ10gPSBAJGFydGljbGVfYXJyYXlb
J1NlY3Rpb24nXTsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MSddKSkg
JGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MSddID0gQCRhcnRpY2xlX2FycmF5WydDYXRlZ29y
eTEnXTsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MiddKSkgJGFydGlj
bGVfYXJyYXlbJ2NhdGVnb3J5MiddID0gQCRhcnRpY2xlX2FycmF5WydDYXRlZ29yeTInXTsK
CgkJaWYgKEAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9jYXRlZ29yeSddICYmICgkcGxbJ3NldHRp
bmdzJ11bJ2Nvbl9jYXRlZ29yeSddICE9ICRhcnRpY2xlX2FycmF5WydjYXRlZ29yeTEnXSB8
fCAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9jYXRlZ29yeSddICE9ICRhcnRpY2xlX2FycmF5Wydj
YXRlZ29yeTInXSkpCgkJCXJldHVybiBmYWxzZTsKCQlpZiAoQCRwbFsnc2V0dGluZ3MnXVsn
Y29uX3NlY3Rpb24nXSAmJiAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9zZWN0aW9uJ10gIT0gJGFy
dGljbGVfYXJyYXlbJ3NlY3Rpb24nXSkKCQkJcmV0dXJuIGZhbHNlOwoKCQlyZXR1cm4gdHJ1
ZTsKCX0KCglmdW5jdGlvbiBfcGVybWxpbmt1cmwgKCRhcnRpY2xlX2FycmF5LCAkdHlwZSA9
IFBFUk1MSU5LVVJMLCAkcGxfaW5kZXggPSBOVUxMKSB7CgkJZ2xvYmFsICRwcmV0ZXh0LCAk
cHJlZnMsICRwcm9kdWN0aW9uX3N0YXR1czsKCgkJaWYgKCR0eXBlID09IFBBR0VMSU5LVVJM
KQoJCQlyZXR1cm4gJHRoaXMtPnRvZ2dsZV9jdXN0b21fdXJsX2Z1bmMoJ3BhZ2VsaW5rdXJs
JywgJGFydGljbGVfYXJyYXkpOwoKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXkpKSByZXR1
cm47CgoJCWlmICgkcGxfaW5kZXgpCgkJCSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJHBs
X2luZGV4KTsKCQllbHNlIHsKCQkJLy8gR2V0IHRoZSBtYXRjaGVkIHByZXRleHQgcmVwbGFj
ZW1lbnQgYXJyYXkuCgkJCSRtYXRjaGVkID0gKGNvdW50KCR0aGlzLT5tYXRjaGVkX3Blcm1s
aW5rKSkKCQkJPyAkdGhpcy0+bWF0Y2hlZF9wZXJtbGluawoJCQk6IEBhcnJheV9zaGlmdChh
cnJheV9zbGljZSgkdGhpcy0+cGFydGlhbF9tYXRjaGVzLCAtMSkpOwoKCQkJaWYgKCFpc3Nl
dCgkcGwpICYmICRtYXRjaGVkICYmIGFycmF5X2tleV9leGlzdHMoJ2lkJywgJG1hdGNoZWQp
KSB7CgkJCQkvLyBUaGUgcGVybWxpbmsgaWQgaXMgc3RvcmVkIGluIHRoZSBwcmV0ZXh0IHJl
cGxhY2VtZW50IGFycmF5LCBzbyB3ZSBjYW4gZmluZCB0aGUgcGVybWxpbmsuCgkJCQkkcGwg
PSAkdGhpcy0+Z2V0X3Blcm1saW5rKCRtYXRjaGVkWydwZXJtbGlua19pZCddKTsKCQkJCWZv
cmVhY2ggKCRwbFsnY29tcG9uZW50cyddIGFzICRwbF9jKQoJCQkJCWlmIChpbl9hcnJheSgk
cGxfY1sndHlwZSddLCBhcnJheSgnZmVlZCcsICdwYWdlJykpIHx8ICEkdGhpcy0+Y2hlY2tf
cGVybWxpbmtfY29uZGl0aW9ucygkcGwsICRhcnRpY2xlX2FycmF5KSkgewoJCQkJCQl1bnNl
dCgkcGwpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCX0KCgkJCWlmICghaXNzZXQoJHBsKSkg
ewoJCQkJLy8gV2UgaGF2ZSBubyBwZXJtbGluayBpZCBzbyBncmFiIHRoZSBwZXJtbGluayB3
aXRoIHRoZSBoaWdoZXN0IHByZWNlZGVuY2UuCgkJCQkkcGVybWxpbmtzID0gJHRoaXMtPmdl
dF9hbGxfcGVybWxpbmtzKDEsIGFycmF5KCdmZWVkJywgJ3BhZ2UnKSk7CgkJCQlmb3JlYWNo
ICgkcGVybWxpbmtzIGFzICRrZXkgPT4gJHBsKQoJCQkJCWlmICghJHRoaXMtPmNoZWNrX3Bl
cm1saW5rX2NvbmRpdGlvbnMoJHBsLCAkYXJ0aWNsZV9hcnJheSkpCgkJCQkJCXVuc2V0KCRw
ZXJtbGlua3NbJGtleV0pOwoJCQkJJHBsID0gYXJyYXlfc2hpZnQoJHBlcm1saW5rcyk7CgkJ
CX0KCQl9CgoJCSR1cmkgPSAnJzsKCgkJaWYgKGlzX2FycmF5KCRwbCkgJiYgYXJyYXlfa2V5
X2V4aXN0cygnY29tcG9uZW50cycsICRwbCkpIHsKCQkJZXh0cmFjdCgkYXJ0aWNsZV9hcnJh
eSk7CgoJCQlpZiAoIWlzc2V0KCR0aXRsZSkpICR0aXRsZSA9ICRUaXRsZTsKCQkJaWYgKGVt
cHR5KCR1cmxfdGl0bGUpKSAkdXJsX3RpdGxlID0gc3RyaXBTcGFjZSgkdGl0bGUpOwoJCQlp
ZiAoZW1wdHkoJHNlY3Rpb24pKSAkc2VjdGlvbiA9ICRTZWN0aW9uOwoJCQlpZiAoZW1wdHko
JHBvc3RlZCkpICRwb3N0ZWQgPSAkUG9zdGVkOwoJCQlpZiAoZW1wdHkoJGF1dGhvcmlkKSkg
JGF1dGhvcmlkID0gQCRBdXRob3JJRDsKCQkJaWYgKGVtcHR5KCRjYXRlZ29yeTEpKSAkY2F0
ZWdvcnkxID0gQCRDYXRlZ29yeTE7CgkJCWlmIChlbXB0eSgkY2F0ZWdvcnkyKSkgJGNhdGVn
b3J5MiA9IEAkQ2F0ZWdvcnkyOwoJCQlpZiAoZW1wdHkoJHRoaXNpZCkpICR0aGlzaWQgPSAk
SUQ7CgoJCQkkcGxfY29tcG9uZW50cyA9ICRwbFsnY29tcG9uZW50cyddOwoKCQkJLy8gQ2hl
Y2sgdG8gc2VlIGlmIHRoZXJlIGlzIGEgdGl0bGUgY29tcG9uZW50LgoJCQkkdGl0bGUgPSBm
YWxzZTsKCQkJZm9yZWFjaCgkcGxfY29tcG9uZW50cyBhcyAkcGxfYykKCQkJCWlmICgkcGxf
Y1sndHlwZSddID09ICd0aXRsZScgfHwgJHBsX2NbJ3R5cGUnXSA9PSAnaWQnKQoJCQkJCSR0
aXRsZSA9IHRydWU7CgoJCQkvLyBJZiB0aGVyZSBpc24ndCBhIHRpdGxlIGNvbXBvbmVudCB0
aGVuIHdlIG5lZWQgdG8gYXBwZW5kIG9uZSB0byB0aGUgZW5kIG9mIHRoZSBVUkkKCQkJaWYg
KCEkdGl0bGUgJiYgJHRoaXMtPnByZWYoJ2F1dG9tYXRpY2FsbHlfYXBwZW5kX3RpdGxlJykp
CgkJCQkkcGxfY29tcG9uZW50c1tdID0gYXJyYXkoJ3R5cGUnID0+ICd0aXRsZScsICdwcmVm
aXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywgJ3JlZ2V4JyA9PiAnJywgJ3RleHQnID0+ICcn
KTsKCgkJCSR1cmkgPSBydHJpbShkb1N0cmlwKEAkcHJldGV4dFsnc3VicGF0aCddKSwgJy8n
KTsKCQkJZm9yZWFjaCAoJHBsX2NvbXBvbmVudHMgYXMgJHBsX2MpIHsKCQkJCSR1cmkgLj0g
Jy8nOwoKCQkJCSR0eXBlID0gJHBsX2NbJ3R5cGUnXTsKCQkJCXN3aXRjaCAoJHR5cGUpIHsK
CQkJCQljYXNlICdjYXRlZ29yeSc6CgkJCQkJCWlmICghQCRwbF9jWydjYXRlZ29yeSddKSAk
cGxfY1snY2F0ZWdvcnknXSA9IDE7CgkJCQkJCSRwcmltYXJ5ID0gJ2NhdGVnb3J5Jy4gJHBs
X2NbJ2NhdGVnb3J5J107CgkJCQkJCSRzZWNvbmRhcnkgPSAnY2F0ZWdvcnknLiAoMy0oaW50
KSRwbF9jWydjYXRlZ29yeSddKTsKCQkJCQkJJGNoZWNrX2NvbnRleHQgPSAoJHRoaXMtPnBy
ZWYoJ2pvaW5fcHJldGV4dF90b19wYWdlbGlua3MnKSAmJiAkdGhpcy0+cHJlZignY2hlY2tf
cHJldGV4dF9jYXRlZ29yeV9jb250ZXh0JykpOwoJCQkJCQlpZiAoISRjaGVja19jb250ZXh0
IHx8ICQkcHJpbWFyeSA9PSAkcHJldGV4dFsnYyddKQoJCQkJCQkJJHVyaV9jID0gJCRwcmlt
YXJ5OwoJCQkJCQllbHNlIGlmICghJGNoZWNrX2NvbnRleHQgfHwgJCRzZWNvbmRhcnkgPT0g
JHByZXRleHRbJ2MnXSkKCQkJCQkJCSR1cmlfYyA9ICQkc2Vjb25kYXJ5OwoJCQkJCQllbHNl
IGlmICgkdGhpcy0+cHJlZignZGVidWcnKSAmJiBpbl9hcnJheSgkcHJvZHVjdGlvbl9zdGF0
dXMsIGFycmF5KCdkZWJ1ZycsICd0ZXN0aW5nJykpKQoJCQkJCQkJJHVyaV9jID0gJy0tSU5W
QUxJRF9DQVRFR09SWS0tJzsKCQkJCQkJZWxzZSB7CgkJCQkJCQl1bnNldCgkdXJpKTsKCQkJ
CQkJCWJyZWFrIDI7CgkJCQkJCX0KCQkJCQlicmVhazsKCQkJCQljYXNlICdzZWN0aW9uJzoK
CQkJCQkJJGNoZWNrX2NvbnRleHQgPSAoJHRoaXMtPnByZWYoJ2pvaW5fcHJldGV4dF90b19w
YWdlbGlua3MnKSAmJiAkdGhpcy0+cHJlZignY2hlY2tfcHJldGV4dF9zZWN0aW9uX2NvbnRl
eHQnKSk7CgkJCQkJCWlmICghJGNoZWNrX2NvbnRleHQgfHwgJHNlY3Rpb24gPT0gJHByZXRl
eHRbJ3MnXSkKCQkJCQkJCSR1cmlfYyA9ICRzZWN0aW9uOwoJCQkJCQllbHNlIHsKCQkJCQkJ
CXVuc2V0KCR1cmkpOwoJCQkJCQkJYnJlYWsgMjsKCQkJCQkJfQoJCQkJCWJyZWFrOwoJCQkJ
CWNhc2UgJ3RpdGxlJzogJHVyaV9jID0gJHVybF90aXRsZTsgYnJlYWs7CgkJCQkJY2FzZSAn
aWQnOiAkdXJpX2MgPSAkdGhpc2lkOyBicmVhazsKCQkJCQljYXNlICdhdXRob3InOiAkdXJp
X2MgPSBzYWZlX2ZpZWxkKCdSZWFsTmFtZScsICd0eHBfdXNlcnMnLCAibmFtZSBsaWtlICd7
JGF1dGhvcmlkfSciKTsgYnJlYWs7CgkJCQkJY2FzZSAnbG9naW4nOiAkdXJpX2MgPSAkYXV0
aG9yaWQ7IGJyZWFrOwoJCQkJCWNhc2UgJ2RhdGUnOiAkdXJpX2MgPSBleHBsb2RlKCcvJywg
ZGF0ZSgnWS9tL2QnLCAkcG9zdGVkKSk7IGJyZWFrOwoJCQkJCWNhc2UgJ3llYXInOiAkdXJp
X2MgPSBkYXRlKCdZJywgJHBvc3RlZCk7IGJyZWFrOwoJCQkJCWNhc2UgJ21vbnRoJzogJHVy
aV9jID0gZGF0ZSgnbScsICRwb3N0ZWQpOyBicmVhazsKCQkJCQljYXNlICdkYXknOiAkdXJp
X2MgPSBkYXRlKCdkJywgJHBvc3RlZCk7IGJyZWFrOwoJCQkJCWNhc2UgJ2N1c3RvbSc6CgkJ
CQkJCWlmICgkdXJpX2MgPSBAJGFydGljbGVfYXJyYXlbJHByZWZzWyJjdXN0b21feyRwbF9j
WydjdXN0b20nXX1fc2V0Il1dKTsKCQkJCQkJZWxzZSBpZiAoJHVyaV9jID0gQCRhcnRpY2xl
X2FycmF5WyJjdXN0b21feyRwbF9jWydjdXN0b20nXX0iXSk7CgkJCQkJCWVsc2UgaWYgKCR0
aGlzLT5wcmVmKCdkZWJ1ZycpICYmIGluX2FycmF5KCRwcm9kdWN0aW9uX3N0YXR1cywgYXJy
YXkoJ2RlYnVnJywgJ3Rlc3RpbmcnKSkpCgkJCQkJCQkkdXJpX2MgPSAnLS1VTlNFVF9DVVNU
T01fRklFTEQtLSc7CgkJCQkJCWVsc2UgewoJCQkJCQkJdW5zZXQoJHVyaSk7CgkJCQkJCQli
cmVhayAyOwoJCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAndGV4dCc6ICR1cmlfYyA9
ICRwbF9jWyd0ZXh0J107IGJyZWFrOwoJCQkJCWNhc2UgJ3JlZ2V4JzoKCQkJCQkJLy8gQ2hl
Y2sgdG8gc2VlIGlmIHJlZ2V4IGlzIHZhbGlkIHdpdGhvdXQgb3V0cHV0dGluZyBlcnJvciBt
ZXNzYWdlcy4KCQkJCQkJb2Jfc3RhcnQoKTsKCQkJCQkJcHJlZ19tYXRjaCgkcGxfY1sncmVn
ZXgnXSwgJHBsX2NbJ3JlZ2V4J10sICRyZWdleF9tYXRjaGVzKTsKCQkJCQkJJGlzX3ZhbGlk
X3JlZ2V4ID0gIShvYl9nZXRfY2xlYW4oKSk7CgkJCQkJCWlmICgkaXNfdmFsaWRfcmVnZXgp
IHsKCQkJCQkJCSRrZXkgPSAicGVybWxpbmtfcmVnZXhfeyRwbF9jWyduYW1lJ119IjsKCQkJ
CQkJCSR1cmlfYyA9IChhcnJheV9rZXlfZXhpc3RzKCRrZXksICRwcmV0ZXh0KSkgPyAkcHJl
dGV4dFska2V5XSA6ICRyZWdleF9tYXRjaGVzWzBdOwoJCQkJCQl9IGVsc2UgaWYgKCR0aGlz
LT5wcmVmKCdkZWJ1ZycpKQoJCQkJCQkJJHVyaV9jID0gJy0tSU5WQUxJRF9SRUdFWC0tJzsK
CQkJCQlicmVhazsKCQkJCX0KCgkJCQlpZiAoZW1wdHkoJHVyaV9jKSkKCQkJCQlpZiAoJHRo
aXMtPnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rpb25fc3RhdHVzLCBhcnJh
eSgnZGVidWcnLCAndGVzdGluZycpKSkKCQkJCQkJJHVyaV9jID0gJy0tUEVSTUxJTktfRk9S
TUFUX0VSUk9SLS0nOwoJCQkJCWVsc2UgewoJCQkJCQl1bnNldCgkdXJpKTsKCQkJCQkJYnJl
YWs7CgkJCQkJfQoKCQkJCWlmIChAJHBsX2NbJ3ByZWZpeCddKQoJCQkJCSR1cmkgLj0gJHRo
aXMtPmVuY29kZV91cmwoJHBsX2NbJ3ByZWZpeCddKTsKCgkJCQlpZiAoaXNfYXJyYXkoJHVy
aV9jKSkgewoJCQkJCWZvcmVhY2ggKCR1cmlfYyBhcyAkdXJpX2MyKQoJCQkJCQkkdXJpIC49
ICR0aGlzLT5lbmNvZGVfdXJsKCR1cmlfYzIpIC4gJy8nOwoJCQkJCSR1cmkgPSBydHJpbSgk
dXJpLCAnLycpOwoJCQkJfSBlbHNlCgkJCQkJJHVyaSAuPSAkdGhpcy0+ZW5jb2RlX3VybCgk
dXJpX2MpOwoKCQkJCWlmIChAJHBsX2NbJ3N1ZmZpeCddKQoJCQkJCSR1cmkgLj0gJHRoaXMt
PmVuY29kZV91cmwoJHBsX2NbJ3N1ZmZpeCddKTsKCgkJCQl1bnNldCgkdXJpX2MpOwoJCQl9
CgoJCQlpZiAoaXNzZXQoJHVyaSkpCgkJCQkkdXJpIC49ICcvJzsKCQl9CgoJCWlmICgkdXJp
X2VtcHR5ID0gZW1wdHkoJHVyaSkpIHsKCQkJLy8gSXQgaXMgcG9zc2libGUgdGhlIHVyaSBp
cyBzdGlsbCBlbXB0eSBpZiB0aGVyZSBpcyBubyBtYXRjaCBvciBpZiB3ZSdyZSB1c2luZwoJ
CQkvLyBzdHJpY3QgbWF0Y2hpbmcgaWYgc28gdHJ5IHRoZSBkZWZhdWx0IHBlcm1saW5rIG1v
ZGUuCgkJCSR1cmkgPSAkdGhpcy0+dG9nZ2xlX3Blcm1saW5rX21vZGUoJ3Blcm1saW5rdXJs
JywgJGFydGljbGVfYXJyYXkpOwoJCX0KCgkJaWYgKCR0aGlzLT5wcmVmKCdvbWl0X3RyYWls
aW5nX3NsYXNoJykpCgkJCSR1cmkgPSBydHJpbSgkdXJpLCAnLycpOwoKCQlpZiAoISR1cmlf
ZW1wdHkgJiYgaW5fYXJyYXkodHhwYXRoLicvcHVibGlzaC9yc3MucGhwJywgZ2V0X2luY2x1
ZGVkX2ZpbGVzKCkpIHx8IGluX2FycmF5KHR4cGF0aC4nL3B1Ymxpc2gvYXRvbS5waHAnLCBn
ZXRfaW5jbHVkZWRfZmlsZXMoKSkpIHsKCQkJJGhvc3QgPSBydHJpbShzdHJfcmVwbGFjZShy
dHJpbShkb1N0cmlwKEAkcHJldGV4dFsnc3VicGF0aCddKSwgJy8nKSwgJycsIGh1KSwgJy8n
KTsKCQkJJHVyaSA9ICRob3N0IC4gJHVyaTsKCQl9CgoJCXJldHVybiAoJHRoaXMtPnByZWYo
J2ZvcmNlX2xvd2VyY2FzZV91cmxzJykpID8gc3RydG9sb3dlcigkdXJpKSA6ICR1cmk7Cgl9
CgoJZnVuY3Rpb24gX3BhZ2VsaW5rdXJsICgkcGFydHMpIHsKCQlleHRyYWN0KGxBdHRzKGFy
cmF5KAoJCQkncGF0aCcJCT0+ICdpbmRleC5waHAnLAoJCQkncXVlcnknCQk9PiAnJywKCQkJ
J2ZyYWdtZW50Jwk9PiAnJywKCQkpLCBwYXJzZV91cmwoaHRtbF9lbnRpdHlfZGVjb2RlKHN0
cl9yZXBsYWNlKCcmIzM4OycsICcmJywgJHBhcnRzWzJdKSkpKSk7CgoJCS8vIFRpZHkgdXAg
bGlua3MgYmFjayB0byB0aGUgc2l0ZSBob21lcGFnZQoJCWlmICgkcGF0aCA9PSAnaW5kZXgu
cGhwJyAmJiBlbXB0eSgkcXVlcnkpKQoJCQlyZXR1cm4gJ2hyZWY9IicgLmh1LiAnIic7CgoJ
CS8vIEZpeCBtYXRjaGVzIGxpa2UgaHJlZj0iP3M9Zm9vIgoJCWVsc2UgaWYgKCRwYXRoICYm
IGVtcHR5KCRxdWVyeSkgJiYgJHBhcnRzWzFdID09ICc/JykgewoJCQkkcXVlcnkgPSAkcGF0
aDsKCQkJJHBhdGggPSAnaW5kZXgucGhwJzsKCQl9CgoJCS8vIENoZWNrIHRvIHNlZSBpZiB0
aGVyZSBpcyBxdWVyeSB0byB3b3JrIHdpdGguCgkJZWxzZSBpZiAoZW1wdHkoJHF1ZXJ5KSB8
fCAkcGF0aCAhPSAnaW5kZXgucGhwJyB8fCBzdHJwb3MoJHF1ZXJ5LCAnLycpID09PSB0cnVl
KQoJCQlyZXR1cm4gJHBhcnRzWzBdOwoKCQkvLyAnJmFtcDsnIHdpbGwgYnJlYWsgcGFyc2Vf
c3RyKCkgaWYgdGhleSBhcmUgZm91bmQgaW4gYSBxdWVyeSBzdHJpbmcKCQkkcXVlcnkgPSBz
dHJfcmVwbGFjZSgnJmFtcDsnLCAnJicsICRxdWVyeSk7CgoJCWlmICgkZnJhZ21lbnQpCgkJ
CSRmcmFnbWVudCA9ICcjJy4kZnJhZ21lbnQ7CgoJCWdsb2JhbCAkcHJldGV4dDsKCQlwYXJz
ZV9zdHIoJHF1ZXJ5LCAkcXVlcnlfcGFydCk7CgkJaWYgKCFhcnJheV9rZXlfZXhpc3RzKCdw
ZycsICRxdWVyeV9wYXJ0KSkKCQkJJHF1ZXJ5X3BhcnRbJ3BnJ10gPSAwOwoJCWlmICghYXJy
YXlfa2V5X2V4aXN0cygnaWQnLCAkcXVlcnlfcGFydCkpCgkJCSRxdWVyeV9wYXJ0WydpZCdd
ID0gMDsKCQlpZiAoIWFycmF5X2tleV9leGlzdHMoJ3JzcycsICRxdWVyeV9wYXJ0KSkKCQkJ
JHF1ZXJ5X3BhcnRbJ3JzcyddID0gMDsKCQlpZiAoIWFycmF5X2tleV9leGlzdHMoJ2F0b20n
LCAkcXVlcnlfcGFydCkpCgkJCSRxdWVyeV9wYXJ0WydhdG9tJ10gPSAwOwoJCWlmICgkdGhp
cy0+cHJlZignam9pbl9wcmV0ZXh0X3RvX3BhZ2VsaW5rcycpKQoJCQlleHRyYWN0KGFycmF5
X21lcmdlKCRwcmV0ZXh0LCAkcXVlcnlfcGFydCkpOwoJCWVsc2UKCQkJZXh0cmFjdCgkcXVl
cnlfcGFydCk7CgoJCS8vIFdlIGhhdmUgYSBpZCwgcGFzcyB0byBwZXJtbGlua3VybCgpCgkJ
aWYgKCRpZCkgewoJCQlpZiAoQCRzID09ICdmaWxlX2Rvd25sb2FkJykgewoJCQkJJHRpdGxl
ID0gKHZlcnNpb25fY29tcGFyZSgkZGJ2ZXJzaW9uLCAnNC4yJywgJz49JykpID8gTlVMTCA6
IHNhZmVfZmllbGQoJ2ZpbGVuYW1lJywgJ3R4cF9maWxlJywgImlkID0gJ3skaWR9JyIpOwoJ
CQkJJHVybCA9ICR0aGlzLT50b2dnbGVfcGVybWxpbmtfbW9kZSgnZmlsZWRvd25sb2FkdXJs
JywgYXJyYXkoJGlkLCAkdGl0bGUpLCB0cnVlKTsKCQkJfSBlbHNlIHsKCQkJCSRycyA9IHNh
ZmVfcm93KCcqLCBJRCBhcyB0aGlzaWQsIHVuaXhfdGltZXN0YW1wKFBvc3RlZCkgYXMgcG9z
dGVkJywgJ3RleHRwYXR0ZXJuJywgIklEID0gJ3skaWR9JyIpOwoJCQkJJHVybCA9ICR0aGlz
LT5fcGVybWxpbmt1cmwoJHJzLCBQRVJNTElOS1VSTCkgLiAkZnJhZ21lbnQ7CgkJCX0KCQkJ
cmV0dXJuICdocmVmPSInLiAkdXJsIC4nIic7CgkJfQoKCQlpZiAoQCRzID09ICdkZWZhdWx0
JykKCQkJdW5zZXQoJHMpOwoKCQkvLyBTb21lIFR4UCB0YWdzLCBlLmcuIDx0eHA6ZmVlZF9s
aW5rIC8+IHVzZSAnc2VjdGlvbicgb3IgJ2NhdGVnb3J5JyBpbmNvbnNpc3RlbnQKCQkvLyB3
aXRoIG1vc3Qgb3RoZXIgdGFncy4gUHJvY2VzcyB0aGVzZSBub3cgc28gd2Ugb25seSBoYXZl
IHRvIGNoZWNrICRzIGFuZCAkYy4KCQlpZiAoQCRzZWN0aW9uKSAgJHMgPSAkc2VjdGlvbjsK
CQlpZiAoQCRjYXRlZ29yeSkgJGMgPSAkY2F0ZWdvcnk7CgoJCS8vIERlYnVnZ2luZyBmb3Ig
YnVmZmVycwoJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICd1cmw6ICcuc3RyX3JlcGxhY2Uo
JyZhbXA7JywgJyYnLCAkcGFydHNbMV0uJHBhcnRzWzJdKTsKCQkkdGhpcy0+YnVmZmVyX2Rl
YnVnW10gPSAncGF0aDogJy4kcGF0aDsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncXVl
cnk6ICcuJHF1ZXJ5OwoJCWlmICgkZnJhZ21lbnQpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9
ICdmcmFnbWVudDogJy4kZnJhZ21lbnQ7CgoJCWlmIChAJGlkKSAkdGhpcy0+YnVmZmVyX2Rl
YnVnW10gPSAnaWQ6ICcuJGlkOwoJCWlmIChAJHMpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9
ICdzOiAnLiRzOwoJCWlmIChAJGMpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdjOiAnLiRj
OwoJCWlmIChAJHJzcykgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3JzczogJy4kcnNzOwoJ
CWlmIChAJGF0b20pICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdhdG9tOiAnLiRhdG9tOwoJ
CWlmIChAJHBnKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncGc6ICcuJHBnOwoJCWlmIChA
JHEpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdxOiAnLiRxOwoKCQlpZiAoQCRwcmV0ZXh0
WydwZXJtbGlua19vdmVycmlkZSddKSB7CgkJCSRvdmVycmlkZV9pZHMgPSBleHBsb2RlKCcs
JywgJHByZXRleHRbJ3Blcm1saW5rX292ZXJyaWRlJ10pOwoJCQlmb3JlYWNoICgkb3ZlcnJp
ZGVfaWRzIGFzICRvdmVycmlkZV9pZCkgewoJCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGlu
aygkb3ZlcnJpZGVfaWQpOwoJCQkJaWYgKGNvdW50KCRwbCkgPiAwKSAkcGVybWxpbmtzW10g
PSAkcGw7CgkJCX0KCQl9CgoJCWlmIChlbXB0eSgkcGVybWxpbmtzKSkgewoJCQkkcGVybWxp
bmtzID0gJHRoaXMtPmdldF9hbGxfcGVybWxpbmtzKDEpOwoKCQkJJHBlcm1saW5rc1snZ2Jw
X3Blcm1hbmVudF9saW5rc19kZWZhdWx0J10gPSBhcnJheSgKCQkJCSdjb21wb25lbnRzJyA9
PiBhcnJheSgKCQkJCQlhcnJheSgndHlwZScgPT4gJ3RleHQnLCAndGV4dCcgPT4gc3RydG9s
b3dlcih1cmxlbmNvZGUoZ1R4dCgnY2F0ZWdvcnknKSkpKSwKCQkJCQlhcnJheSgndHlwZScg
PT4gJ2NhdGVnb3J5JyksCgkJCQkpLAoJCQkJJ3NldHRpbmdzJyA9PiBhcnJheSgKCQkJCQkn
cGxfbmFtZScgPT4gJ2dicF9wZXJtYW5lbnRfbGlua3NfZGVmYXVsdCcsICdwbF9wcmVjZWRl
bmNlJyA9PiAnJywgJ3BsX3ByZXZpZXcnID0+ICcnLAoJCQkJCSdjb25fc2VjdGlvbicgPT4g
JycsICdjb25fY2F0ZWdvcnknID0+ICcnLCAnZGVzX3NlY3Rpb24nID0+ICcnLCAnZGVzX2Nh
dGVnb3J5JyA9PiAnJywKCQkJCQknZGVzX3Blcm1saW5rJyA9PiAnJywgJ2Rlc19mZWVkJyA9
PiAnJywgJ2Rlc19sb2NhdGlvbicgPT4gJycsCgkJCSkpOwoJCX0KCgkJJGN1cnJlbnRfc2Vn
bWVudHMgPSBleHBsb2RlKCcvJywgbHRyaW0oJHByZXRleHRbJ3JlcXVlc3RfdXJpJ10sICcv
JykpOwoKCQkkaGlnaGVzdF9tYXRjaF9jb3VudCA9IG51bGw7CgkJZm9yZWFjaCAoJHBlcm1s
aW5rcyBhcyAka2V5ID0+ICRwbCkgewoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnVGVz
dGluZyBwZXJtbGluazogJy4gJHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ10gLicgLSAnLiAk
a2V5OwoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnUHJldmlldzogJy4gJHBsWydzZXR0
aW5ncyddWydwbF9wcmV2aWV3J107CgkJCSRvdXQgPSBhcnJheSgpOyAka2V5cyA9IGFycmF5
KCk7ICRtYXRjaF9jb3VudCA9IDA7CgkJCWZvcmVhY2ggKCRwbFsnY29tcG9uZW50cyddIGFz
ICRpID0+ICRwbF9jKSB7CgkJCQlzd2l0Y2ggKCRwbF9jWyd0eXBlJ10pIHsKCQkJCQljYXNl
ICd0ZXh0JzoKCQkJCQkJJG91dFtdID0gJHBsX2NbJ3RleHQnXTsKCQkJCQlicmVhazsKCQkJ
CQljYXNlICdyZWdleCc6CgkJCQkJCSRvdXRbXSA9ICRwcmV0ZXh0WydwZXJtbGlua19yZWdl
eF8nLiRwbF9jWyduYW1lJ11dOwoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3NlY3Rpb24nOgoJ
CQkJCQlpZiAoQCRzKSAkb3V0W10gPSAkczsKCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJy
ZWFrOwoJCQkJCWNhc2UgJ2NhdGVnb3J5JzoKCQkJCQkJaWYgKEAkYykgJG91dFtdID0gJGM7
CgkJCQkJCWVsc2UgYnJlYWsgMjsKCQkJCQlicmVhazsKCQkJCQljYXNlICdmZWVkJzoKCQkJ
CQkJaWYgKEAkcnNzKSAka2V5c1tdID0gJG91dFtdID0gJ3Jzcyc7CgkJCQkJCWVsc2UgaWYg
KEAkYXRvbSkgJGtleXNbXSA9ICRvdXRbXSA9ICdhdG9tJzsKCQkJCQkJZWxzZSBicmVhayAy
OwoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3NlYXJjaCc6CgkJCQkJCWlmIChAJHEpICRvdXRb
XSA9ICRxOwoJCQkJCQllbHNlIGJyZWFrIDI7CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAncGFn
ZSc6CgkJCQkJCWlmIChAJHBnKSB7CgkJCQkJCQkkb3V0W10gPSAkcGc7CgkJCQkJCQkka2V5
c1tdID0gJ3BnJzsKCQkJCQkJfQoJCQkJCQllbHNlIGJyZWFrIDI7CgkJCQkJYnJlYWs7CgkJ
CQkJZGVmYXVsdDogYnJlYWsgMjsKCQkJCX0KCQkJCWlmIChpbl9hcnJheSgkcGxfY1sndHlw
ZSddLCBhcnJheSgndGV4dCcsICdyZWdleCcpKSkgewoJCQkJCWlmICgkY3VycmVudF9zZWdt
ZW50c1skaV0gPT0gZW5kKCRvdXQpICYmIHN0cmxlbihlbmQoJG91dCkpID4gMCkKCQkJCQkJ
JG1hdGNoX2NvdW50ICs9ICR0aGlzLT5wcmVmKCd0ZXh0X2FuZF9yZWdleF9zZWdtZW50X3Nj
b3JlcycpOwoJCQkJfQoJCQkJZWxzZWlmICghaW5fYXJyYXkoJHBsX2NbJ3R5cGUnXSwgYXJy
YXkoJ3RpdGxlJywgJ2lkJykpKQoJCQkJCSRtYXRjaF9jb3VudCsrOwoJCQkJZWxzZSBicmVh
azsKCQkJfQoKCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ01hdGNoIGNvdW50OiAnLiAk
bWF0Y2hfY291bnQ7CgoJCQkvLyBUb2RvOiBTdG9yZSBhY2NvcmRpbmcgdG8gdGhlIHByZWNl
ZGVuY2UgdmFsdWUKCQkJaWYgKGNvdW50KCRvdXQpID4gMCAmJiAoJG1hdGNoX2NvdW50ID4g
JGhpZ2hlc3RfbWF0Y2hfY291bnQgfHwgIWlzc2V0KCRoaWdoZXN0X21hdGNoX2NvdW50KSkg
JiYKCQkJISgka2V5ID09ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1bHQnICYmICEkbWF0
Y2hfY291bnQpKSB7CgkJCQlleHRyYWN0KCRwbFsnc2V0dGluZ3MnXSk7CgkJCQlpZiAoKGVt
cHR5KCRzKSAmJiBlbXB0eSgkYykpIHx8CgkJCQkoZW1wdHkoJGNvbl9zZWN0aW9uKSB8fCBA
JHMgPT0gJGNvbl9zZWN0aW9uKSB8fAoJCQkJKGVtcHR5KCRjb25fY2F0ZWdvcnkpIHx8IEAk
YyA9PSAkY29uX2NhdGVnb3J5KSkgewoJCQkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdO
ZXcgaGlnaGVzdCBtYXRjaCEgJy4gaW1wbG9kZSgnLycsICRvdXQpOwoJCQkJCSRoaWdoZXN0
X21hdGNoX2NvdW50ID0gJG1hdGNoX2NvdW50OwoJCQkJCSRtYXRjaCA9ICRvdXQ7CgkJCQkJ
JG1hdGNoX2tleXMgPSAka2V5czsKCQkJCX0KCQkJfQoJCX0KCgkJaWYgKGVtcHR5KCRtYXRj
aCkgJiYgKCEoQCRwZyAmJiAkdGhpcy0+cHJlZignY2xlYW5fcGFnZV9hcmNoaXZlX2xpbmtz
JykpIHx8IChAJHBnICYmIEAkcSkpKSB7CgkJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0LCAk
cGVybWxpbmtfbW9kZTsKCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ05vIG1hdGNoJzsK
CQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJy0tLS0nOwoJCQkkcHJldGV4dFsncGVybWxp
bmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAkcHJlZnNbJ3Blcm1saW5rX21vZGUnXTsK
CQkJJHVybCA9IHBhZ2VsaW5rdXJsKCRxdWVyeV9wYXJ0KTsKCQkJJHByZXRleHRbJ3Blcm1s
aW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJ21lc3N5JzsKCQkJcmV0dXJuICdocmVm
PSInLiAkdXJsIC4nIic7CgkJfQoKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnbWF0Y2g6
ICcuICAgICAgc2VyaWFsaXplKCRtYXRjaCk7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0g
J21hdGNoX2tleXM6ICcuIHNlcmlhbGl6ZSgkbWF0Y2hfa2V5cyk7CgoJCSR1cmwgPSAnLycu
am9pbignLycsICRtYXRjaCk7CgkJJHVybCA9IHJ0cmltKGh1LCAnLycpLnJ0cmltKCR1cmws
ICcvJykuJy8nOwoKCQlpZiAoJHJzcyAmJiAhaW5fYXJyYXkoJ3JzcycsICRtYXRjaF9rZXlz
KSkKCQkJJHVybCAuPSAncnNzJzsKCQllbHNlIGlmICgkYXRvbSAmJiAhaW5fYXJyYXkoJ2F0
b20nLCAkbWF0Y2hfa2V5cykpCgkJCSR1cmwgLj0gJ2F0b20nOwoJCWVsc2UgaWYgKCRwZyAm
JiAhaW5fYXJyYXkoJ3BnJywgJG1hdGNoX2tleXMpKSB7CgkJCWlmICgkdGhpcy0+cHJlZign
Y2xlYW5fcGFnZV9hcmNoaXZlX2xpbmtzJykpCgkJCQkkdXJsIC49ICRwZzsKCQkJZWxzZSB7
CgkJCQkkdXJsIC49ICc/cGc9Jy4gJHBnOwoJCQkJJG9taXRfdHJhaWxpbmdfc2xhc2ggPSB0
cnVlOwoJCQl9CgkJfQoKCQkkdXJsID0gcnRyaW0oJHVybCwgJy8nKSAuICcvJzsKCgkJaWYg
KEAkb21pdF90cmFpbGluZ19zbGFzaCB8fCAkdGhpcy0+cHJlZignb21pdF90cmFpbGluZ19z
bGFzaCcpKQoJCQkkdXJsID0gcnRyaW0oJHVybCwgJy8nKTsKCgkJJHRoaXMtPmJ1ZmZlcl9k
ZWJ1Z1tdID0gJHVybDsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnLS0tLSc7CgoJCWlm
ICgkcGF0aCA9PSAnaW5kZXgucGhwJyAmJiAkdXJsICE9IGh1KQoJCQlyZXR1cm4gJ2hyZWY9
IicuICR1cmwgLiAkZnJhZ21lbnQgLiciJzsKCgkJLyoKCQkxID0gaW5kZXgsIHRleHRwYXR0
ZXJuL2NzcywgTlVMTCAoPWluZGV4KQoJCTIgPSBpZCwgcywgc2VjdGlvbiwgYywgY2F0ZWdv
cnksIHJzcywgYXRvbSwgcGcsIHEsIChuLCBwLCBtb250aCwgYXV0aG9yKQoJCSovCgoJCXJl
dHVybiAoJHRoaXMtPnByZWYoJ2ZvcmNlX2xvd2VyY2FzZV91cmxzJykpID8gc3RydG9sb3dl
cigkcGFydHNbMF0pIDogJHBhcnRzWzBdOwoJfQoKCWZ1bmN0aW9uIHNldF9wZXJtbGlua19t
b2RlICgkcmVzZXRfZnVuY3Rpb24gPSBmYWxzZSkgewoJCWdsb2JhbCAkcHJlZnMsICRwcmV0
ZXh0LCAkcGVybWxpbmtfbW9kZTsKCQkkcHJlZnNbJ2N1c3RvbV91cmxfZnVuYyddID0gYXJy
YXkoJiR0aGlzLCAnX3Blcm1saW5rdXJsJyk7CgoJCWlmICghJHJlc2V0X2Z1bmN0aW9uKQoJ
CQkkcHJldGV4dFsncGVybWxpbmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAnbWVzc3kn
OwoJCWVsc2UKCQkJJHByZXRleHRbJ3Blcm1saW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2Rl
ID0gJHByZWZzWydwZXJtbGlua19tb2RlJ107Cgl9CgoJZnVuY3Rpb24gcmVzZXRfcGVybWxp
bmtfbW9kZSAoKSB7CgkJZ2xvYmFsICRwcmVmcywgJHByZXRleHQsICRwZXJtbGlua19tb2Rl
OwoJCXVuc2V0KCRwcmVmc1snY3VzdG9tX3VybF9mdW5jJ10pOwoJCSRwcmV0ZXh0WydwZXJt
bGlua19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICRwcmVmc1sncGVybWxpbmtfbW9kZSdd
OwoJfQoKCWZ1bmN0aW9uIHRvZ2dsZV9jdXN0b21fdXJsX2Z1bmMgKCRmdW5jLCAkYXR0cyA9
IE5VTEwsICR0b29nbGVfcGVybWxpbmtfbW9kZSA9IGZhbHNlLCAkZXhwYW5kX2FyZ3VtZW50
cyA9IGZhbHNlKSB7CgkJZ2xvYmFsICRwcmVmcywgJHByZXRleHQ7CgoJCWlmICgkdG9vZ2xl
X3Blcm1saW5rX21vZGUpIHsKCQkJZ2xvYmFsICRwZXJtbGlua19tb2RlOwoJCQkkX3Blcm1s
aW5rX21vZGUgPSAkcGVybWxpbmtfbW9kZTsKCQl9CgoJCSRfY2FsbF91c2VyX2Z1bmMgPSBA
JHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXTsKCgkJdW5zZXQoJHByZWZzWydjdXN0b21fdXJs
X2Z1bmMnXSk7CgkJaWYgKCR0b29nbGVfcGVybWxpbmtfbW9kZSkKCQkJJHByZXRleHRbJ3Bl
cm1saW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJHByZWZzWydwZXJtbGlua19tb2Rl
J107CgoJCWlmIChpc19jYWxsYWJsZSgkZnVuYykpIHsKCQkJaWYgKGlzX2FycmF5KCRhdHRz
KSBhbmQgJGV4cGFuZF9hcmd1bWVudHMpCgkJCQkkcnMgPSBjYWxsX3VzZXJfZnVuY19hcnJh
eSgkZnVuYywgJGF0dHMpOwoJCQllbHNlCgkJCQkkcnMgPSBjYWxsX3VzZXJfZnVuYygkZnVu
YywgJGF0dHMpOwoJCX0KCgkJJHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXSA9ICRfY2FsbF91
c2VyX2Z1bmM7CgoJCWlmICgkdG9vZ2xlX3Blcm1saW5rX21vZGUpCgkJCSRwcmV0ZXh0Wydw
ZXJtbGlua19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICRfcGVybWxpbmtfbW9kZTsKCgkJ
cmV0dXJuICRyczsKCX0KCglmdW5jdGlvbiB0b2dnbGVfcGVybWxpbmtfbW9kZSAoJGZ1bmMs
ICRhdHRzID0gTlVMTCwgJGV4cGFuZF9hcmd1bWVudHMgPSBmYWxzZSkgewoJCXJldHVybiAk
dGhpcy0+dG9nZ2xlX2N1c3RvbV91cmxfZnVuYygkZnVuYywgJGF0dHMsIHRydWUsICRleHBh
bmRfYXJndW1lbnRzKTsKCX0KCglmdW5jdGlvbiBlbmNvZGVfdXJsICgkdGV4dCkgewoJCXJl
dHVybiB1cmxlbmNvZGUodHJpbShkdW1iRG93bih1cmxkZWNvZGUoJHRleHQpKSkpOwoJfQoK
CWZ1bmN0aW9uIGRlYnVnICgpIHsKCQlpZiAoJHRoaXMtPnByZWYoJ2RlYnVnJykpIHsKCQkJ
Z2xvYmFsICRwcm9kdWN0aW9uX3N0YXR1czsKCQkJJGEgPSBmdW5jX2dldF9hcmdzKCk7CgoJ
CQlpZiAoQHR4cGludGVyZmFjZSA9PSAnYWRtaW4nKQoJCQkJZm9yZWFjaCAoJGEgYXMgJHRo
aW5nKQoJCQkJCWRtcCgkdGhpbmcpOwoKCQkJaWYgKEB0eHBpbnRlcmZhY2UgPT0gJ3B1Ymxp
YycgJiYgaW5fYXJyYXkoJHByb2R1Y3Rpb25fc3RhdHVzLCBhcnJheSgnZGVidWcnLCAndGVz
dGluZycpKSkKCQkJCWZvcmVhY2ggKCRhIGFzICR0aGluZykKCQkJCQllY2hvIGNvbW1lbnQo
aXNfc2NhbGFyKCR0aGluZykgPyBzdHJ2YWwoJHRoaW5nKSA6IHZhcl9leHBvcnQoJHRoaW5n
LCB0cnVlKSksbjsKCQl9Cgl9Cn0KCmNsYXNzIFBlcm1hbmVudExpbmtzQnVpbGRUYWJWaWV3
IGV4dGVuZHMgR0JQQWRtaW5UYWJWaWV3CnsKCXZhciAkcGVybWlzc2lvbnMgPSAnMSwyJzsK
CWZ1bmN0aW9uIHByZWxvYWQgKCkgewoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhp
cywgJ3Bvc3Rfc2F2ZV9wZXJtbGluaycpLCAkdGhpcy0+cGFyZW50LT5ldmVudCwgZ2JwX3Nh
dmUsIDEpOwoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhpcywgJ3Bvc3Rfc2F2ZV9w
ZXJtbGluaycpLCAkdGhpcy0+cGFyZW50LT5ldmVudCwgZ2JwX3Bvc3QsIDEpOwoJfQoKCWZ1
bmN0aW9uIG1haW4gKCkgewoJCWdsb2JhbCAkcHJlZnM7CgkJZXh0cmFjdChncHNhKGFycmF5
KCdzdGVwJywgZ2JwX2lkKSkpOwoKCQkvLyBXaXRoIGhhdmUgYW4gSUQsIGVpdGhlciB0aGUg
cGVybWxpbmsgaGFzIGp1c3QgYmVlbiBzYXZlZCBvciB0aGUgdXNlciB3YW50cyB0byBlZGl0
IGl0CgkJaWYgKCRpZCkgewoJCQkvLyBOZXdseSBzYXZlZCBvciBiZWVuaW5nIGVkaXRlZCwg
ZWl0aGVyIHdheSB3ZSdyZSBlZGl0aW5nIGEgcGVybWxpbmsKCQkJJHN0ZXAgPSBnYnBfc2F2
ZTsKCgkJCS8vIFVzZSB0aGUgSUQgdG8gZ3JhYiB0aGUgcGVybWxpbmsgZGF0YSAoY29tcG9u
ZW50cyAmIHNldHRpbmdzKQoJCQkkcGVybWxpbmsgPSAkdGhpcy0+cGFyZW50LT5nZXRfcGVy
bWxpbmsoJGlkKTsKCQkJJGNvbXBvbmVudHMgPSAkdGhpcy0+cGhwQXJyYXlUb0pzQXJyYXko
J2NvbXBvbmVudHMnLCAkcGVybWxpbmtbJ2NvbXBvbmVudHMnXSk7CgkJCSRzZXR0aW5ncyA9
ICRwZXJtbGlua1snc2V0dGluZ3MnXTsKCQl9IGVsc2UgewoJCQkvLyBDcmVhdGluZyBhIG5l
dyBJRCBhbmQgcGVybWxpbmsuCgkJCSRzdGVwID0gZ2JwX3Bvc3Q7CgkJCSRpZCA9IHVuaXFp
ZCgnJyk7CgoJCQkvLyBTZXQgdGhlIGRlZmF1bHQgc2V0IG9mIGNvbXBvbmVudHMgZGVwZW5k
aW5nIG9uIHdoZXRoZXIgdGhlcmUgaXMgcGFyZW50IHBlcm1saW5rCgkJCSRjb21wb25lbnRz
ID0gJHRoaXMtPnBocEFycmF5VG9Kc0FycmF5KCdjb21wb25lbnRzJywgYXJyYXkoCgkJCQlh
cnJheSgndHlwZScgPT4gJ3NlY3Rpb24nLCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4g
JycsICdyZWdleCcgPT4gJycsICd0ZXh0JyA9PiAnJyksCgkJCQlhcnJheSgndHlwZScgPT4g
J2NhdGVnb3J5JywgJ3ByZWZpeCcgPT4gJycsICdzdWZmaXgnID0+ICcnLCAncmVnZXgnID0+
ICcnLCAndGV4dCcgPT4gJycsICdjYXRlZ29yeScgPT4gJzEnKSwKCQkJCWFycmF5KCd0eXBl
JyA9PiAndGl0bGUnLCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4gJycsICdyZWdleCcg
PT4gJycsICd0ZXh0JyA9PiAnJyksCgkJCSkpOwoKCQkJJHNldHRpbmdzID0gYXJyYXkoCgkJ
CQkncGxfbmFtZScgPT4gJ1VudGl0bGVkJywgJ3BsX3ByZWNlZGVuY2UnID0+ICcwJywKCQkJ
CSdjb25fc2VjdGlvbicgPT4gJycsICdjb25fY2F0ZWdvcnknID0+ICcnLAoJCQkJJ2Rlc19z
ZWN0aW9uJyA9PiAnJywgJ2Rlc19jYXRlZ29yeScgPT4gJycsICdkZXNfcGFnZScgPT4gJycs
CgkJCQknZGVzX3Blcm1saW5rJyA9PiAnJywgJ2Rlc19mZWVkJyA9PiAnJywgJ2Rlc19sb2Nh
dGlvbicgPT4gJycsCgkJCSk7CgkJfQoKCQkvLyBFeHRyYWN0IHNldHRpbmdzIC0gdGhpcyB3
aWxsIGJlIHVzZWZ1bCB3aGVuIGNyZWF0aW5nIHRoZSB1c2VyIGludGVyZmFjZQoJCWV4dHJh
Y3QoJHNldHRpbmdzKTsKCgkJLy8gUEhQICYgSmF2YXNjcmlwdCBjb25zdGFudHM7CgkJJHNl
cGFyYXRvciA9IGdicF9zZXBhcmF0b3I7CgkJJGNvbXBvbmVudHNfZGl2ID0gJ3Blcm1saW5r
X2NvbXBvbmVudHNfdWknOwoJCSRjb21wb25lbnRzX2Zvcm0gPSAncGVybWxpbmtfY29tcG9u
ZW50cyc7CgkJJHNldHRpbmdzX2Zvcm0gPSAncGVybWxpbmtfc2V0dGluZ3MnOwoJCSRzaG93
X3ByZWZpeCA9ICR0aGlzLT5wcmVmKCdzaG93X3ByZWZpeCcpOwoJCSRzaG93X3N1ZmZpeCA9
ICR0aGlzLT5wcmVmKCdzaG93X3N1ZmZpeCcpOwoKCQkvLyBBIGxpdHRsZSBjcmVkaXQgaGVy
ZSBhbmQgdGhlcmUgZG9lc24ndCBodXJ0CgkJJG91dFtdID0gIjwhLS0geyR0aGlzLT5wYXJl
bnQtPnBsdWdpbl9uYW1lfSBieSBHcmFlbWUgUG9ydGVvdXMgLS0+IjsKCgkJLy8gVGhlIEph
dmFzY3JpcHQKJG91dFtdID0gPDw8SFRNTAoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3Jp
cHQiIGxhbmd1YWdlPSJqYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCI+CgkvLyA8IVtDREFU
QVsKCgkvLyBHbG9iYWwgdmFyaWFibGVzCnZhciB7JGNvbXBvbmVudHN9Ly8gY29tcG9uZW50
cyBhcnJheSBmb3IgYWxsIHRoZSBkYXRhCgoJdmFyIF9jdXJyZW50ID0gMDsgLy8gSW5kZXgg
b2YgdGhlIGNvbXBvbmVudHMgYXJyYXksIG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgY29t
cG9uZW50Cgl2YXIgY192YWxzID0gbmV3IEFycmF5KCd0eXBlJywgJ2N1c3RvbScsICdjYXRl
Z29yeScsICduYW1lJywgJ3ByZWZpeCcsICdzdWZmaXgnLCAncmVnZXgnLCAndGV4dCcpOwoK
CXdpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpIHsKCQljb21wb25lbnRfcmVmcmVzaF9hbGwo
KTsKCQljb21wb25lbnRfc3dpdGNoKGNvbXBvbmVudChfY3VycmVudCkpOwoJfQoKCWZ1bmN0
aW9uIGNvbXBvbmVudF9hZGQgKCkgewoJCS8vIENyZWF0ZSBkYXRhIHNldAoJCXZhciBkYXRh
ID0gbmV3IEFycmF5KCk7CgkJZm9yIChrZXkgaW4gY192YWxzKSB7CgkJCWRhdGFbY192YWxz
W2tleV1dID0gJyc7CgkJfQoKCQkvLyBBZGQgZGF0YQoJCWNvbXBvbmVudHMucHVzaChkYXRh
KTsKCgkJLy8gUmVzZXQgY29tcG9uZW50IHR5cGUgbGlzdAoJCWZvcm0oJ3skY29tcG9uZW50
c19mb3JtfScpLnR5cGUudmFsdWUgPSAnJzsKCgkJLy8gU3dpdGNoIHRvIHRoZSBuZXcgY29t
cG9uZW50CgkJX2N1cnJlbnQgPSBjb21wb25lbnRzLmxlbmd0aCAtIDE7CgoJCS8vIFJlZnJl
c2ggVUkKCQljb21wb25lbnRfcmVmcmVzaF9hbGwoKTsKCQljb21wb25lbnRfdXBkYXRlKCk7
Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3JlZnJlc2ggKGVsZW1lbnQpIHsKCQl2YXIgYyA9
IGNvbXBvbmVudHNbZWxlbWVudC5pZF07CgoJCS8vIENTUwoJCWlmIChfY3VycmVudCA9PSBl
bGVtZW50LmlkKQoJCQllbGVtZW50LnN0eWxlWydiYWNrZ3JvdW5kQ29sb3InXSA9ICdyZ2Io
MjQ5LCAyMDYsIDczKSc7CgkJZWxzZQoJCQllbGVtZW50LnN0eWxlWydiYWNrZ3JvdW5kQ29s
b3InXSA9ICdyZ2IoMjU1LCAyNTQsIDIxMSknOwoJCWVsZW1lbnQuc3R5bGVbJ2NvbG9yJ10g
PSAncmdiKDAsIDAsIDApJzsKCQllbGVtZW50LnN0eWxlWydmb250RmFtaWx5J10gPSAnQXJp
YWwnOwoJCWVsZW1lbnQuc3R5bGVbJ2ZvbnRXZWlnaHQnXSA9ICdib2xkJzsKCQllbGVtZW50
LnN0eWxlWyd2ZXJ0aWNhbEFsaWduJ10gPSAnbWlkZGxlJzsKCQllbGVtZW50LnN0eWxlWyd0
ZXh0QWxpZ24nXSA9ICdjZW50ZXInOwoJCWVsZW1lbnQuc3R5bGVbJ2xpbmVIZWlnaHQnXSA9
ICcxLjVlbSc7CgkJZWxlbWVudC5zdHlsZVsnaGVpZ2h0J10gPSAnMS41ZW0nOwoJCWVsZW1l
bnQuc3R5bGVbJ3BhZGRpbmcnXSA9ICcwIDVweCc7CgkJZWxlbWVudC5zdHlsZVsnbWFyZ2lu
UmlnaHQnXSA9ICc1cHgnOwoJCWVsZW1lbnQuc3R5bGVbJ2Nzc0Zsb2F0J10gPSAnbGVmdCc7
CgkJZWxlbWVudC5zdHlsZVsnZGlzcGxheSddID0gJ2lubGluZSc7CgoJCS8vIFJlbW92ZSBh
bGwgY2hpbGQgbm9kZXMKCQl3aGlsZSAoZWxlbWVudC5oYXNDaGlsZE5vZGVzKCkpIHsgZWxl
bWVudC5yZW1vdmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpOyB9CgoJCS8vIENyZWF0ZSB0
aGUgdmlzaWJsZSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoaXMgY29tcG9uZW50CgkJc3dpdGNo
IChjWyd0eXBlJ10pIHsKCQkJY2FzZSAnJyA6CgkJCQlzdHJpbmcgPSAnLyc7CgkJCQlicmVh
azsKCQkJY2FzZSAncmVnZXgnIDoKCQkJY2FzZSAndGV4dCcgOgoJCQkJc3RyaW5nID0gY1tj
Wyd0eXBlJ11dICsgJyAvJzsKCQkJCWJyZWFrOwoJCQljYXNlICdkYXRlJyA6CgkJCQlzdHJp
bmcgPSBjWyd0eXBlJ10gKyAnIC8nOwoJCQkJYnJlYWs7CgkJCWNhc2UgJ2N1c3RvbScgOgoJ
CQkJc3RyaW5nID0gY1sncHJlZml4J10gKyAnY3VzdG9tXycgKyBjWydjdXN0b20nXSArIGNb
J3N1ZmZpeCddICsgJyAvJzsKCQkJCWJyZWFrOwoJCQlkZWZhdWx0IDoKCQkJCXN0cmluZyA9
IGNbJ3ByZWZpeCddICsgY1sndHlwZSddICsgY1snc3VmZml4J10gKyAnIC8nOwoJCQlicmVh
azsKCQl9CgoJCS8vIFNldCB0aGUgdmlzaWJsZSBzdHJpbmcKCQllbGVtZW50LmFwcGVuZENo
aWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN0cmluZykpOwoKCQlyZXR1cm4gZWxlbWVu
dDsKCX0KCglmdW5jdGlvbiBjb21wb25lbnRfcmVmcmVzaF9hbGwgKCkgewoJCS8vIFJlbW92
ZSBhbGwgY2hpbGQgbm9kZXMKCQl3aGlsZSAocGVybWxpbmtfZGl2KCkuaGFzQ2hpbGROb2Rl
cygpKSB7IHBlcm1saW5rX2RpdigpLnJlbW92ZUNoaWxkKHBlcm1saW5rX2RpdigpLmZpcnN0
Q2hpbGQpOyB9CgoJCWZvciAodmFyIGkgPSAwOyBpIDwgY29tcG9uZW50cy5sZW5ndGg7IGkr
KykgewoJCQl2YXIgYyA9IGNvbXBvbmVudHNbaV07CgoJCQkvLyBDcmVhdGUgdGhlIG5ldyBj
b21wb25lbnQKCQkJdmFyIG5ld19jb21wb25lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50
KCdkaXYnKTsKCgkJCS8vIFNldCB0aGUgaWQgaW50ZXJnZXIgZm9yIHRoaXMgY29tcG9uZW50
CgkJCW5ld19jb21wb25lbnQuaWQgPSBpOwoKCQkJLy8gSmF2YXNjcmlwdCwgb25tb3VzZXVw
IHNldHRpbmcKCQkJbmV3X2NvbXBvbmVudC5zZXRBdHRyaWJ1dGUoJ29ubW91c2Vkb3duJywg
J2NvbXBvbmVudF9zd2l0Y2godGhpcyk7Jyk7CgkJCW5ld19jb21wb25lbnQub25tb3VzZWRv
d24gPSBmdW5jdGlvbigpIHsgY29tcG9uZW50X3N3aXRjaCh0aGlzKTsgfTsKCgkJCS8vIFJl
ZnJlc2ggdGhlIGxvb2sgb2YgdGhlIGNvbXBvbmVudAoJCQluZXdfY29tcG9uZW50ID0gY29t
cG9uZW50X3JlZnJlc2gobmV3X2NvbXBvbmVudCk7CgoJCQkvLyBBbmQgYWRkIHRoZSBuZXcg
Y29tcG9uZW50IHRvIHRoZSB1aQoJCQlwZXJtbGlua19kaXYoKS5hcHBlbmRDaGlsZChuZXdf
Y29tcG9uZW50KTsKCQl9Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3JlbW92ZSAoKSB7CgkJ
aWYgKGNvbXBvbmVudHMubGVuZ3RoID4gMSkgewoJCQljb21wb25lbnRzLnNwbGljZShfY3Vy
cmVudCwgMSk7CgoJCQlpZiAoX2N1cnJlbnQgPj0gY29tcG9uZW50cy5sZW5ndGgpCgkJCQlf
Y3VycmVudCA9IGNvbXBvbmVudHMubGVuZ3RoIC0gMTsKCgkJCWNvbXBvbmVudF9yZWZyZXNo
X2FsbCgpOwoJCX0KCX0KCglmdW5jdGlvbiBjb21wb25lbnRfc3dpdGNoIChlbGVtZW50KSB7
CgkJLy8gVXBkYXRlIGN1cnJlbnQgaW5kZXgKCQlfY3VycmVudCA9IGVsZW1lbnQuaWQ7CgoJ
CS8vIFJlZnJlc2ggVUkKCQljb21wb25lbnRfcmVmcmVzaF9hbGwoKTsKCgkJLy8gU2V0IGZv
cm0gaW5wdXQgdmFsdWVzCgkJdmFyIGMgPSBjb21wb25lbnRzW19jdXJyZW50XTsKCQlmb3Ig
KGtleSBpbiBjX3ZhbHMpIHsKCQkJdmFyIGsgPSBjX3ZhbHNba2V5XTsKCQkJdmFyIGUgPSBm
b3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5lbGVtZW50cy5uYW1lZEl0ZW0oayk7CgoJCQlp
ZiAoY1trXSkgZS52YWx1ZSA9IGNba107CgkJCWVsc2UgZS52YWx1ZSA9ICcnOwoJCX0KCgkJ
Ly8gSGlkZSB1bm5lZWRlZCBmb3JtIGlucHV0cwoJCWNvbXBvbmVudF91cGRhdGUoKTsKCX0K
CglmdW5jdGlvbiBjb21wb25lbnRfdXBkYXRlIChlbGVtZW50KSB7CgkJLy8gU3RvcmUgdGhl
IGRhdGEgaW4gZm9ybSBpbnB1dHMsIGFuZCBoaWRlIGFsbCBmb3JtIGlucHV0cwoJCXZhciBj
ID0gbmV3IEFycmF5KCkKCQlmb3IgKGtleSBpbiBjX3ZhbHMpIHsKCQkJdmFyIGsgPSBjX3Zh
bHNba2V5XTsKCQkJdmFyIGUgPSBmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5lbGVtZW50
cy5uYW1lZEl0ZW0oayk7CgoJCQljW2tdID0gZS52YWx1ZTsKCgkJCWUucGFyZW50Tm9kZS5z
dHlsZVsnZGlzcGxheSddID0gJ25vbmUnOwoJCX0KCgkJLy8gUmVzaG93IHR5cGUgb3B0aW9u
IGxpc3QKCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS50eXBlLnBhcmVudE5vZGUuc3R5
bGVbJ2Rpc3BsYXknXSA9ICcnOwoKCQkvLyBTZXQgb3RoZXIgZm9ybSBpbnB1dHMgdG8gdGhl
IGNvcnJlY3QgdmlzaWJpbGl0eSBzdGF0ZSwgZGVwZW5kZW50IG9uIHR5cGUKCQlzd2l0Y2gg
KGNbJ3R5cGUnXSkgewoJCQljYXNlICcnIDoKCQkJY2FzZSAnZGF0ZScgOiBicmVhazsKCQkJ
Y2FzZSAncmVnZXgnIDoKCQkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLm5hbWUucGFy
ZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNf
Zm9ybX0nKS5yZWdleC5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJYnJl
YWs7CgkJCWNhc2UgJ3RleHQnIDoKCQkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLm5h
bWUucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCQlmb3JtKCd7JGNvbXBv
bmVudHNfZm9ybX0nKS50ZXh0LnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJ
CQlicmVhazsKCQkJY2FzZSAnY3VzdG9tJyA6CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9y
bX0nKS5jdXN0b20ucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCQlkaXNw
bGF5X2ZpeGVzKCk7CgkJCWJyZWFrOwoJCQljYXNlICdjYXRlZ29yeScgOgoJCQkJZm9ybSgn
eyRjb21wb25lbnRzX2Zvcm19JykuY2F0ZWdvcnkucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxh
eSddID0gJyc7CgkJCQlkaXNwbGF5X2ZpeGVzKCk7CgkJCWJyZWFrOwoJCQlkZWZhdWx0IDoK
CQkJCWRpc3BsYXlfZml4ZXMoKTsKCQkJYnJlYWs7CgkJfQoKCQkvLyBTYXZlIGRhdGEKCQlj
b21wb25lbnRzW19jdXJyZW50XSA9IGM7CgoJCS8vIFJlZnJlc2ggY29tcG9uZW50IHRvIHJl
ZmxlY3QgbmV3IGRhdGEKCQljb21wb25lbnRfcmVmcmVzaChjb21wb25lbnQoX2N1cnJlbnQp
KTsKCgkJLy8gUmUtZm9jdXMgdGhlIGFjdGl2ZSBmb3JtIGlucHV0CgkJaWYgKGVsZW1lbnQp
CgkJCWVsZW1lbnQuZm9jdXMoKTsKCX0KCglmdW5jdGlvbiBkaXNwbGF5X2ZpeGVzICgpIHsK
CQlpZiAoJ3skc2hvd19wcmVmaXh9JykKCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19Jyku
cHJlZml4LnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCWlmICgneyRzaG93
X3N1ZmZpeH0nKQoJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5zdWZmaXgucGFyZW50
Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X2xl
ZnQgKCkgewoJCWlmIChjb21wb25lbnRzLmxlbmd0aCA+IDEgJiYgX2N1cnJlbnQgPiAwKSB7
CgkJCS8vIFN0b3JlIGN1cnJlbnQgY29tcG9uZW50CgkJCXZhciBjID0gY29tcG9uZW50c1tf
Y3VycmVudF07CgoJCQkvLyBSZW1vdmUgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50
cy5zcGxpY2UoX2N1cnJlbnQsIDEpOwoKCQkJLy8gVXBkYXRlIGN1cnJlbnQgaW5kZXgKCQkJ
X2N1cnJlbnQtLTsKCgkJCS8vIFJlLWFkZCBjdXJyZW50IGNvbXBvbmVudAoJCQljb21wb25l
bnRzLnNwbGljZShfY3VycmVudCwgMCwgYyk7CgoJCQkvLyBSZWZyZXNoIFVJCgkJCWNvbXBv
bmVudF9yZWZyZXNoX2FsbCgpOwoJCX0KCX0KCglmdW5jdGlvbiBjb21wb25lbnRfcmlnaHQg
KCkgewoJCWlmIChfY3VycmVudCA8IGNvbXBvbmVudHMubGVuZ3RoIC0gMSkgewoJCQkvLyBT
dG9yZSBjdXJyZW50IGNvbXBvbmVudAoJCQl2YXIgYyA9IGNvbXBvbmVudHNbX2N1cnJlbnRd
OwoKCQkJLy8gUmVtb3ZlIGN1cnJlbnQgY29tcG9uZW50CgkJCWNvbXBvbmVudHMuc3BsaWNl
KF9jdXJyZW50LCAxKTsKCgkJCS8vIFVwZGF0ZSBjdXJyZW50IGluZGV4CgkJCV9jdXJyZW50
Kys7CgoJCQkvLyBSZS1hZGQgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50cy5zcGxp
Y2UoX2N1cnJlbnQsIDAsIGMpOwoKCQkJLy8gUmVmcmVzaCBVSQoJCQljb21wb25lbnRfcmVm
cmVzaF9hbGwoKTsKCQl9Cgl9CgoJZnVuY3Rpb24gc2F2ZSAoZm9ybSkgewoJCXZhciBjID0g
Jyc7IHZhciBpc19wZXJtbGluayA9IGZhbHNlOyB2YXIgaGFzX3BhZ2Vfb3Jfc2VhcmNoID0g
ZmFsc2U7CgkJZm9yICh2YXIgaSA9IDA7IGkgPCBjb21wb25lbnRzLmxlbmd0aDsgaSsrKSB7
CgkJCWlmIChjb21wb25lbnRzW2ldWyd0eXBlJ10gPT0gJ3RpdGxlJyB8fCBjb21wb25lbnRz
W2ldWyd0eXBlJ10gPT0gJ2lkJykKCQkJCWlzX3Blcm1saW5rID0gdHJ1ZTsKCQkJaWYgKGNv
bXBvbmVudHNbaV1bJ3R5cGUnXSA9PSAncGFnZScgfHwgY29tcG9uZW50c1tpXVsndHlwZSdd
ID09ICdmZWVkJyB8fCBjb21wb25lbnRzW2ldWyd0eXBlJ10gPT0gJ3NlYXJjaCcpCgkJCQlo
YXNfcGFnZV9mZWVkX3NlYXJjaCA9IHRydWU7CgkJCWMgPSBjICsganNBcnJheVRvUGhwQXJy
YXkoY29tcG9uZW50c1tpXSkgKyAneyRzZXBhcmF0b3J9JzsKCQl9CgoJCWlmIChpc19wZXJt
bGluayAmJiBoYXNfcGFnZV9vcl9zZWFyY2gpCgkJCWFsZXJ0KCJZb3VyIHBlcm1hbmVudCBs
aW5rIGNhbid0IGNvbnRhaW4gZWl0aGVyIGEgJ3BhZ2UnLCAnZmVlZCcgb3IgYSAnc2VhcmNo
JyBjb21wb25lbnQgd2l0aCAndGl0bGUnIG9yICdpZCcgY29tcG9uZW50cy4iKTsKCgkJZWxz
ZSBpZiAoaXNfcGVybWxpbmsgJiYgKGZvcm0ucGxfbmFtZS52YWx1ZSA9PSAnJyB8fCBmb3Jt
LnBsX25hbWUudmFsdWUgPT0gJ1VudGl0bGVkJykpIHsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVu
dEJ5SWQoJ3NldHRpbmdzJykuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQlmb3JtLnBsX25h
bWUuc3R5bGVbJ2JvcmRlciddID0gJzNweCBzb2xpZCByZ2IoMjIxLCAwLCAwKSc7CgkJCWZv
cm0ucGxfcHJlY2VkZW5jZS5zdHlsZVsnYm9yZGVyJ10gPSAnJzsKCQkJYWxlcnQoJ1BsZWFz
ZSBlbnRlciBhIG5hbWUgZm9yIHRoaXMgcGVybWFuZW50IGxpbmsgcnVsZS4nKTsKCQl9IGVs
c2UgaWYgKGZvcm0ucGxfcHJlY2VkZW5jZS52YWx1ZSA9PSAnJykgewoJCQlkb2N1bWVudC5n
ZXRFbGVtZW50QnlJZCgnc2V0dGluZ3MnKS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCWZv
cm0ucGxfcHJlY2VkZW5jZS5zdHlsZVsnYm9yZGVyJ10gPSAnM3B4IHNvbGlkIHJnYigyMjEs
IDAsIDApJzsKCQkJZm9ybS5wbF9uYW1lLnN0eWxlWydib3JkZXInXSA9ICcnOwoJCQlhbGVy
dCgnUGxlYXNlIGVudGVyIGEgcHJlY2VkZW5jZSB2YWx1ZSBmb3IgdGhpcyBwZXJtYW5lbnQg
bGluayBydWxlLicpOwoJCX0gZWxzZSB7CgkJCWZvcm0uY29tcG9uZW50cy52YWx1ZSA9IGM7
CgkJCWlmIChwZXJtbGlua19kaXYoKS50ZXh0Q29udGVudCkKCQkJCWZvcm0ucGxfcHJldmll
dy52YWx1ZSA9IHBlcm1saW5rX2RpdigpLnRleHRDb250ZW50OwoJCQllbHNlIGlmIChwZXJt
bGlua19kaXYoKS5pbm5lclRleHQpCgkJCQlmb3JtLnBsX3ByZXZpZXcudmFsdWUgPSBwZXJt
bGlua19kaXYoKS5pbm5lclRleHQ7CgkJCXJldHVybiB0cnVlOwoJCX0KCgkJcmV0dXJuIGZh
bHNlOwoJfQoKCWZ1bmN0aW9uIGpzQXJyYXlUb1BocEFycmF5IChhcnJheSkgewoJCS8vIGh0
dHA6Ly9mYXJtLnR1Y293cy5jb20vYmxvZy9fYXJjaGl2ZXMvMjAwNS81LzMwLzg5NTkwMS5o
dG1sCgkJdmFyIGFycmF5X3BocCA9ICIiOwoJCXZhciB0b3RhbCA9IDA7CgkJZm9yICh2YXIg
a2V5IGluIGFycmF5KSB7CgkJCSsrIHRvdGFsOwoJCQlhcnJheV9waHAgPSBhcnJheV9waHAg
KyAiczoiICsKCQkJCVN0cmluZyhrZXkpLmxlbmd0aCArICI6XCIiICsgU3RyaW5nKGtleSkg
KyAiXCI7czoiICsKCQkJCVN0cmluZyhhcnJheVtrZXldKS5sZW5ndGggKyAiOlwiIiArIFN0
cmluZyhhcnJheVtrZXldKSArICJcIjsiOwoJCX0KCQlhcnJheV9waHAgPSAiYToiICsgdG90
YWwgKyAiOnsiICsgYXJyYXlfcGhwICsgIn0iOwoJCXJldHVybiBhcnJheV9waHA7Cgl9CgoJ
ZnVuY3Rpb24gcGVybWxpbmtfZGl2ICgpIHsKCQkvLyBSZXR1cm4gdGhlIHBlcm1saW5rIHJ1
bGUgZWxlbWVudAoJCXJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgneyRjb21wb25l
bnRzX2Rpdn0nKTsKCX0KCglmdW5jdGlvbiBmb3JtIChuYW1lKSB7CgkJaWYgKCFuYW1lKQoJ
CQluYW1lID0gJ3skY29tcG9uZW50c19mb3JtfScKCQkvLyBSZXR1cm4gdGhlIGZvcm0gZWxl
bWVudCB3aXRoIG5hbWUKCQlyZXR1cm4gZG9jdW1lbnQuZm9ybXMubmFtZWRJdGVtKG5hbWUp
OwoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVudCAoaW5kZXgpIHsKCQkvLyBSZXR1cm4gY29tcG9u
ZW50IHdpdGggaW5kZXgKCQlyZXR1cm4gcGVybWxpbmtfZGl2KCkuY2hpbGROb2Rlc1tpbmRl
eF07Cgl9CgoJLy8gXV0+Cgk8L3NjcmlwdD4KSFRNTDsKCgkJLy8gLS0tIFJ1bGUgLS0tIC8v
CgoJCSRvdXRbXSA9IGhlZCgnUGVybWFuZW50IGxpbmsgcnVsZScsIDIpOwoJCSRvdXRbXSA9
ICc8ZGl2IGlkPSInLiRjb21wb25lbnRzX2Rpdi4nIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xv
cjogcmdiKDIzMCwgMjMwLCAyMzApOyB3aWR0aDogYXV0bzsgaGVpZ2h0OiAxLjVlbTsgbWFy
Z2luOiAxMHB4IDA7IHBhZGRpbmc6IDVweDsiPjwvZGl2Pic7CgkJJG91dFtdID0gZ3JhZgoJ
CQkoCgkJCSR0aGlzLT5mSW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfYWRkJywgJ0FkZCBj
b21wb25lbnQnLCBhcnJheSgnY2xpY2snID0+ICdjb21wb25lbnRfYWRkKCk7JykpLm4uCgkJ
CSR0aGlzLT5mSW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfcmVtb3ZlJywgJ1JlbW92ZSBj
b21wb25lbnQnLCBhcnJheSgnY2xpY2snID0+ICdjb21wb25lbnRfcmVtb3ZlKCk7JykpLm4u
CgkJCSR0aGlzLT5mSW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfbGVmdCcsICdNb3ZlIGxl
ZnQnLCBhcnJheSgnY2xpY2snID0+ICdjb21wb25lbnRfbGVmdCgpOycpKS5uLgoJCQkkdGhp
cy0+ZklucHV0KCdidXR0b24nLCAnY29tcG9uZW50X3JpZ2h0JywgJ01vdmUgcmlnaHQnLCBh
cnJheSgnY2xpY2snID0+ICdjb21wb25lbnRfcmlnaHQoKTsnKSkKCQkJKTsKCgkJLy8gLS0t
IENvbXBvbmVudCBmb3JtIC0tLSAvLwoKCQkkb3V0W10gPSAnPGZvcm0gYWN0aW9uPSJpbmRl
eC5waHAiIG5hbWU9IicuJGNvbXBvbmVudHNfZm9ybS4nIiBvbnN1Ym1pdD0icmV0dXJuIGZh
bHNlOyI+JzsKCgkJLy8gLS0tIENvbXBvbmVudCB0eXBlIC0tLSAvLwoKCQkkY29tcG9uZW50
X3R5cGVzID0gYXJyYXkgKAoJCQknc2VjdGlvbicgPT4gJ1NlY3Rpb24nLCAnY2F0ZWdvcnkn
ID0+ICdDYXRlZ29yeScsCgkJCSd0aXRsZScgPT4gJ1RpdGxlJywgJ2lkJyA9PiAnSUQnLAoJ
CQknZGF0ZScgPT4gJ0RhdGUgKHl5eXkvbW0vZGQpJywgJ3llYXInID0+ICdZZWFyJywKCQkJ
J21vbnRoJyA9PiAnTW9udGgnLCAnZGF5JyA9PiAnRGF5JywKCQkJJ2F1dGhvcicgPT4gJ0F1
dGhvciAoUmVhbCBuYW1lKScsICdsb2dpbicgPT4gJ0F1dGhvciAoTG9naW4pJywKCQkJJ2N1
c3RvbScgPT4gJ0N1c3RvbSBGaWVsZCcsICdwYWdlJyA9PiAnUGFnZSBOdW1iZXInLAoJCQkn
ZmVlZCcgPT4gJ0ZlZWQnLCAnc2VhcmNoJyA9PiAnU2VhcmNoIHJlcXVlc3QnLAoJCQkndGV4
dCcgPT4gJ1BsYWluIFRleHQnLCAncmVnZXgnID0+ICdSZWd1bGFyIEV4cHJlc3Npb24nCgkJ
KTsKCQkkb3V0W10gPSBncmFmKCR0aGlzLT5mU2VsZWN0KCd0eXBlJywgJGNvbXBvbmVudF90
eXBlcywgJycsIDEsICdDb21wb25lbnQgdHlwZScsICcgb25jaGFuZ2U9ImNvbXBvbmVudF91
cGRhdGUoKTsiJykpOwoKCQkvLyAtLS0gQ29tcG9uZW50IGRhdGEgLS0tIC8vCgoJCS8vIEdy
YWIgdGhlIGN1c3RvbSBmaWVsZCB0aXRsZXMKCQkkY3VzdG9tX2ZpZWxkcyA9IGFycmF5KCk7
CgkJZm9yICgkaSA9IDE7ICRpIDw9IDEwOyAkaSsrKSB7CgkJCWlmICgkdiA9ICRwcmVmc1si
Y3VzdG9tX3skaX1fc2V0Il0pCgkJCQkkY3VzdG9tX2ZpZWxkc1skaV0gPSAkdjsKCQl9CgoJ
CSRvdXRbXSA9IGdyYWYgKAoJCQkkdGhpcy0+ZlNlbGVjdCgnY3VzdG9tJywgJGN1c3RvbV9m
aWVsZHMsICcnLCAwLCAnQ3VzdG9tJywgJyBvbmNoYW5nZT0iY29tcG9uZW50X3VwZGF0ZSh0
aGlzKTsiJykubi4KCQkJJHRoaXMtPmZTZWxlY3QoJ2NhdGVnb3J5JywgYXJyYXkoJzEnID0+
ICdDYXRlZ29yeSAxJywgJzInID0+ICdDYXRlZ29yeSAyJyksICcnLCAwLCAnUHJpbWFyeSBD
YXRlZ29yeScsICcgb25jaGFuZ2U9ImNvbXBvbmVudF91cGRhdGUodGhpcyk7IicpLm4uCgkJ
CSR0aGlzLT5mSW5wdXQoJ3RleHQnLCAnbmFtZScsICcnLCBhcnJheSgna2V5dXAnID0+ICdj
b21wb25lbnRfdXBkYXRlKHRoaXMpOycpLCAnTmFtZScpLm4uCgkJCSR0aGlzLT5mSW5wdXQo
J3RleHQnLCAncHJlZml4JywgJycsIGFycmF5KCdrZXl1cCcgPT4gJ2NvbXBvbmVudF91cGRh
dGUodGhpcyk7JyksICdQcmVmaXgnKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3Jl
Z2V4JywgJycsIGFycmF5KCdrZXl1cCcgPT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7Jyks
ICdSZWd1bGFyIEV4cHJlc3Npb24nKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3N1
ZmZpeCcsICcnLCBhcnJheSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRlKHRoaXMpOycp
LCAnU3VmZml4Jykubi4KCQkJJHRoaXMtPmZJbnB1dCgndGV4dCcsICd0ZXh0JywgJycsIGFy
cmF5KCdrZXl1cCcgPT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7JyksICdUZXh0JykKCQkp
OwoJCSRociA9ICc8aHIgc3R5bGU9ImJvcmRlcjogMDsgaGVpZ2h0OiAxcHg7IGJhY2tncm91
bmQtY29sb3I6IHJnYigyMDAsIDIwMCwgMjAwKTsgY29sb3I6IHJnYigyMDAsIDIwMCwgMjAw
KTsgbWFyZ2luLWJvdHRvbTogMTBweDsiIC8+JzsKCQkkb3V0W10gPSAkaHI7CgkJJG91dFtd
ID0gJzwvZm9ybT4nOwoKCQkvLyAtLS0gU2V0dGluZ3MgZm9ybSAtLS0gLy8KCgkJJG91dFtd
ID0gJzxmb3JtIGFjdGlvbj0iaW5kZXgucGhwIiBtZXRob2Q9InBvc3QiIG5hbWU9IicuJHNl
dHRpbmdzX2Zvcm0uJyIgb25zdWJtaXQ9InJldHVybiBzYXZlKHRoaXMpOyI+JzsKCgkJLy8g
LS0tIFNldHRpbmdzIC0tLSAvLwoKCQkkb3V0W10gPSBoZWQoJzxhIGhyZWY9IiMiIG9uY2xp
Y2s9InRvZ2dsZURpc3BsYXkoXCdzZXR0aW5nc1wnKTsgcmV0dXJuIGZhbHNlOyI+U2V0dGlu
Z3M8L2E+JywgMik7CgkJJG91dFtdID0gJzxkaXYgaWQ9InNldHRpbmdzIj4nOwoJCSRvdXRb
XSA9IGdyYWYoJHRoaXMtPmZJbnB1dCgndGV4dCcsICdwbF9uYW1lJywgJHBsX25hbWUsIE5V
TEwsICdOYW1lJykpOwoJCSRvdXRbXSA9IGdyYWYoJHRoaXMtPmZJbnB1dCgndGV4dCcsICdw
bF9wcmVjZWRlbmNlJywgJHBsX3ByZWNlZGVuY2UsIE5VTEwsICdQcmVjZWRlbmNlJykpOwoJ
CSRvdXRbXSA9ICc8L2Rpdj4nOwoJCSRvdXRbXSA9ICRocjsKCgkJLy8gLS0tIENvbmRpdGlv
bnMgLS0tIC8vCgoJCSRvdXRbXSA9IGhlZCgnPGEgaHJlZj0iIyIgb25jbGljaz0idG9nZ2xl
RGlzcGxheShcJ2NvbmRpdGlvbnNcJyk7IHJldHVybiBmYWxzZTsiPkNvbmRpdGlvbnM8L2E+
JywgMik7CgkJJG91dFtdID0gJzxkaXYgaWQ9ImNvbmRpdGlvbnMiIHN0eWxlPSJkaXNwbGF5
Om5vbmUiPic7CgkJJG91dFtdID0gZ3JhZihzdHJvbmcoJ09ubHkgdXNlIHRoaXMgcGVybWFu
ZW50IGxpbmsgaWYgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFwcGx5Li4uJykpOwoKCQkv
LyBHZW5lcmF0ZSBhIHNlY3Rpb25zIGFycmF5IChuYW1lPT50aXRsZSkKCQkkc2VjdGlvbnMg
PSBhcnJheSgpOwoJCSRycyA9IHNhZmVfcm93cygnbmFtZSwgdGl0bGUnLCAndHhwX3NlY3Rp
b24nLCAibmFtZSAhPSAnZGVmYXVsdCcgb3JkZXIgYnkgbmFtZSIpOwoJCWZvcmVhY2ggKCRy
cyBhcyAkc2VjKSB7CgkJCSRzZWN0aW9uc1skc2VjWyduYW1lJ11dID0gJHNlY1sndGl0bGUn
XTsKCQl9CgoJCS8vIEdlbmVyYXRlIGEgY2F0ZWdvcmllcyBhcnJheSAobmFtZT0+dGl0bGUp
CgkJJGNhdGVnb3JpZXMgPSBhcnJheSgpOwoJCSRycyA9IHNhZmVfcm93cygnbmFtZSwgdGl0
bGUnLCAndHhwX2NhdGVnb3J5JywgInR5cGUgPSAnYXJ0aWNsZScgYW5kIG5hbWUgIT0gJ3Jv
b3QnIG9yZGVyIGJ5IG5hbWUiKTsKCQlmb3JlYWNoICgkcnMgYXMgJHNlYykgewoJCQkkY2F0
ZWdvcmllc1skc2VjWyduYW1lJ11dID0gJHNlY1sndGl0bGUnXTsKCQl9CgoJCSRvdXRbXSA9
IGdyYWYgKAoJCQkkdGhpcy0+ZlNlbGVjdCgnY29uX3NlY3Rpb24nLCAkc2VjdGlvbnMsICRj
b25fc2VjdGlvbiwgMSwgJ1dpdGhpbiBzZWN0aW9uJykubi4KCQkJJHRoaXMtPmZTZWxlY3Qo
J2Nvbl9jYXRlZ29yeScsICRjYXRlZ29yaWVzLCAkY29uX2NhdGVnb3J5LCAxLCAnV2l0aGlu
IGNhdGVnb3J5JykKCQkpOwoJCSRvdXRbXSA9ICc8L2Rpdj4nOwoJCSRvdXRbXSA9ICRocjsK
CgkJLy8gLS0tIERlc3RpbmF0aW9uIC0tLSAvLwoKCQkkb3V0W10gPSBoZWQoJzxhIGhyZWY9
IiMiIG9uY2xpY2s9InRvZ2dsZURpc3BsYXkoXCdkZXN0aW5hdGlvblwnKTsgcmV0dXJuIGZh
bHNlOyI+RGVzdGluYXRpb248L2E+JywgMik7CgkJJG91dFtdID0gJzxkaXYgaWQ9ImRlc3Rp
bmF0aW9uIiBzdHlsZT0iZGlzcGxheTpub25lIj4nOwoJCSRvdXRbXSA9IGdyYWYoc3Ryb25n
KCdGb3J3YXJkIHRoaXMgcGVybWFuZW50IGxpbmsgdG8uLi4nKSk7CgkJJG91dFtdID0gZ3Jh
ZiAoCgkJCSR0aGlzLT5mU2VsZWN0KCdkZXNfc2VjdGlvbicsICRzZWN0aW9ucywgJGRlc19z
ZWN0aW9uLCAxLCAnU2VjdGlvbicpLm4uCgkJCSR0aGlzLT5mU2VsZWN0KCdkZXNfY2F0ZWdv
cnknLCAkY2F0ZWdvcmllcywgJGRlc19jYXRlZ29yeSwgMSwgJ0NhdGVnb3J5JykKCQkpOwoJ
CSRvdXRbXSA9IGdyYWYoJHRoaXMtPmZTZWxlY3QoJ2Rlc19wYWdlJywgc2FmZV9jb2x1bW4o
J25hbWUnLCAndHhwX3BhZ2UnLCAiMSIpLCBAJGRlc19wYWdlLCAxLCAnUGFnZScpKTsKCQkk
b3V0W10gPSBncmFmKCR0aGlzLT5mQm94ZXMoJ2Rlc19mZWVkJywgYXJyYXkoJ3JzcycsICdh
dG9tJywgJycpLCAkZGVzX2ZlZWQsIE5VTEwsIGFycmF5KCdSU1MgZmVlZCcsICdBdG9tIGZl
ZWQnLCAnTmVpdGhlcicpKSk7CgkJJG91dFtdID0gZ3JhZihzdHJvbmcoJ1JlZGlyZWN0IHRo
aXMgcGVybWFuZW50IGxpbmsgdG8uLi4nKSk7CgkJLy8gR2VuZXJhdGUgYSBwZXJtbGlua3Mg
YXJyYXkKCQkkcGVybWxpbmtzID0gJHRoaXMtPnBhcmVudC0+Z2V0X2FsbF9wZXJtbGlua3Mo
MSk7CgkJZm9yZWFjaCAoJHBlcm1saW5rcyBhcyAka2V5ID0+ICRwbCkgewoJCQkkcGVybWxp
bmtzWyRrZXldID0gJHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ107CgkJfQoJCXVuc2V0KCRw
ZXJtbGlua3NbJGlkXSk7CgkJJG91dFtdID0gZ3JhZigkdGhpcy0+ZlNlbGVjdCgnZGVzX3Bl
cm1saW5rJywgJHBlcm1saW5rcywgQCRkZXNfcGVybWxpbmssIDEsICdQZXJtYW5lbnQgbGlu
aycpKTsKCQkkb3V0W10gPSBncmFmKCR0aGlzLT5mSW5wdXQoJ3RleHQnLCAnZGVzX2xvY2F0
aW9uJywgJGRlc19sb2NhdGlvbiwgTlVMTCwgJ0hUVFAgbG9jYXRpb24nKSk7CgkJJG91dFtd
ID0gJzwvZGl2Pic7CgkJJG91dFtdID0gJGhyOwoKCQkvLyBTYXZlIGJ1dHRvbgoJCSRvdXRb
XSA9IGZJbnB1dCgnc3VibWl0JywgJycsICdTYXZlIHBlcm1hbmVudCBsaW5rJyk7CgoJCS8v
IEV4dHJhIGZvcm0gaW5wdXRzIHdoaWNoIGdldCBmaWxsZWQgb24gc3VibWl0CgkJJG91dFtd
ID0gaElucHV0KCdjb21wb25lbnRzJywgJycpOwoJCSRvdXRbXSA9IGhJbnB1dCgncGxfcHJl
dmlldycsICcnKTsKCQkvLyBFdmVudCBhbmQgdGFiIGZvcm0gaW5wdXRzCgkJJG91dFtdID0g
JHRoaXMtPmZvcm1faW5wdXRzKCk7CgkJLy8gU3RlcCBhbmQgSUQgZm9ybSBpbnB1dHMKCQkk
b3V0W10gPSBzSW5wdXQoJHN0ZXApOwoJCSRvdXRbXSA9IGhJbnB1dChnYnBfaWQsICRpZCk7
CgoJCSRvdXRbXSA9ICc8L2Zvcm0+JzsKCgkJLy8gTGV0cyBlY2hvIGV2ZXJ5dGhpbmcgb3V0
LiBZYWghCgkJZWNobyBqb2luKG4sICRvdXQpOwoJfQoKCWZ1bmN0aW9uIGZMYWJlbCAoJGxh
YmVsLCAkY29udGVudHMgPSAnJywgJGxhYmVsX3JpZ2h0ID0gZmFsc2UpIHsKCQkvLyA8bGFi
ZWw+IHRoZSBjb250ZW50cyB3aXRoIHRoZSBuYW1lICRsYWJsZQoJCSRjb250ZW50cyA9ICgk
bGFiZWxfcmlnaHQpCgkJPyAkY29udGVudHMuJGxhYmVsCgkJOiAkbGFiZWwuKCRjb250ZW50
cyA/ICc6ICcuJGNvbnRlbnRzIDogJycpOwoJCXJldHVybiB0YWcoJGNvbnRlbnRzLCAnbGFi
ZWwnKTsKCX0KCglmdW5jdGlvbiBmQm94ZXMgKCRuYW1lID0gJycsICR2YWx1ZSA9ICcnLCAk
Y2hlY2tlZF92YWx1ZSA9ICcnLCAkb24gPSBhcnJheSgpLCAkbGFiZWwgPSAnJykgewoJCSRv
dXQgPSBhcnJheSgpOwoJCWlmIChpc19hcnJheSgkdmFsdWUpKSB7CgkJCSRpID0gMDsKCQkJ
Zm9yZWFjaCAoJHZhbHVlIGFzICR2YWwpIHsKCQkJCSRvID0gJzxpbnB1dCB0eXBlPSJyYWRp
byIgbmFtZT0iJy4kbmFtZS4nIiB2YWx1ZT0iJy4kdmFsLiciJzsKCQkJCSRvIC49ICgkY2hl
Y2tlZF92YWx1ZSA9PSAkdmFsKSA/ICcgY2hlY2tlZD0iY2hlY2tlZCInIDogJyc7CgkJCQlp
ZiAoaXNfYXJyYXkoJG9uKSkgZm9yZWFjaCgkb24gYXMgJGsgPT4gJHYpCgkJCQkJJG8gLj0g
KCRvbikgPyAnIG9uJy4kay4nPSInLiR2LiciJyA6ICcnOwoJCQkJJG8gLj0gJyAvPic7CgkJ
CQkkb3V0W10gPSAkdGhpcy0+ZkxhYmVsKCRsYWJlbFskaSsrXSwgJG8sIHRydWUpOwoJCQl9
CgkJfSBlbHNlIHsKCQkJJG8gPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSInLiRu
YW1lLiciIHZhbHVlPSInLiR2YWx1ZS4nIic7CgkJCSRvIC49ICgkY2hlY2tlZF92YWx1ZSA9
PSAkdmFsdWUpID8gJyBjaGVja2VkPSJjaGVja2VkIicgOiAnJzsKCQkJaWYgKGlzX2FycmF5
KCRvbikpIGZvcmVhY2goJG9uIGFzICRrID0+ICR2KQoJCQkJJG8gLj0gKCRvbikgPyAnIG9u
Jy4kay4nPSInLiR2LiciJyA6ICcnOwoJCQkkbyAuPSAnIC8+JzsKCQkJJG91dFtdID0gJHRo
aXMtPmZMYWJlbCgkbGFiZWwsICRvLCB0cnVlKTsKCQl9CgoJCXJldHVybiBqb2luKCcnLCAk
b3V0KTsKCX0KCglmdW5jdGlvbiBmSW5wdXQgKCR0eXBlLCAkbmFtZSA9ICcnLCAkdmFsdWUg
PSAnJywgJG9uID0gYXJyYXkoKSwgJGxhYmVsID0gJycpIHsKCQlpZiAoJHR5cGUgPT0gJ3Jh
ZGlvJyB8fCAkdHlwZSA9PSAnY2hlY2tib3gnKQoJCQlyZXR1cm4gJHRoaXMtPmZCb3hlcygk
bmFtZSwgJHZhbHVlLCAkb24sICRsYWJlbCk7CgoJCSRvID0gJzxpbnB1dCB0eXBlPSInLiR0
eXBlLiciIG5hbWU9IicuJG5hbWUuJyIgdmFsdWU9IicuJHZhbHVlLiciJzsKCQlpZiAoaXNf
YXJyYXkoJG9uKSkgZm9yZWFjaCgkb24gYXMgJGsgPT4gJHYpCgkJCSRvIC49ICgkb24pID8g
JyBvbicuJGsuJz0iJy4kdi4nIicgOiAnJzsKCQkkbyAuPSAnIC8+JzsKCQlyZXR1cm4gKCRs
YWJlbCkgPyAkdGhpcy0+ZkxhYmVsKCRsYWJlbCwgJG8pIDogJG87Cgl9CgoJZnVuY3Rpb24g
ZlNlbGVjdCAoJG5hbWUgPSAnJywgJGFycmF5ID0gJycsICR2YWx1ZSA9ICcnLCAkYmxhbmtf
Zmlyc3QgPSAnJywgJGxhYmVsID0gJycsICRvbl9zdWJtaXQgPSAnJykgewoJCSRvID0gc2Vs
ZWN0SW5wdXQoJG5hbWUsICRhcnJheSwgJHZhbHVlLCAkYmxhbmtfZmlyc3QsICRvbl9zdWJt
aXQpOwoJCXJldHVybiAoJGxhYmVsID8gJHRoaXMtPmZMYWJlbCgkbGFiZWwsICRvKSA6ICRv
KTsKCX0KCglmdW5jdGlvbiBwb3N0X3NhdmVfcGVybWxpbmsgKCkgewoJCS8vIFRoZSBmdW5j
dGlvbiBwb3N0cyBvciBzYXZlcyBhIHBlcm1hbmVudCBsaW5rIHRvIHR4cF9wcmVmcwoKCQll
eHRyYWN0KGdwc2EoYXJyYXkoJ3N0ZXAnLCBnYnBfaWQpKSk7CgoJCS8vIEdyYWIgdGhlIHVz
ZXIgZGVmaW5lZCBzZXR0aW5ncyBmcm9tIHRoZSBmb3JtIFBPU1QgZGF0YQoJCSRzZXR0aW5n
cyA9IGdwc2EoYXJyYXkoCgkJCSdwbF9uYW1lJywgJ3BsX3ByZWNlZGVuY2UnLCAncGxfcHJl
dmlldycsCgkJCSdjb25fc2VjdGlvbicsICdjb25fY2F0ZWdvcnknLAoJCQknZGVzX3NlY3Rp
b24nLCAnZGVzX2NhdGVnb3J5JywgJ2Rlc19wYWdlJywKCQkJJ2Rlc19wZXJtbGluaycsICdk
ZXNfZmVlZCcsICdkZXNfbG9jYXRpb24nLAoJCSkpOwoKCQkvLyBSZW1vdmUgc3BhY2VzIGZy
b20gdGhlIHBlcm1hbmVudCBsaW5rIHByZXZpZXcKCQkkc2V0dGluZ3NbJ3BsX3ByZXZpZXcn
XSA9IHByZWdfcmVwbGFjZSgnJVxzKy9ccyolJywgJy8nLCAkc2V0dGluZ3NbJ3BsX3ByZXZp
ZXcnXSk7CgoJCS8vIEV4cGxvZGUgdGhlIHNlcGFyYXRlZCBzdHJpbmcgb2Ygc2VyaWFsaXpl
IGNvbXBvbmVudHMgLSB0aGlzIHdhcyBtYWRlIGJ5IEphdmFTY3JpcHQuCgkJJHNlcmlhbGl6
ZV9jb21wb25lbnRzID0gZXhwbG9kZShnYnBfc2VwYXJhdG9yLCBydHJpbShncHMoJ2NvbXBv
bmVudHMnKSwgZ2JwX3NlcGFyYXRvcikpOwoKCQkvLyBVbnNlcmlhbGl6ZSB0aGUgY29tcG9u
ZW50cwoJCSRjb21wb25lbnRzID0gYXJyYXkoKTsKCQlmb3JlYWNoICgkc2VyaWFsaXplX2Nv
bXBvbmVudHMgYXMgJGMpCgkJCSRjb21wb25lbnRzW10gPSB1bnNlcmlhbGl6ZShzdHJpcHNs
YXNoZXMoJGMpKTsKCgkJLy8gQ29tcGxldGUgdGhlIHBlcm1hbmVudCBsaW5rIGFycmF5IC0g
dGhpcyBpcyBleGFjdGx5IHdoYXQgbmVlZHMgdG8gYmUgc3RvcmVkIGluIHRoZSBkYgoJCSRw
ZXJtbGluayA9IGFycmF5KCdzZXR0aW5ncycgPT4gJHNldHRpbmdzLCAnY29tcG9uZW50cycg
PT4gJGNvbXBvbmVudHMpOwoKCQkvLyBTYXZlIGl0CgkJJHRoaXMtPnNldF9wcmVmZXJlbmNl
KCRpZCwgJHBlcm1saW5rLCAnZ2JwX3NlcmlhbGl6ZWQnKTsKCgkJJHRoaXMtPnBhcmVudC0+
bWVzc2FnZSA9IG1lc3NlbmdlcignJywgJHNldHRpbmdzWydwbF9uYW1lJ10sICdzYXZlZCcp
OwoJfQoKCWZ1bmN0aW9uIHBocEFycmF5VG9Kc0FycmF5ICgkbmFtZSwgJGFycmF5KSB7CgkJ
Ly8gRnJvbSBQSFAubmV0CgkJaWYgKGlzX2FycmF5KCRhcnJheSkpIHsKCQkJJHJlc3VsdCA9
ICRuYW1lLicgPSBuZXcgQXJyYXkoKTsnLm47CgkJCWZvcmVhY2ggKCRhcnJheSBhcyAka2V5
ID0+ICR2YWx1ZSkKCQkJCSRyZXN1bHQgLj0gJHRoaXMtPnBocEFycmF5VG9Kc0FycmF5KCRu
YW1lLidbXCcnLiRrZXkuJ1wnXScsJHZhbHVlLCcnKS5uOwoJCX0gZWxzZSB7CgkJCSRyZXN1
bHQgPSAkbmFtZS4nID0gXCcnLiRhcnJheS4nXCc7JzsKCQl9CgkJcmV0dXJuICRyZXN1bHQ7
Cgl9Cn0KCmNsYXNzIFBlcm1hbmVudExpbmtzTGlzdFRhYlZpZXcgZXh0ZW5kcyBHQlBBZG1p
blRhYlZpZXcKewoJdmFyICRwZXJtaXNzaW9ucyA9ICcxLDInOwoJZnVuY3Rpb24gcHJlbG9h
ZCAoKSB7CgkJcmVnaXN0ZXJfY2FsbGJhY2soYXJyYXkoJiR0aGlzLCAkdGhpcy0+cGFyZW50
LT5ldmVudC4nX211bHRpX2VkaXQnKSwgJHRoaXMtPnBhcmVudC0+ZXZlbnQsICR0aGlzLT5w
YXJlbnQtPmV2ZW50LidfbXVsdGlfZWRpdCcsIDEpOwoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFy
cmF5KCYkdGhpcywgJHRoaXMtPnBhcmVudC0+ZXZlbnQuJ19jaGFuZ2VfcGFnZWJ5JyksICR0
aGlzLT5wYXJlbnQtPmV2ZW50LCAkdGhpcy0+cGFyZW50LT5ldmVudC4nX2NoYW5nZV9wYWdl
YnknLCAxKTsKCX0KCglmdW5jdGlvbiBtYWluICgpIHsKCQlleHRyYWN0KGdwc2EoYXJyYXko
J3BhZ2UnLCAnc29ydCcsICdkaXInLCAnY3JpdCcsICdzZWFyY2hfbWV0aG9kJykpKTsKCgkJ
JGV2ZW50ID0gJHRoaXMtPnBhcmVudC0+ZXZlbnQ7CgoJCSRwZXJtbGlua3MgPSAkdGhpcy0+
cGFyZW50LT5nZXRfYWxsX3Blcm1saW5rcygpOwoJCSR0b3RhbCA9IGNvdW50KCRwZXJtbGlu
a3MpOwoKCQlpZiAoJHRvdGFsIDwgMSkgewoJCQllY2hvIGdyYWYoJ1lvdSBoYXZlblwndCBj
cmVhdGVkIGFueSBjdXN0b20gcGVybWFuZW50IGxpbmtzIHJ1bGVzIHlldC4nLCAnIHN0eWxl
PSJ0ZXh0LWFsaWduOiBjZW50ZXI7IicpLgoJCQkJIGdyYWYoJzxhIGhyZWY9IicuJHRoaXMt
PnVybChhcnJheShnYnBfdGFiID0+ICdidWlsZCcpLCB0cnVlKS4nIj5DbGljayBoZXJlPC9h
PiB0byBhZGQgb25lLicsICcgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiJyk7CgkJCXJl
dHVybjsKCQl9CgoJCSRsaW1pdCA9IG1heCgkdGhpcy0+cHJlZignbGlzdF9wYWdlYnknKSwg
MTUpOwoKCQlsaXN0KCRwYWdlLCAkb2Zmc2V0LCAkbnVtUGFnZXMpID0gJHRoaXMtPnBhZ2Vy
KCR0b3RhbCwgJGxpbWl0LCAkcGFnZSk7CgoJCWlmIChlbXB0eSgkc29ydCkpCgkJCSRzb3J0
ID0gJ3BsX3ByZWNlZGVuY2UnOwoKCQlpZiAoZW1wdHkoJGRpcikpCgkJCSRkaXIgPSAnZGVz
Yyc7CgoJCSRkaXIgPSAoJGRpciA9PSAnZGVzYycpID8gJ2Rlc2MnIDogJ2FzYyc7CgoJCS8v
IFNvcnQgdGhlIHBlcm1saW5rcyB2aWEgdGhlIHNlbGVjdGVkIGNvbHVtbiBhbmQgdGhlbiB0
aGVpciBuYW1lcy4KCQlmb3JlYWNoICgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGVybWxpbmsp
IHsKCQkJJHNvcnRfa2V5c1skaWRdID0gJHBlcm1saW5rWydzZXR0aW5ncyddWyRzb3J0XTsK
CQkJJG5hbWVbJGlkXSA9ICRwZXJtbGlua1snc2V0dGluZ3MnXVsncGxfbmFtZSddOwoJCX0K
CQlhcnJheV9tdWx0aXNvcnQoJHNvcnRfa2V5cywgKCgkZGlyID09ICdkZXNjJykgPyBTT1JU
X0RFU0MgOiBTT1JUX0FTQyksICRuYW1lLCBTT1JUX0FTQywgJHBlcm1saW5rcyk7CgoJCSRz
d2l0Y2hfZGlyID0gKCRkaXIgPT0gJ2Rlc2MnKSA/ICdhc2MnIDogJ2Rlc2MnOwoKCQkkcGVy
bWxpbmtzID0gYXJyYXlfc2xpY2UoJHBlcm1saW5rcywgJG9mZnNldCwgJGxpbWl0KTsKCgkJ
aWYgKGNvdW50KCRwZXJtbGlua3MpKSB7CgkJCWVjaG8gbi5uLic8Zm9ybSBuYW1lPSJsb25n
Zm9ybSIgbWV0aG9kPSJwb3N0IiBhY3Rpb249ImluZGV4LnBocCIgb25zdWJtaXQ9InJldHVy
biB2ZXJpZnkoXCcnLmdUeHQoJ2FyZV95b3Vfc3VyZScpLidcJykiPicuCgoJCQkJbi5zdGFy
dFRhYmxlKCdsaXN0JykuCgkJCQluLnRyKAoJCQkJCW4uY29sdW1uX2hlYWQoJ25hbWUnLCAn
cGxfbmFtZScsICRldmVudCwgdHJ1ZSwgJHN3aXRjaF9kaXIsICRjcml0LCAkc2VhcmNoX21l
dGhvZCkuCgkJCQkJaENlbGwoKS4KCQkJCQljb2x1bW5faGVhZCgncHJldmlldycsICdwbF9w
cmV2aWV3JywgJGV2ZW50LCB0cnVlLCAkc3dpdGNoX2RpciwgJGNyaXQsICRzZWFyY2hfbWV0
aG9kKS4KCQkJCQljb2x1bW5faGVhZCgncHJlY2VkZW5jZScsICdwbF9wcmVjZWRlbmNlJywg
JGV2ZW50LCB0cnVlLCAkc3dpdGNoX2RpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKS4KCQkJ
CQloQ2VsbCgpCgkJCQkpOwoKCQkJaW5jbHVkZV9vbmNlIHR4cGF0aC4nL3B1Ymxpc2gvdGFn
aGFuZGxlcnMucGhwJzsKCgkJCWZvcmVhY2ggKCRwZXJtbGlua3MgYXMgJGlkID0+ICRwZXJt
bGluaykgewoJCQkJZXh0cmFjdCgkcGVybWxpbmtbJ3NldHRpbmdzJ10pOwoKCQkJCSRtYW5h
Z2UgPSBuLic8dWwnLih2ZXJzaW9uX2NvbXBhcmUoJEdMT0JBTFNbJ3RoaXN2ZXJzaW9uJ10s
ICc0LjAuMycsICc8PScpID8gJyBzdHlsZT0ibWFyZ2luOjA7cGFkZGluZzowO2xpc3Qtc3R5
bGUtdHlwZTpub25lOyI+JyA6ICc+JykuCgkJCQkJCW4udC4nPGxpPicuaHJlZihnVHh0KCdl
ZGl0JyksICR0aGlzLT51cmwoYXJyYXkoZ2JwX3RhYiA9PiAnYnVpbGQnLCBnYnBfaWQgPT4g
JGlkKSwgdHJ1ZSkpLic8L2xpPicuCgkJCQkJCW4uJzwvdWw+JzsKCgkJCQllY2hvIG4ubi50
cigKCgkJCQkJdGQoCgkJCQkJCWhyZWYoJHBsX25hbWUsICR0aGlzLT51cmwoYXJyYXkoZ2Jw
X3RhYiA9PiAnYnVpbGQnLCBnYnBfaWQgPT4gJGlkKSwgdHJ1ZSkpCgkJCQkJLCA3NSkuCgoJ
CQkJCXRkKCRtYW5hZ2UsIDM1KS4KCgkJCQkJdGQoJHBsX3ByZXZpZXcsIDE3NSkuCgkJCQkJ
dGQoJHBsX3ByZWNlZGVuY2UuJyZuYnNwOycsIDUwKS4KCgkJCQkJdGQoCgkJCQkJCWZJbnB1
dCgnY2hlY2tib3gnLCAnc2VsZWN0ZWRbXScsICRpZCkKCQkJCQkpCgkJCQkpOwoJCQl9CgoJ
CQllY2hvIG4ubi50cigKCQkJCXRkYSgKCQkJCQlzZWxlY3RfYnV0dG9ucygpLgoJCQkJCSR0
aGlzLT5wZXJtbGlua3NfbXVsdGllZGl0X2Zvcm0oJHBhZ2UsICRzb3J0LCAkZGlyLCAkY3Jp
dCwgJHNlYXJjaF9tZXRob2QpCgkJCQksJyBjb2xzcGFuPSI0IiBzdHlsZT0idGV4dC1hbGln
bjogcmlnaHQ7IGJvcmRlcjogbm9uZTsiJykKCQkJKS4KCgkJCW4uZW5kVGFibGUoKS4KCQkJ
bi4nPC9mb3JtPicuCgoJCQluLiR0aGlzLT5uYXZfZm9ybSgkZXZlbnQsICRwYWdlLCAkbnVt
UGFnZXMsICRzb3J0LCAkZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2QpLgoKCQkJbi5wYWdl
YnlfZm9ybSgkZXZlbnQsICR0aGlzLT5wcmVmKCdsaXN0X3BhZ2VieScpKTsKCQl9Cgl9CgoJ
ZnVuY3Rpb24gcGFnZXIgKCR0b3RhbCwgJGxpbWl0LCAkcGFnZSkgewoJCWlmIChmdW5jdGlv
bl9leGlzdHMoJ3BhZ2VyJykpCgkJCXJldHVybiBwYWdlcigkdG90YWwsICRsaW1pdCwgJHBh
Z2UpOwoKCQkvLyBUaGlzIGlzIHRha2VuIGZyb20gdHhwbGliX21pc2MucGhwIHIxNTg4IGl0
IGlzIHJlcXVpcmVkIGZvciA0LjAuMyBjb21wYXRpYml0bHkKCQkkbnVtX3BhZ2VzID0gY2Vp
bCgkdG90YWwgLyAkbGltaXQpOwoJCSRwYWdlID0gJHBhZ2UgPyAoaW50KSAkcGFnZSA6IDE7
CgkJJHBhZ2UgPSBtaW4obWF4KCRwYWdlLCAxKSwgJG51bV9wYWdlcyk7CgkJJG9mZnNldCA9
IG1heCgoJHBhZ2UgLSAxKSAqICRsaW1pdCwgMCk7CgkJcmV0dXJuIGFycmF5KCRwYWdlLCAk
b2Zmc2V0LCAkbnVtX3BhZ2VzKTsKCX0KCglmdW5jdGlvbiBuYXZfZm9ybSAoJGV2ZW50LCAk
cGFnZSwgJG51bVBhZ2VzLCAkc29ydCwgJGRpciwgJGNyaXQsICRtZXRob2QpIHsKCQlpZiAo
ZnVuY3Rpb25fZXhpc3RzKCduYXZfZm9ybScpKQoJCQlyZXR1cm4gbmF2X2Zvcm0oJGV2ZW50
LCAkcGFnZSwgJG51bVBhZ2VzLCAkc29ydCwgJGRpciwgJGNyaXQsICRtZXRob2QpOwoKCQkv
LyBUaGlzIGlzIGJhc2ljYWxseSBzdG9sZW4gZnJvbSB0aGUgNC4wLjMgdmVyc2lvbiBvZiBp
bmNsdWRlcy90eHBfbGlzdC5waHAKCQkvLyAtIGxpc3RfbmF2X2Zvcm0oKSBmb3IgNC4wLjMg
Y29tcGF0aWJpdGx5CgkJJG5hdltdID0gKCRwYWdlID4gMSkKCQkJPyBQcmV2TmV4dExpbmso
JGV2ZW50LCAkcGFnZS0xLCBnVHh0KCdwcmV2JyksICdwcmV2JywgJHNvcnQsICRkaXIpIDog
Jyc7CgkJJG5hdltdID0gc3Auc21hbGwoJHBhZ2UuICcvJy4kbnVtUGFnZXMpLnNwOwoJCSRu
YXZbXSA9ICgkcGFnZSAhPSAkbnVtUGFnZXMpCgkJCT8gUHJldk5leHRMaW5rKCRldmVudCwg
JHBhZ2UrMSwgZ1R4dCgnbmV4dCcpLCAnbmV4dCcsICRzb3J0LCAkZGlyKSA6ICcnOwoJCXJl
dHVybiAoJG5hdikKCQkJPyBncmFmKGpvaW4oJycsICRuYXYpLCAnIGFsaWduPSJjZW50ZXIi
JykgOiAnJzsKCX0KCglmdW5jdGlvbiBwZXJtbGlua3NfbXVsdGllZGl0X2Zvcm0gKCRwYWdl
LCAkc29ydCwgJGRpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKSB7CgkJJG1ldGhvZHMgPSBh
cnJheSgKCQkJJ2RlbGV0ZScgPT4gZ1R4dCgnZGVsZXRlJyksCgkJKTsKCgkJcmV0dXJuIGV2
ZW50X211bHRpZWRpdF9mb3JtKCR0aGlzLT5wYXJlbnQtPmV2ZW50LCAkbWV0aG9kcywgJHBh
Z2UsICRzb3J0LCAkZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2QpOwoJfQoKCWZ1bmN0aW9u
IHBlcm1saW5rc19jaGFuZ2VfcGFnZWJ5ICgpIHsKCQkkdGhpcy0+c2V0X3ByZWZlcmVuY2Uo
J2xpc3RfcGFnZWJ5JywgZ3BzKCdxdHknKSk7Cgl9CgoJZnVuY3Rpb24gcGVybWxpbmtzX211
bHRpX2VkaXQgKCkgewoJCSRtZXRob2QgPSBncHMoJ2VkaXRfbWV0aG9kJykKCQkJPyBncHMo
J2VkaXRfbWV0aG9kJykgLy8gRnJvbSBUeHAgNC4wLjQgYW5kIGdyZWF0ZXIKCQkJOiBncHMo
J21ldGhvZCcpOyAvLyBVcCB0byBUeHAgNC4wLjMKCgkJc3dpdGNoICgkbWV0aG9kKSB7CgkJ
CWNhc2UgJ2RlbGV0ZSc6CgkJCQlmb3JlYWNoIChncHMoJ3NlbGVjdGVkJykgYXMgJGlkKSB7
CgkJCQkJCQkkZGVsZXRlZFtdID0gJHRoaXMtPnBhcmVudC0+cmVtb3ZlX3Blcm1saW5rKCRp
ZCk7CgkJCQl9CgkJCWJyZWFrOwoJCX0KCgkJJHRoaXMtPnBhcmVudC0+bWVzc2FnZSA9IChp
c3NldCgkZGVsZXRlZCkgJiYgaXNfYXJyYXkoJGRlbGV0ZWQpICYmIGNvdW50KCRkZWxldGVk
KSkKCQkJPyBtZXNzZW5nZXIoJycsIGpvaW4oJywgJywgJGRlbGV0ZWQpICwnZGVsZXRlZCcp
CgkJCTogbWVzc2VuZ2VyKCdhbiBlcnJvciBvY2N1cnJlZCcsICcnLCAnJyk7Cgl9Cn0KCmds
b2JhbCAkZ2JwX3BsOwokZ2JwX3BsID0gbmV3IFBlcm1hbmVudExpbmtzKCdQZXJtYW5lbnQg
TGlua3MnLCAncGVybWxpbmtzJywgJ2FkbWluJyk7CmlmIChAdHhwaW50ZXJmYWNlID09ICdw
dWJsaWMnKSB7CglyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJGdicF9wbCwgJ19mZWVkX2Vu
dHJ5JyksICdyc3NfZW50cnknKTsKCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkZ2JwX3Bs
LCAnX2ZlZWRfZW50cnknKSwgJ2F0b21fZW50cnknKTsKCXJlZ2lzdGVyX2NhbGxiYWNrKGFy
cmF5KCYkZ2JwX3BsLCAnX3RleHRwYXR0ZXJuJyksICd0ZXh0cGF0dGVybicpOwoJcmVnaXN0
ZXJfY2FsbGJhY2soYXJyYXkoJiRnYnBfcGwsICdfdGV4dHBhdHRlcm5fZW5kJyksICd0ZXh0
cGF0dGVybl9lbmQnKTsKCglmdW5jdGlvbiBnYnBfaWZfcmVnZXggKCRhdHRzLCAkdGhpbmcp
IHsKCQlnbG9iYWwgJHByZXRleHQ7CgkJZXh0cmFjdChsQXR0cyhhcnJheSgKCQkJJ25hbWUn
ID0+ICcnLAoJCQkndmFsJyAgPT4gJycsCgkJKSwkYXR0cykpOwoJCSRtYXRjaCA9IChAJHBy
ZXRleHRbInBlcm1saW5rX3JlZ2V4X3skbmFtZX0iXSA9PSAkdmFsKTsKCQlyZXR1cm4gcGFy
c2UoRXZhbEVsc2UoJHRoaW5nLCAkbWF0Y2gpKTsKCX0KCglmdW5jdGlvbiBnYnBfaWZfdGV4
dCAoJGF0dHMsICR0aGluZykgewoJCWdsb2JhbCAkcHJldGV4dDsKCQlleHRyYWN0KGxBdHRz
KGFycmF5KAoJCQknbmFtZScgPT4gJycsCgkJCSd2YWwnICA9PiAnJywKCQkpLCRhdHRzKSk7
CgoJCSRtYXRjaCA9IGZhbHNlOwoJCWlmICghZW1wdHkoJG5hbWUpKSB7CgkJCWlmIChlbXB0
eSgkdmFsKSkKCQkJCSRtYXRjaCA9IChpc3NldCgkcHJldGV4dFsicGVybWxpbmtfdGV4dF97
JG5hbWV9Il0pKTsKCQkJZWxzZQoJCQkJJG1hdGNoID0gKEAkcHJldGV4dFsicGVybWxpbmtf
dGV4dF97JG5hbWV9Il0gPT0gJHZhbCk7CgkJfQoJCXJldHVybiBwYXJzZShFdmFsRWxzZSgk
dGhpbmcsICRtYXRjaCkpOwoJfQoKCWZ1bmN0aW9uIGdicF91c2VfcGFnZWxpbmsgKCRhdHRz
LCAkdGhpbmcgPSAnJykgewoJCWdsb2JhbCAkZ2JwX3BsOwoJCWV4dHJhY3QobEF0dHMoYXJy
YXkoCgkJCSdydWxlJyA9PiAnJywKCQkpLCRhdHRzKSk7CgkJcmV0dXJuICRnYnBfcGwtPl90
ZXh0cGF0dGVybl9lbmQocGFyc2UoJHRoaW5nKSwgJHJ1bGUpOwoJfQoKCWZ1bmN0aW9uIGdi
cF9kaXNhYmxlX3Blcm1saW5rcyAoJGF0dHMsICR0aGluZyA9ICcnKSB7CgkJZ2xvYmFsICRn
YnBfcGw7CgkJcmV0dXJuICRnYnBfcGwtPnRvZ2dsZV9wZXJtbGlua19tb2RlKCdwYXJzZScs
ICR0aGluZyk7Cgl9Cn0KIjtzOjM6Im1kNSI7czozMjoiMGFhMmVmYzhkYzIyZDE3NDBjMjlh
YmE4YmEwOGZlMTQiO30=
