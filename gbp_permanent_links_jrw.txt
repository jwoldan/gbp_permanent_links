# gbp_permanent_links_jrw v0.14_jrw.1
# Custom permanent links rules
# Graeme Porteous, modified by Jeffrey Woldan
# http://rgbp.co.uk/projects/textpattern/gbp_permanent_links/

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YTo5OntzOjQ6Im5hbWUiO3M6MjM6ImdicF9wZXJtYW5lbnRfbGlua3NfanJ3IjtzOjc6InZl
cnNpb24iO3M6MTA6IjAuMTRfanJ3LjEiO3M6NjoiYXV0aG9yIjtzOjQzOiJHcmFlbWUgUG9y
dGVvdXMsIG1vZGlmaWVkIGJ5IEplZmZyZXkgV29sZGFuIjtzOjEwOiJhdXRob3JfdXJpIjtz
OjU5OiJodHRwOi8vcmdicC5jby51ay9wcm9qZWN0cy90ZXh0cGF0dGVybi9nYnBfcGVybWFu
ZW50X2xpbmtzLyI7czoxMToiZGVzY3JpcHRpb24iO3M6Mjg6IkN1c3RvbSBwZXJtYW5lbnQg
bGlua3MgcnVsZXMiO3M6NDoidHlwZSI7czoxOiIxIjtzOjQ6ImhlbHAiO3M6MTUxOiJoMS4g
Z2JwX3Blcm1hbmVudF9saW5rcy4KClRoZXJlIGlzIG5vIHBsdWdpbiBkb2N1bWVudGF0aW9u
LiBGb3IgaGVscCBwbGVhc2UgdXNlIHRoZSAiZm9ydW0gdGhyZWFkIjpodHRwOi8vZm9ydW0u
dGV4dHBhdHRlcm4uY29tL3ZpZXd0b3BpYy5waHA/aWQ9MTg5MTguIjtzOjQ6ImNvZGUiO3M6
Njc3ODU6IgovLyBDb25zdGFudHMKQGRlZmluZSgnZ2JwX3NhdmUnLCAnc2F2ZScpOwpAZGVm
aW5lKCdnYnBfcG9zdCcsICdwb3N0Jyk7CkBkZWZpbmUoJ2dicF9zZXBhcmF0b3InLCAnJn4m
fiYnKTsKCi8vIHJlcXVpcmVfcGx1Z2luKCkgd2lsbCByZXNldCB0aGUgJHR4cF9jdXJyZW50
X3BsdWdpbiBnbG9iYWwKZ2xvYmFsICR0eHBfY3VycmVudF9wbHVnaW47CiRnYnBfY3VycmVu
dF9wbHVnaW4gPSAkdHhwX2N1cnJlbnRfcGx1Z2luOwpyZXF1aXJlX3BsdWdpbignZ2JwX2Fk
bWluX2xpYnJhcnknKTsKJHR4cF9jdXJyZW50X3BsdWdpbiA9ICRnYnBfY3VycmVudF9wbHVn
aW47CgpjbGFzcyBQZXJtYW5lbnRMaW5rcyBleHRlbmRzIEdCUFBsdWdpbgp7Cgl2YXIgJHBl
cm1pc3Npb25zID0gJzEsMic7Cgl2YXIgJHByZWZlcmVuY2VzID0gYXJyYXkoCgkJJ3Nob3df
cHJlZml4JyA9PiBhcnJheSgndmFsdWUnID0+IDAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycp
LAoJCSdzaG93X3N1ZmZpeCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwLCAndHlwZScgPT4gJ3ll
c25vcmFkaW8nKSwKCQknb21pdF90cmFpbGluZ19zbGFzaCcgPT4gYXJyYXkoJ3ZhbHVlJyA9
PiAwICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3JlZGlyZWN0X210X3N0eWxlX2xp
bmtzJyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwK
CQknY2xlYW5fcGFnZV9hcmNoaXZlX2xpbmtzJyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAn
dHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQknam9pbl9wcmV0ZXh0X3RvX3BhZ2VsaW5rcycg
PT4gYXJyYXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2No
ZWNrX3ByZXRleHRfY2F0ZWdvcnlfY29udGV4dCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwICwg
J3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2NoZWNrX3ByZXRleHRfc2VjdGlvbl9jb250
ZXh0JyA9PiBhcnJheSgndmFsdWUnID0+IDAgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwK
CQknZm9yY2VfbG93ZXJjYXNlX3VybHMnID0+IGFycmF5KCd2YWx1ZScgPT4gMSAsICd0eXBl
JyA9PiAneWVzbm9yYWRpbycpLAoJCSdhdXRvbWF0aWNhbGx5X2FwcGVuZF90aXRsZScgPT4g
YXJyYXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3Blcm1s
aW5rX3JlZGlyZWN0X2h0dHBfc3RhdHVzJyA9PiBhcnJheSgndmFsdWUnID0+ICczMDEnICwg
J3R5cGUnID0+ICd0ZXh0X2lucHV0JyksCgkJJ3VybF9yZWRpcmVjdF9odHRwX3N0YXR1cycg
PT4gYXJyYXkoJ3ZhbHVlJyA9PiAnMzAyJyAsICd0eXBlJyA9PiAndGV4dF9pbnB1dCcpLAoJ
CSd0ZXh0X2FuZF9yZWdleF9zZWdtZW50X3Njb3JlcycgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAn
MCcgLCAndHlwZScgPT4gJ3RleHRfaW5wdXQnKSwKCQknZGVidWcnID0+IGFycmF5KCd2YWx1
ZScgPT4gMCwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkpOwoJdmFyICRtYXRjaGVkX3Bl
cm1saW5rID0gYXJyYXkoKTsKCXZhciAkcGFydGlhbF9tYXRjaGVzID0gYXJyYXkoKTsKCXZh
ciAkY2xlYXZlcl9wYXJ0aWFsX21hdGNoOwoJdmFyICRidWZmZXJfZGVidWcgPSBhcnJheSgp
OwoKCWZ1bmN0aW9uIHByZWxvYWQgKCkgewoJCW5ldyBQZXJtYW5lbnRMaW5rc0xpc3RUYWJW
aWV3KCdsaXN0JywgJ2xpc3QnLCAkdGhpcyk7CgkJbmV3IFBlcm1hbmVudExpbmtzQnVpbGRU
YWJWaWV3KCdidWlsZCcsICdidWlsZCcsICR0aGlzKTsKCQluZXcgR0JQUHJlZmVyZW5jZVRh
YlZpZXcoJHRoaXMpOwoJfQoKCWZ1bmN0aW9uIG1haW4gKCkgewoJCXJlcXVpcmVfcHJpdnMo
JHRoaXMtPmV2ZW50KTsKCX0KCglmdW5jdGlvbiBnZXRfYWxsX3Blcm1saW5rcyAoJHNvcnQg
PSAwLCAkZXhjbHVkZSA9IGFycmF5KCkpIHsKCQlzdGF0aWMgJHJzOwoJCWlmICghaXNzZXQo
JHJzKSkKCQkJJHJzID0gc2FmZV9jb2x1bW4oCgkJCQkiUkVQTEFDRShuYW1lLCAneyR0aGlz
LT5wbHVnaW5fbmFtZX1fJywgJycpIEFTIGlkIiwgJ3R4cF9wcmVmcycsCgkJCQkiYGV2ZW50
YCA9ICd7JHRoaXMtPmV2ZW50fScgQU5EIGBuYW1lYCBSRUdFWFAgJ157JHRoaXMtPnBsdWdp
bl9uYW1lfV8uezEzfSQnIgoJCQkpOwoKCQlpZiAoQHR4cGludGVyZmFjZSA9PSAncHVibGlj
JykKCQkJJHRoaXMtPmRlYnVnKCdMb2FkaW5nIHBlcm1saW5rcyBmcm9tIGRiJyk7CgkJJGkg
PSAwOwoKCQkkcGVybWxpbmtzID0gYXJyYXkoKTsKCQlmb3JlYWNoICgkcnMgYXMgJGlkKSB7
CgkJCSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJGlkKTsKCgkJCWlmIChjb3VudCgkZXhj
bHVkZSkgPiAwKQoJCQkJZm9yZWFjaCAoJHBsWydjb21wb25lbnRzJ10gYXMgJHBsX2MpIHsK
CQkJCQlpZiAoaXNfYXJyYXkoJGV4Y2x1ZGUpICYmIGluX2FycmF5KCRwbF9jWyd0eXBlJ10s
ICRleGNsdWRlKSkKCQkJCQkJY29udGludWUgMjsKCQkJCQlpZiAoaXNfc3RyaW5nKCRleGNs
dWRlKSAmJiAkcGxfY1sndHlwZSddID09PSAkZXhjbHVkZSkKCQkJCQkJY29udGludWUgMjsK
CQkJCX0KCgkJCSRwZXJtbGlua3NbJGlkXSA9ICRwbDsKCgkJCWlmICgkc29ydCkKCQkJCSRw
cmVjZWRlbmNlWyRpZF0gPSAkcGVybWxpbmtzWyRpZF1bJ3NldHRpbmdzJ11bJ3BsX3ByZWNl
ZGVuY2UnXTsKCQl9CgoJCS8vIElmIG1vcmUgdGhhbiBvbmUgcGVybWFuZW50IGxpbmssIHNv
cnQgYnkgdGhlaXIgcHJlY2VkZW5jZSB2YWx1ZS4KCQlpZiAoJHNvcnQgJiYgY291bnQoJHBl
cm1saW5rcykgPiAxKQoJCQlhcnJheV9tdWx0aXNvcnQoJHByZWNlZGVuY2UsIFNPUlRfREVT
QywgJHBlcm1saW5rcyk7CgoJCWlmIChAdHhwaW50ZXJmYWNlID09ICdwdWJsaWMnKSB7CgkJ
CWZvcmVhY2ggKCRwZXJtbGlua3MgYXMgJHBsKQoJCQkJJHRoaXMtPmRlYnVnKCRwbFsnc2V0
dGluZ3MnXVsncGxfcHJlY2VkZW5jZSddLic6ICcuJHBsWydzZXR0aW5ncyddWydwbF9uYW1l
J10uJyAoJy4kcGxbJ3NldHRpbmdzJ11bJ3BsX3ByZXZpZXcnXS4nKScpOwoJCX0KCgkJcmV0
dXJuICRwZXJtbGlua3M7Cgl9CgoJZnVuY3Rpb24gZ2V0X3Blcm1saW5rICgkaWQpIHsKCQkk
cGVybWxpbmsgPSAkdGhpcy0+cHJlZigkaWQpOwoJCXJldHVybiBpc19hcnJheSgkcGVybWxp
bmspID8gJHBlcm1saW5rIDogYXJyYXkoKTsKCX0KCglmdW5jdGlvbiByZW1vdmVfcGVybWxp
bmsgKCRpZCkgewoJCSRwZXJtbGluayA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJGlkKTsKCQlz
YWZlX2RlbGV0ZSgndHhwX3ByZWZzJywgImBldmVudGAgPSAneyR0aGlzLT5ldmVudH0nIEFO
RCBgbmFtZWAgTElLRSAneyR0aGlzLT5wbHVnaW5fbmFtZX1feyRpZH0lJyIpOwoJCXJldHVy
biAkcGVybWxpbmtbJ3NldHRpbmdzJ11bJ3BsX25hbWUnXTsKCX0KCglmdW5jdGlvbiBfZmVl
ZF9lbnRyeSAoKSB7CgkJc3RhdGljICRzZXQ7CgkJaWYgKCFpc3NldCgkc2V0KSkgewoJCQkv
LyBXZSdyZSBpbiBhIGZlZWQgZm9yY2UgZGVidWdnaW5nIG9mZi4KCQkJJHRoaXMtPnByZWZl
cmVuY2VzWydkZWJ1ZyddWyd2YWx1ZSddID0gJEdMT0JBTFNbJ3ByZWZzJ11bJHRoaXMtPnBs
dWdpbl9uYW1lLidfZGVidWcnXSA9IDA7CgoJCQkkdGhpcy0+c2V0X3Blcm1saW5rX21vZGUo
dHJ1ZSk7CgkJCSRzZXQgPSB0cnVlOwoJCX0KCX0KCglmdW5jdGlvbiBfdGV4dHBhdHRlcm4g
KCkgewoJCWdsb2JhbCAkcGx1Z2luc192ZXIsICRwcmV0ZXh0LCAkcHJlZnMsICRwbHVnaW5f
Y2FsbGJhY2s7CgoJCSR0aGlzLT5kZWJ1ZygnUGx1Z2luOiAnLiR0aGlzLT5wbHVnaW5fbmFt
ZS4nIC0gJy4kcGx1Z2luc192ZXJbJHRoaXMtPnBsdWdpbl9uYW1lXSk7CgkJJHRoaXMtPmRl
YnVnKCdGdW5jdGlvbjogJy5fX0ZVTkNUSU9OX18uJygpJyk7CgoJCS8vIFVSSQoJCSRyZXEg
PSAkcHJldGV4dFsncmVxJ107CgkJJHJlcSA9IHByZWdfcmVwbGFjZSgnJVw/W15cL10rJCUn
LCAnJywgJHJlcSk7CgkJJHRoaXMtPmRlYnVnKCdSZXF1ZXN0IFVSSTogJy4kcmVxKTsKCQkk
dXJpID0gZXhwbG9kZSgnLycsIHRyaW0oJHJlcSwgJy8nKSk7CgoJCS8vIFRoZSBudW1iZXIg
b2YgY29tcG9uZW50cyBjb21lcyBpbiB1c2VmdWwgd2hlbiBkZXRlcm1pbmluZyB0aGUgYmVz
dCBwYXJ0aWFsIG1hdGNoLgoJCSR1cmlfY29tcG9uZW50X2NvdW50ID0gY291bnQoJHVyaSk7
CgoJCS8vIFBlcm1hbmVudCBsaW5rcwoJCSRwZXJtbGlua3MgPSAkdGhpcy0+Z2V0X2FsbF9w
ZXJtbGlua3MoMSk7CgoJCS8vIEZvcmNlIFRleHRwYXR0ZXJuIGFuZCB0YWdzIHRvIHVzZSBt
ZXNzeSBVUkxzIC0gdGhlc2UgYXJlIGVhc2llciB0bwoJCS8vIGZpbmQgaW4gcmVnZXgKCQkk
dGhpcy0+c2V0X3Blcm1saW5rX21vZGUoKTsKCgkJaWYgKGNvdW50KCRwZXJtbGlua3MpKSB7
CgoJCQkvLyBXZSBhbHNvIHdhbnQgdG8gbWF0Y2ggdGhlIGZyb250IHBhZ2Ugb2YgdGhlIHNp
dGUgKGZvciBwYWdlIG51bWJlcnMgLyBmZWVkcyBldGMuLikuCgkJCS8vIEFkZCBhIHBlcm1s
aW5rcyBydWxlIHdoaWNoIHdpbGwgZG8gdGhhdC4KCQkJJHBlcm1saW5rc1snZGVmYXVsdCdd
ID0gYXJyYXkoCgkJCQknY29tcG9uZW50cycgPT4gYXJyYXkoKSwKCQkJCSdzZXR0aW5ncycg
PT4gYXJyYXkoCgkJCQkJJ3BsX25hbWUnID0+ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1
bHQnLCAncGxfcHJlY2VkZW5jZScgPT4gJycsICdwbF9wcmV2aWV3JyA9PiAnLycsCgkJCQkJ
J2Nvbl9zZWN0aW9uJyA9PiAnJywgJ2Nvbl9jYXRlZ29yeScgPT4gJycsICdkZXNfc2VjdGlv
bicgPT4gJycsICdkZXNfY2F0ZWdvcnknID0+ICcnLAoJCQkJCSdkZXNfcGVybWxpbmsnID0+
ICcnLCAnZGVzX2ZlZWQnID0+ICcnLCAnZGVzX2xvY2F0aW9uJyA9PiAnJywgJ2Rlc19wYWdl
JyA9PiAnJwoJCQkpKTsKCgkJCS8vIEV4dGVuZCB0aGUgcHJldGV4dF9yZXBsYWNlbWVudCBz
Y29wZSBvdXRzaWRlIHRoZSBmb3JlYWNoIHBlcm1saW5rIGxvb3AKCQkJJHByZXRleHRfcmVw
bGFjZW1lbnQgPSBOVUxMOwoKCQkJZm9yZWFjaCgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGwp
IHsKCQkJCS8vIEV4dHJhY3QgdGhlIHBlcm1saW5rIHNldHRpbmdzCgkJCQkkcGxfc2V0dGlu
Z3MgPSAkcGxbJ3NldHRpbmdzJ107CgkJCQlleHRyYWN0KCRwbF9zZXR0aW5ncyk7CgoJCQkJ
JHRoaXMtPmRlYnVnKCdQZXJtbGluayBuYW1lOiAnLiRwbF9uYW1lKTsKCQkJCSR0aGlzLT5k
ZWJ1ZygnUGVybWxpbmsgaWQ6ICcuJGlkKTsKCQkJCSR0aGlzLT5kZWJ1ZygnUHJldmlldzog
Jy4kcGxfcHJldmlldyk7CgoJCQkJJHBsX2NvbXBvbmVudHMgPSAkcGxbJ2NvbXBvbmVudHMn
XTsKCgkJCQkvLyBVUkkgY29tcG9uZW50cwoJCQkJJHVyaV9jb21wb25lbnRzID0gJHVyaTsK
CgkJCQkkdGhpcy0+ZGVidWcoJ1BMIGNvbXBvbmVudCBjb3VudDogJy5jb3VudCgkcGxfY29t
cG9uZW50cykpOwoJCQkJJHRoaXMtPmRlYnVnKCdVUkwgY29tcG9uZW50IGNvdW50OiAnLmNv
dW50KCR1cmlfY29tcG9uZW50cykpOwoKCQkJCSRkYXRlID0gZmFsc2U7ICR0aXRsZV9wYWdl
X2ZlZWQgPSBmYWxzZTsKCQkJCWZvcmVhY2goJHBsX2NvbXBvbmVudHMgYXMgJHBsX2MpCgkJ
CQkJLy8gQXJlIHdlIGV4cGVjdGluZyBhIGRhdGUgY29tcG9uZW50PyBJZiBzbyB0aGUgbnVt
YmVyIG9mIHBsIGFuZCB1cmkgY29tcG9uZW50cyB3b24ndCBtYXRjaAoJCQkJCWlmICgkcGxf
Y1sndHlwZSddID09ICdkYXRlJykKCQkJCQkgCSRkYXRlID0gdHJ1ZTsKCQkJCQkvLyBEbyB3
ZSBoYXZlIGVpdGhlciBhIHRpdGxlLCBwYWdlIG9yIGEgZmVlZCBjb21wb25lbnQ/CgkJCQkJ
ZWxzZSBpZiAoaW5fYXJyYXkoJHBsX2NbJ3R5cGUnXSwgYXJyYXkoJ3RpdGxlJywgJ3BhZ2Un
LCAnZmVlZCcpKSkKCQkJCQkJJHRpdGxlX3BhZ2VfZmVlZCA9IHRydWU7CgoJCQkJaWYgKCEk
dGl0bGVfcGFnZV9mZWVkKQoJCQkJCS8vIElmIHRoZXJlIGlzbid0IGEgdGl0bGUsIHBhZ2Ug
b3IgZmVlZCBjb21wb25lbnQgdGhlbiBhcHBlbmQgYSBzcGVjaWFsIHR5cGUgZm9yIGNsZWF2
ZXIgcGFydGlhbCBtYXRjaGluZwoJCQkJCSRwbF9jb21wb25lbnRzW10gPSBhcnJheSgndHlw
ZScgPT4gJ3RpdGxlX3BhZ2VfZmVlZCcsICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAn
JywgJ3JlZ2V4JyA9PiAnJywgJ3RleHQnID0+ICcnKTsKCgkJCQkvLyBFeGl0IGVhcmx5IGlm
IHRoZXJlIGFyZSBtb3JlIFVSTCBjb21wb25lbnRzIHRoYW4gUEwgY29tcG9uZW50cywKCQkJ
CS8vIHRha2luZyBpbnRvIGFjY291bnQgd2hldGhlciB0aGVyZSBpcyBhIGRhdGEgY29tcG9u
ZW50CgkJCQlpZiAoISR1cmlfY29tcG9uZW50c1swXSB8fCBjb3VudCgkdXJpX2NvbXBvbmVu
dHMpID4gY291bnQoJHBsX2NvbXBvbmVudHMpICsgKCRkYXRlID8gMiA6IDApKSB7CgkJCQkJ
JHRoaXMtPmRlYnVnKCdNb3JlIFVSTCBjb21wb25lbnRzIHRoYW4gUEwgY29tcG9uZW50cycp
OwoJCQkJCWNvbnRpbnVlOwoJCQkJfQoKCQkJCS8vIFJlc2V0IHByZXRleHRfcmVwbGFjZW1l
bnQgYXMgd2UgYXJlIGFib3V0IHRvIHN0YXJ0IGFub3RoZXIgY29tcGFyaXNvbgoJCQkJJHBy
ZXRleHRfcmVwbGFjZW1lbnQgPSBhcnJheSgncGVybWxpbmtfaWQnID0+ICRpZCk7CgoJCQkJ
Ly8gUmVzZXQgdGhlIGFydGljbGUgY29udGV4dCBzdHJpbmcKCQkJCSRjb250ZXh0ID0gYXJy
YXkoKTsKCQkJCXVuc2V0KCRjb250ZXh0X3N0cik7CgkJCQlpZiAoIWVtcHR5KCRkZXNfc2Vj
dGlvbikpCgkJCQkJJGNvbnRleHRbXSA9ICJgU2VjdGlvbmAgPSAnJGRlc19zZWN0aW9uJyI7
CgkJCQlpZiAoIWVtcHR5KCRkZXNfY2F0ZWdvcnkpKQoJCQkJCSRjb250ZXh0W10gPSAiKGBD
YXRlZ29yeTFgID0gJyRkZXNfY2F0ZWdvcnknIE9SIGBDYXRlZ29yeTJgID0gJyRkZXNfY2F0
ZWdvcnknKSI7CgkJCQkkY29udGV4dF9zdHIgPSAoY291bnQoJGNvbnRleHQpID4gMCA/ICdh
bmQgJy5qb2luKCcgYW5kICcsICRjb250ZXh0KSA6ICcnKTsKCgkJCQkvLyBBc3N1bWUgdGhl
cmUgaXMgbm8gbWF0Y2gKCQkJCSRwYXJ0aWFsX21hdGNoID0gZmFsc2U7CgkJCQkkY2xlYXZl
cl9wYXJ0aWFsX21hdGNoID0gZmFsc2U7CgoJCQkJLy8gTG9vcCB0aHJvdWdoIHRoZSBwZXJt
bGluayBjb21wb25lbnRzCgkJCQlmb3JlYWNoICgkcGxfY29tcG9uZW50cyBhcyAkcGxfY19p
bmRleCA9PiAkcGxfYykgewoJCQkJCS8vIEFzc3VtZSB0aGVyZSBpcyBubyBtYXRjaAoJCQkJ
CSRtYXRjaCA9IGZhbHNlOwoKCQkJCQkvLyBDaGVjayB0byBzZWUgaWYgdGhlcmUgYXJlIHN0
aWxsIFVSSSBjb21wb25lbnRzIHRvIGJlIGNoZWNrZWQuCgkJCQkJaWYgKGNvdW50KCR1cmlf
Y29tcG9uZW50cykpCgkJCQkJCS8vIEdldCB0aGUgbmV4dCBjb21wb25lbnQuCgkJCQkJCSR1
cmlfYyA9IGFycmF5X3NoaWZ0KCR1cmlfY29tcG9uZW50cyk7CgoJCQkJCWVsc2UgaWYgKCEk
dGl0bGVfcGFnZV9mZWVkICYmIGNvdW50KCRwbF9jb21wb25lbnRzKSAtIDEgPT0gJHVyaV9j
b21wb25lbnRfY291bnQpIHsKCQkJCQkJLy8gSWYgd2UgYXBwZW5kZWQgYSB0aXRsZV9wYWdl
X2ZlZWQgY29tcG9uZW50IGVhcmxpZXIgYW5kIHBlcm1saW5rIGFuZCBVUkkgY29tcG9uZW50
cwoJCQkJCQkvLyBjb3VudHMgYXJlIGVxdWFsLCB3ZSBtdXN0IG9mIGZpbmlzaGVkIGNoZWNr
aW5nIHRoaXMgcGVybWxpbmssIGFuZCBpdCBtYXRjaGVzIHNvIGJyZWFrLgoJCQkJCQkkbWF0
Y2ggPSB0cnVlOwoJCQkJCQlicmVhazsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJLy8gSWYgdGhl
cmUgYXJlIG5vIG1vcmUgVVJJIGNvbXBvbmVudHMgdGhlbiB3ZSBoYXZlIGEgcGFydGlhbCBt
YXRjaC4KCQkJCQkJLy8gU3RvcmUgdGhlIHBhcnRpYWwgbWF0Y2ggZGF0YSB1bmxlc3MgdGhl
cmUgaGFzIGJlZW4gYSBwcmVjZWRpbmcgcGVybWxpbmsgd2l0aCB0aGUKCQkJCQkJLy8gc2Ft
ZSBudW1iZXIgb2YgY29tcG9uZW50cywgYXMgcGVybWxpbmsgaGF2ZSBhbHJlYWR5IGJlZW4g
c29ydGVkIGJ5IHByZWNlZGVuY2UuCgkJCQkJCWlmICghYXJyYXlfa2V5X2V4aXN0cygkdXJp
X2NvbXBvbmVudF9jb3VudCwgJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcykpCgkJCQkJCQkkdGhp
cy0+cGFydGlhbF9tYXRjaGVzWyR1cmlfY29tcG9uZW50X2NvdW50XSA9ICRwcmV0ZXh0X3Jl
cGxhY2VtZW50OwoKCQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFu
Z2VzIGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJ
dW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoKCQkJCQkJLy8gQnJlYWsgZWFybHkgZm9y
bSB0aGUgZm9yZWFjaCBwZXJtbGluayBjb21wb25lbnRzIGxvb3AuCgkJCQkJCSRwYXJ0aWFs
X21hdGNoID0gdHJ1ZTsKCQkJCQkJYnJlYWs7CgkJCQkJfQoKCQkJCQkvLyBFeHRyYWN0IHRo
ZSBwZXJtbGluayBjb21wb25lbnRzLgoJCQkJCWV4dHJhY3QoJHBsX2MpOwoKCQkJCQkvLyBJ
ZiBpdCdzIGEgZGF0ZSwgZ3JhYiBhbmQgY29tYmluZSB0aGUgbmV4dCB0d28gVVJJIGNvbXBv
bmVudHMuCgkJCQkJaWYgKCR0eXBlID09ICdkYXRlJykKCQkJCQkJJHVyaV9jIC49ICcvJy5h
cnJheV9zaGlmdCgkdXJpX2NvbXBvbmVudHMpLicvJy5hcnJheV9zaGlmdCgkdXJpX2NvbXBv
bmVudHMpOwoKCQkJCQkvLyBEZWNvZGUgdGhlIFVSTAoJCQkJCSR1cmlfYyA9IHVybGRlY29k
ZSgkdXJpX2MpOwoKCQkJCQkvLyBBbHdheXMgY2hlY2sgdGhlIHR5cGUgdW5sZXNzIHRoZSBw
cmVmaXggb3Igc3VmZml4IGFyZW4ndCB0aGVyZQoJCQkJCSRjaGVja190eXBlID0gdHJ1ZTsK
CgkJCQkJLy8gQ2hlY2sgcHJlZml4CgkJCQkJaWYgKCRwcmVmaXggJiYgJHRoaXMtPnByZWYo
J3Nob3dfcHJlZml4JykpIHsKCQkJCQkJJHNhbml0aXplZF9wcmVmaXggPSB1cmxkZWNvZGUo
JHRoaXMtPmVuY29kZV91cmwoJHByZWZpeCkpOwoJCQkJCQlpZiAoKCRwb3MgPSBzdHJwb3Mo
JHVyaV9jLCAkc2FuaXRpemVkX3ByZWZpeCkpID09PSBmYWxzZSB8fCAkcG9zICE9IDApIHsK
CQkJCQkJCSRjaGVja190eXBlID0gZmFsc2U7CgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0Nhblwn
dCBmaW5kIHByZWZpeDogJy4kcHJlZml4KTsKCQkJCQkJfSBlbHNlCgkJCQkJCQkvLyBDaGVj
ayBwYXNzZWQsIHJlbW92ZSBwcmVmaXggcmVhZHkgZm9yIHRoZSBuZXh0IGNoZWNrCgkJCQkJ
CQkkdXJpX2MgPSBzdWJzdHJfcmVwbGFjZSgkdXJpX2MsICcnLCAwLCBzdHJsZW4oJHNhbml0
aXplZF9wcmVmaXgpKTsKCQkJCQl9CgoJCQkJCS8vIENoZWNrIHN1ZmZpeAoJCQkJCWlmICgk
Y2hlY2tfdHlwZSAmJiAkc3VmZml4ICYmICR0aGlzLT5wcmVmKCdzaG93X3N1ZmZpeCcpKSB7
CgkJCQkJCSRzYW5pdGl6ZWRfc3VmZml4ID0gdXJsZGVjb2RlKCR0aGlzLT5lbmNvZGVfdXJs
KCRzdWZmaXgpKTsKCQkJCQkJaWYgKCgkcG9zID0gc3RycnBvcygkdXJpX2MsICRzYW5pdGl6
ZWRfc3VmZml4KSkgPT09IGZhbHNlKSB7CgkJCQkJCQkkY2hlY2tfdHlwZSA9IGZhbHNlOwoJ
CQkJCQkJJHRoaXMtPmRlYnVnKCdDYW5cJ3QgZmluZCBzdWZmaXg6ICcuJHN1ZmZpeCk7CgkJ
CQkJCX0gZWxzZQoJCQkJCQkJLy8gQ2hlY2sgcGFzc2VkLCByZW1vdmUgc3VmZml4IHJlYWR5
IGZvciB0aGUgbmV4dCBjaGVjawoJCQkJCQkJJHVyaV9jID0gc3Vic3RyX3JlcGxhY2UoJHVy
aV9jLCAnJywgJHBvcywgc3RybGVuKCRzYW5pdGl6ZWRfc3VmZml4KSk7CgkJCQkJfQoKCQkJ
CQkvLyBCb3RoIHRoZSBwcmVmaXggYW5kIHN1ZmZpeCBzZXR0aW5ncyBoYXZlIHBhc3NlZAoJ
CQkJCWlmICgkY2hlY2tfdHlwZSkgewoJCQkJCQkkdGhpcy0+ZGVidWcoJ0NoZWNraW5nIGlm
ICInLiR1cmlfYy4nIiBpcyBvZiB0eXBlICInLiR0eXBlLiciJyk7CgkJCQkJCSR1cmlfYyA9
IGRvU2xhc2goJHVyaV9jKTsKCgkJCQkJCS8vCgkJCQkJCWlmICgkcHJlZnNbJ3Blcm1hbGlu
a190aXRsZV9mb3JtYXQnXSkgewoJCQkJCQkJJG10X3NlYXJjaCA9IGFycmF5KCcvXy8nLCAn
L1wuaHRtbCQvJyk7CgkJCQkJCQkkbXRfcmVwbGFjZSA9IGFycmF5KCctJywgJycpOwoJCQkJ
CQl9IGVsc2UgewoJCQkJCQkJJG10X3NlYXJjaCA9IGFycmF5KCcvKD86XnxfKSguKS9lJywg
Jy9cLmh0bWwkLycpOwoJCQkJCQkJJG10X3JlcGxhY2UgPSBhcnJheSgic3RydG91cHBlcign
XFwxJykiLCAnJyk7CgkJCQkJCX0KCQkJCQkJJG10X3VyaV9jID0gJHRoaXMtPnByZWYoJ3Jl
ZGlyZWN0X210X3N0eWxlX2xpbmtzJykKCQkJCQkJCT8gcHJlZ19yZXBsYWNlKCRtdF9zZWFy
Y2gsICRtdF9yZXBsYWNlLCAkdXJpX2MpCgkJCQkJCQk6ICcnOwoKCQkJCQkJLy8gQ29tcGFy
ZSBiYXNlZCBvbiB0eXBlCgkJCQkJCXN3aXRjaCAoJHR5cGUpIHsKCQkJCQkJCWNhc2UgJ3Nl
Y3Rpb24nOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygnbmFtZScsICd0eHBfc2VjdGlv
bicsICIoYG5hbWVgIGxpa2UgJyR1cmlfYycgb3IgYG5hbWVgIGxpa2UgJyRtdF91cmlfYycp
IGxpbWl0IDEiKSkgewoJCQkJCQkJCQkkdGhpcy0+ZGVidWcoJ1NlY3Rpb24gbmFtZTogJy4k
cnNbJ25hbWUnXSk7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ10gPSAkcnNb
J25hbWUnXTsKCQkJCQkJCQkJJGNvbnRleHRbXSA9ICJgU2VjdGlvbmAgPSAneyRyc1snbmFt
ZSddfSciOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFr
OwoJCQkJCQkJY2FzZSAnY2F0ZWdvcnknOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3Jvdygn
bmFtZScsICd0eHBfY2F0ZWdvcnknLCAiKGBuYW1lYCBsaWtlICckdXJpX2MnIG9yIGBuYW1l
YCBsaWtlICckbXRfdXJpX2MnKSBhbmQgYHR5cGVgID0gJ2FydGljbGUnIGxpbWl0IDEiKSkg
ewoJCQkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NhdGVnb3J5IG5hbWU6ICcuJHJzWyduYW1lJ10p
OwoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYyddID0gJHJzWyduYW1lJ107CgkJ
CQkJCQkJCSRjb250ZXh0W10gPSAiKGBDYXRlZ29yeTFgID0gJ3skcnNbJ25hbWUnXX0nIE9S
IGBDYXRlZ29yeTJgID0gJyR1cmlfYycpIjsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJ
CQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3RpdGxlJzoKCQkJCQkJCQlpZiAo
JHJzID0gc2FmZV9yb3coJ3VybF90aXRsZScsICd0ZXh0cGF0dGVybicsICIoYHVybF90aXRs
ZWAgbGlrZSAnJHVyaV9jJyBvciBgdXJsX3RpdGxlYCBsaWtlICckbXRfdXJpX2MnKSAkY29u
dGV4dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSR0aGlz
LT5kZWJ1ZygnVVJMIFRpdGxlOiAnLiRyc1sndXJsX3RpdGxlJ10pOwoJCQkJCQkJCQkkbXRf
cmVkaXJlY3QgPSAoJHVyaV9jICE9ICRtdF91cmlfYyk7CgkJCQkJCQkJCSRwcmV0ZXh0X3Jl
cGxhY2VtZW50Wyd1cmxfdGl0bGUnXSA9ICRyc1sndXJsX3RpdGxlJ107CgkJCQkJCQkJCSRt
YXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdpZCc6
CgkJCQkJCQkJaWYgKCRycyA9IHNhZmVfcm93KCdJRCwgUG9zdGVkJywgJ3RleHRwYXR0ZXJu
JywgImBJRGAgPSAnJHVyaV9jJyAkY29udGV4dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgbGlt
aXQgMSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCddID0gJHJzWydJ
RCddOwoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10gPSAkcnNbJ1Bv
c3RlZCddOwoJCQkJCQkJCQkkcHJldGV4dFsnbnVtUGFnZXMnXSA9IDE7CgkJCQkJCQkJCSRw
cmV0ZXh0Wydpc19hcnRpY2xlX2xpc3QnXSA9IGZhbHNlOwoJCQkJCQkJCQkkbWF0Y2ggPSB0
cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnYXV0aG9yJzoKCQkJ
CQkJCQlpZiAoJGF1dGhvciA9IHNhZmVfZmllbGQoJ25hbWUnLCAndHhwX3VzZXJzJywgIlJl
YWxOYW1lIGxpa2UgJyR1cmlfYycgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3Jl
cGxhY2VtZW50WydhdXRob3InXSA9ICRhdXRob3I7CgkJCQkJCQkJCSRjb250ZXh0W10gPSAi
YEF1dGhvcklEYCA9ICckYXV0aG9yJyI7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJ
CQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdsb2dpbic6CgkJCQkJCQkJaWYgKCRh
dXRob3IgPSBzYWZlX2ZpZWxkKCduYW1lJywgJ3R4cF91c2VycycsICJuYW1lIGxpa2UgJyR1
cmlfYycgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydhdXRo
b3InXSA9ICRhdXRob3I7CgkJCQkJCQkJCSRjb250ZXh0W10gPSAiYEF1dGhvcklEYCA9ICck
YXV0aG9yJyI7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJl
YWs7CgkJCQkJCQljYXNlICdjdXN0b20nOgoJCQkJCQkJCSRjdXN0b21fb3B0aW9ucyA9IGFy
cmF5X3ZhbHVlcyhhcnJheV9tYXAoYXJyYXkoJHRoaXMsICJlbmNvZGVfdXJsIiksIHNhZmVf
Y29sdW1uKCJjdXN0b21fJGN1c3RvbSIsICd0ZXh0cGF0dGVybicsICJjdXN0b21fJGN1c3Rv
bSAhPSAnJyIpKSk7CgkJCQkJCQkJaWYgKCR0aGlzLT5wcmVmKCdmb3JjZV9sb3dlcmNhc2Vf
dXJscycpKQoJCQkJCQkJCQkkY3VzdG9tX29wdGlvbnMgPSBhcnJheV9tYXAoInN0cnRvbG93
ZXIiLCAkY3VzdG9tX29wdGlvbnMpOwoJCQkJCQkJCWlmIChpbl9hcnJheSgkdXJpX2MsICRj
dXN0b21fb3B0aW9ucykpIHsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJ
CQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ2RhdGUnOgoJCQkJCQkJCWlmIChwcmVnX21hdGNo
KCcvXlxkezR9XC9cZHsyfVwvXGR7Mn0kLycsICR1cmlfYykpIHsKCQkJCQkJCQkJJHByZXRl
eHRfcmVwbGFjZW1lbnRbJ2RhdGUnXSA9IHN0cl9yZXBsYWNlKCcvJywgJy0nLCAkdXJpX2Mp
OwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJ
CQkJY2FzZSAneWVhcic6CgkJCQkJCQkJaWYgKHByZWdfbWF0Y2goJy9eXGR7NH0kLycsICR1
cmlfYykpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3llYXInXSA9ICR1cmlf
YzsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJ
CQkJCWNhc2UgJ21vbnRoJzoKCQkJCQkJCWNhc2UgJ2RheSc6CgkJCQkJCQkJaWYgKHByZWdf
bWF0Y2goJy9eXGR7Mn0kLycsICR1cmlfYykpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFj
ZW1lbnRbJHR5cGVdID0gJHVyaV9jOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJ
CX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAncGFnZSc6CgkJCQkJCQkJaWYgKGlzX251
bWVyaWMoJHVyaV9jKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncGcnXSA9
ICR1cmlfYzsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVh
azsKCQkJCQkJCWNhc2UgJ2ZlZWQnOgoJCQkJCQkJCWlmIChpbl9hcnJheSgkdXJpX2MsIGFy
cmF5KCdyc3MnLCAnYXRvbScpKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsk
dXJpX2NdID0gMTsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQli
cmVhazsKCQkJCQkJCWNhc2UgJ3NlYXJjaCc6CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2Vt
ZW50WydxJ10gPSAkdXJpX2M7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQlicmVh
azsKCQkJCQkJCWNhc2UgJ3RleHQnOgoJCQkJCQkJCWlmICgkdGhpcy0+ZW5jb2RlX3VybCgk
dGV4dCkgPT0gJHVyaV9jKSB7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJCSRw
cmV0ZXh0X3JlcGxhY2VtZW50WyJwZXJtbGlua190ZXh0X3skbmFtZX0iXSA9ICR1cmlfYzsK
CQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3JlZ2V4JzoKCQkJCQkJCQkv
LyBDaGVjayB0byBzZWUgaWYgcmVnZXggaXMgdmFsaWQgd2l0aG91dCBvdXRwdXR0aW5nIGVy
cm9yIG1lc3NhZ2VzLgoJCQkJCQkJCW9iX3N0YXJ0KCk7CgkJCQkJCQkJcHJlZ19tYXRjaCgk
cmVnZXgsICR1cmlfYywgJHJlZ2V4X21hdGNoZXMpOwoJCQkJCQkJCSRpc192YWxpZF9yZWdl
eCA9ICEob2JfZ2V0X2NsZWFuKCkpOwoJCQkJCQkJCWlmICgkaXNfdmFsaWRfcmVnZXggJiYg
QCRyZWdleF9tYXRjaGVzWzBdKSB7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJ
CSRwcmV0ZXh0X3JlcGxhY2VtZW50WyJwZXJtbGlua19yZWdleF97JG5hbWV9Il0gPSAkcmVn
ZXhfbWF0Y2hlc1swXTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJfSAvLyBzd2l0
Y2ggdHlwZSBlbmQKCgkJCQkJCS8vIFVwZGF0ZSB0aGUgYXJ0aWNsZSBjb250ZXh0IHN0cmlu
ZwoJCQkJCQkkY29udGV4dF9zdHIgPSAoY291bnQoJGNvbnRleHQpID4gMCA/ICdhbmQgJy5q
b2luKCcgYW5kICcsICRjb250ZXh0KSA6ICcnKTsKCgkJCQkJCSR0aGlzLT5kZWJ1ZygoJG1h
dGNoID09IHRydWUpID8gJ1lFUycgOiAnTk8nKTsKCgkJCQkJCWlmICghJG1hdGNoICYmICEk
Y2xlYXZlcl9wYXJ0aWFsX21hdGNoKSB7CgkJCQkJCQkvLyBUaGVyZSBoYXNuJ3QgYmVlbiBh
IG1hdGNoIG9yIGEgY29tcGxldGUgY2xlYXZlciBwYXJ0aWFsIG1hdGNoLiBMZXRzIHRyeSB0
byBiZSBjbGVhdmVyIGFuZAoJCQkJCQkJLy8gY2hlY2sgdG8gc2VlIGlmIHRoaXMgY29tcG9u
ZW50IGlzIGVpdGhlciBhIHRpdGxlLCBwYWdlIG9yIGEgZmVlZC4gVGhpcyBtYWtlcyBpdCBt
b3JlIHByb2JhYmxlCgkJCQkJCQkvLyBhIHN1Y2Nlc3NmdWwgbWF0Y2ggZm9yIGEgZ2l2ZW4g
cGVybWxpbmsgcnVsZSBvY2N1cnMuCgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NoZWNraW5nIGlm
ICInLiR1cmlfYy4nIiBpcyBvZiB0eXBlICJ0aXRsZV9wYWdlX2ZlZWQiJyk7CgoJCQkJCQkJ
aWYgKCR0eXBlICE9ICd0aXRsZScgJiYgJHVybF90aXRsZSA9IHNhZmVfZmllbGQoJ3VybF90
aXRsZScsICd0ZXh0cGF0dGVybicsICJgdXJsX3RpdGxlYCBsaWtlICckdXJpX2MnICRjb250
ZXh0X3N0ciBhbmQgYFN0YXR1c2AgPj0gNCBsaW1pdCAxIikpIHsKCQkJCQkJCQkkcHJldGV4
dF9yZXBsYWNlbWVudFsndXJsX3RpdGxlJ10gPSAkdXJsX3RpdGxlOwoJCQkJCQkJCSRwcmV0
ZXh0WydudW1QYWdlcyddID0gMTsKCQkJCQkJCQkkcHJldGV4dFsnaXNfYXJ0aWNsZV9saXN0
J10gPSBmYWxzZTsKCQkJCQkJCQkkY2xlYXZlcl9wYXJ0aWFsX21hdGNoID0gdHJ1ZTsKCQkJ
CQkJCX0gZWxzZSBpZiAoJHRoaXMtPnByZWYoJ2NsZWFuX3BhZ2VfYXJjaGl2ZV9saW5rcycp
ICYmICR0eXBlICE9ICdwYWdlJyAmJiBpc19udW1lcmljKCR1cmlfYykpIHsKCQkJCQkJCQkk
cHJldGV4dF9yZXBsYWNlbWVudFsncGcnXSA9ICR1cmlfYzsKCQkJCQkJCQkkY2xlYXZlcl9w
YXJ0aWFsX21hdGNoID0gdHJ1ZTsKCQkJCQkJCX0gZWxzZSBpZiAoJHR5cGUgIT0gJ2ZlZWQn
ICYmIGluX2FycmF5KCR1cmlfYywgYXJyYXkoJ3JzcycsICdhdG9tJykpKSB7CgkJCQkJCQkJ
JHByZXRleHRfcmVwbGFjZW1lbnRbJHVyaV9jXSA9IDE7CgkJCQkJCQkJJGNsZWF2ZXJfcGFy
dGlhbF9tYXRjaCA9IHRydWU7CgkJCQkJCQl9CgoJCQkJCQkJJHRoaXMtPmRlYnVnKCgkY2xl
YXZlcl9wYXJ0aWFsX21hdGNoID09IHRydWUpID8gJ1lFUycgOiAnTk8nKTsKCgkJCQkJCQlp
ZiAoJGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkgewoJCQkJCQkJCSR0aGlzLT5jbGVhdmVyX3Bh
cnRpYWxfbWF0Y2ggPSAkcHJldGV4dF9yZXBsYWNlbWVudDsKCgkJCQkJCQkJLy8gVW5zZXQg
cHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2VzIGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBh
IHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVu
dCk7CgoJCQkJCQkJCSRjbGVhdmVyX3BhcnRpYWxfbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCWNv
bnRpbnVlIDI7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9IC8vIGNoZWNrIHR5cGUgZW5kCgoJ
CQkJCS8vIEJyZWFrIGVhcmx5IGlmIHRoZSBjb21wb25lbnQgZG9lc24ndCBtYXRjaCwgYXMg
dGhlcmUgaXMgbm8gcG9pbnQgY29udGludWluZwoJCQkJCWlmICgkbWF0Y2ggPT0gZmFsc2Up
IHsKCQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2VzIGNvdWxk
IG9mIGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJdW5zZXQoJHBy
ZXRleHRfcmVwbGFjZW1lbnQpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9IC8vIGZvcmVh
Y2ggcGVybWxpbmsgY29tcG9uZW50IGVuZAoKCQkJCWlmICghaXNzZXQoJHByZXRleHRfcmVw
bGFjZW1lbnRbJ2lkJ10pKSB7CgkJCQkJaWYoaXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnRb
J3VybF90aXRsZSddKSkgewoJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudFsn
eWVhciddKSkgewoJCQkJCQkJJGRhdGVfdmFsID0gJHByZXRleHRfcmVwbGFjZW1lbnRbJ3ll
YXInXTsKCQkJCQkJCWlmKGlzc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50Wydtb250aCddKSkg
ewoJCQkJCQkJCSRkYXRlX3ZhbCAuPSAnLScgLiAkcHJldGV4dF9yZXBsYWNlbWVudFsnbW9u
dGgnXTsKCQkJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5J10pKSB7
CgkJCQkJCQkJCSRkYXRlX3ZhbCAuPSAnLScgLiAkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5
J107CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCWlmICgkcnMgPSBzYWZlX3Jv
dygnSUQsIFBvc3RlZCcsICd0ZXh0cGF0dGVybicsICJgdXJsX3RpdGxlYCBsaWtlICckcHJl
dGV4dF9yZXBsYWNlbWVudFt1cmxfdGl0bGVdJyAkY29udGV4dF9zdHIgYW5kIGBQb3N0ZWRg
IGxpa2UgJyRkYXRlX3ZhbCUnIGFuZCBgU3RhdHVzYCA+PSA0IG9yZGVyIGJ5IGBQb3N0ZWRg
IGRlc2MgbGltaXQgMSIpKSB7CgkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSA9
ICRyc1snSUQnXTsKCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydQb3N0ZWQnXSA9ICRy
c1snUG9zdGVkJ107CgkJCQkJCQkkcHJldGV4dFsnbnVtUGFnZXMnXSA9IDE7CgkJCQkJCQkk
cHJldGV4dFsnaXNfYXJ0aWNsZV9saXN0J10gPSBmYWxzZTsKCQkJCQkJfQoJCQkJCX0KCQkJ
CX0KCgkJCQlpZiAoJG1hdGNoIHx8ICRwYXJ0aWFsX21hdGNoIHx8ICRjbGVhdmVyX3BhcnRp
YWxfbWF0Y2gpIHsKCQkJCQkvLyBFeHRyYWN0IHRoZSBzZXR0aW5ncyBmb3IgdGhpcyBwZXJt
bGluawoJCQkJCUBleHRyYWN0KCRwZXJtbGlua3NbJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Bl
cm1saW5rX2lkJ11dWydzZXR0aW5ncyddKTsKCgkJCQkJLy8gQ2hlY2sgdGhlIHBlcm1saW5r
IHNlY3Rpb24gYW5kIGNhdGVnb3J5IGNvbmRpdGlvbnMKCQkJCQlpZiAoKCFlbXB0eSgkY29u
X3NlY3Rpb24pICYmICRjb25fc2VjdGlvbiAhPSBAJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Mn
XSkgfHwKCQkJCQkoIWVtcHR5KCRjb25fY2F0ZWdvcnkpICYmICRjb25fY2F0ZWdvcnkgIT0g
QCRwcmV0ZXh0X3JlcGxhY2VtZW50WydjJ10pKSB7CgkJCQkJCSR0aGlzLT5kZWJ1ZygnUGVy
bWxpbmsgY29uZGl0aW9ucyBmYWlsZWQnKTsKCQkJCQkJaWYgKEAkY29uX3NlY3Rpb24pICAk
dGhpcy0+ZGVidWcoJ2Nvbl9zZWN0aW9uID0gJy4gJGNvbl9zZWN0aW9uKTsKCQkJCQkJaWYg
KEAkY29uX2NhdGVnb3J5KSAkdGhpcy0+ZGVidWcoJ2Nvbl9jYXRlZ29yeSA9ICcuICRjb25f
Y2F0ZWdvcnkpOwoKCQkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoJCQkJCX0K
CQkJCQllbHNlIGlmICgkbWF0Y2ggJiYgaXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJ
CQkJCQkkdGhpcy0+ZGVidWcoJ1dlIGhhdmUgYSBtYXRjaCEnKTsKCgkJCQkJZWxzZSBpZiAo
JHBhcnRpYWxfbWF0Y2ggJiYgY291bnQoJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcykpCgkJCQkJ
CSR0aGlzLT5kZWJ1ZygnV2UgaGF2ZSBhIFwncGFydGlhbCBtYXRjaFwnJyk7CgoJCQkJCWVs
c2UgaWYgKCRjbGVhdmVyX3BhcnRpYWxfbWF0Y2ggJiYgaXNzZXQoJGNsZWF2ZXJfcGFydGlh
bF9tYXRjaCkpCgkJCQkJCSR0aGlzLT5kZWJ1ZygnV2UgaGF2ZSBhIFwnY2xlYXZlciBwYXJ0
aWFsIG1hdGNoXCcnKTsKCgkJCQkJZWxzZSB7CgkJCQkJCSR0aGlzLT5kZWJ1ZygnRXJyb3I6
IENhblwndCBkZXRlcm1pbmUgdGhlIGNvcnJlY3QgdHlwZSBtYXRjaCcpOwoJCQkJCQkvLyBU
aGlzIHBlcm1saW5rIGhhcyBmYWlsZWQsIGNvbnRpbnVlIGV4ZWN1dGlvbiBvZiB0aGUgZm9y
ZWFjaCBwZXJtbGlua3MgbG9vcAoJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudCk7
CgkJCQkJfQoJCQkJfQoKCQkJCS8vIFdlIGhhdmUgYSBtYXRjaAoJCQkJaWYgKEAkcHJldGV4
dF9yZXBsYWNlbWVudCkKCQkJCQlicmVhazsKCgkJCX0gLy8gZm9yZWFjaCBwZXJtbGlua3Mg
ZW5kCgoJCQkvLyBJZiB0aGVyZSBpcyBubyBtYXRjaCByZXN0b3JlIHRoZSBtb3N0IGxpa2Vs
eSBwYXJ0aWFsIG1hdGNoLiBTb3J0ZWQgYnkgbnVtYmVyIG9mIGNvbXBvbmVudHMgYW5kIHRo
ZW4gcHJlY2VkZW5jZQoJCQlpZiAoIUAkcHJldGV4dF9yZXBsYWNlbWVudCAmJiBjb3VudCgk
dGhpcy0+cGFydGlhbF9tYXRjaGVzKSkKCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50ID0gYXJy
YXlfc2hpZnQoYXJyYXlfc2xpY2UoJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcywgLTEpKTsKCQkJ
dW5zZXQoJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcyk7CgoJCQkvLyBSZXN0b3JlIHRoZSBjbGVh
dmVyX3BhcnRpYWxfbWF0Y2ggaWYgdGhlcmUgaXMgbm8gb3RoZXIgbWF0Y2hlcwoJCQlpZiAo
IUAkcHJldGV4dF9yZXBsYWNlbWVudCAmJiAkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21hdGNo
KQoJCQkJJHByZXRleHRfcmVwbGFjZW1lbnQgPSAkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21h
dGNoOwoJCQl1bnNldCgkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21hdGNoKTsKCgkJCS8vIEV4
dHJhY3QgdGhlIHNldHRpbmdzIGZvciB0aGlzIHBlcm1saW5rCgkJCUBleHRyYWN0KCRwZXJt
bGlua3NbJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Blcm1saW5rX2lkJ11dWydzZXR0aW5ncydd
KTsKCgkJCS8vIElmIHByZXRleHRfcmVwbGFjZW1lbnQgaXMgc3RpbGwgc2V0IGhlcmUgdGhl
biB3ZSBoYXZlIGEgbWF0Y2gKCQkJaWYgKEAkcHJldGV4dF9yZXBsYWNlbWVudCkgewoJCQkJ
JHRoaXMtPmRlYnVnKCdQcmV0ZXh0IFJlcGxhY2VtZW50ICcucHJpbnRfcigkcHJldGV4dF9y
ZXBsYWNlbWVudCwgMSkpOwoKCQkJCWlmICghZW1wdHkoJGRlc19zZWN0aW9uKSkKCQkJCQkk
cHJldGV4dF9yZXBsYWNlbWVudFsncyddID0gJGRlc19zZWN0aW9uOwoJCQkJaWYgKCFlbXB0
eSgkZGVzX2NhdGVnb3J5KSkKCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYyddID0gJGRl
c19jYXRlZ29yeTsKCQkJCWlmICghZW1wdHkoJGRlc19mZWVkKSkKCQkJCQkkcHJldGV4dF9y
ZXBsYWNlbWVudFskZGVzX2ZlZWRdID0gMTsKCgkJCQlpZiAoQCRwcmV0ZXh0X3JlcGxhY2Vt
ZW50WydpZCddICYmIEAkcHJldGV4dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10pIHsKCQkJCSAJ
aWYgKCRucCA9IGdldE5leHRQcmV2KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCddLCAkcHJl
dGV4dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10sIEAkcHJldGV4dF9yZXBsYWNlbWVudFsncydd
KSkKCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnQgPSBhcnJheV9tZXJnZSgkcHJldGV4dF9y
ZXBsYWNlbWVudCwgJG5wKTsKCQkJCX0KCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50
WydQb3N0ZWQnXSk7CgoJCQkJLy8gSWYgdGhlcmUgaXMgYSBtYXRjaCB0aGVuIHdlIG1vc3Qg
c2V0IHRoZSBodHRwIHN0YXR1cyBjb3JyZWN0bHkgYXMgdHhwJ3MgcHJldGV4dCBtaWdodCBz
ZXQgaXQgdG8gNDA0CgkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnc3RhdHVzJ10gPSAnMjAw
JzsKCgkJCQkvLyBTdG9yZSB0aGUgb3JnaW5pYWwgSFRUUCBzdGF0dXMgY29kZQoJCQkJLy8g
V2UgbWlnaHQgbmVlZCB0byBsb2cgdGhlIHBhZ2UgaGl0IGlmIGl0IGVxdWFscyA0MDQKCQkJ
CSRvcmdpbmlhbF9zdGF0dXMgPSAkcHJldGV4dFsnc3RhdHVzJ107CgoJCQkJLy8gVHhwIG9u
bHkgbG9va3MgYXQgdGhlIG1vbnRoLCBidXQgZHVlIHRvIGhvdyB3ZSBwaGFzZSB0aGUgbW9u
dGggd2UgY2FuIG1hbmlwdWxhdGUgdGhlIHNxbCB0byBvdXIgbmVlZHMKCQkJCWlmIChhcnJh
eV9rZXlfZXhpc3RzKCdkYXRlJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKSB7CgkJCQkJJHBy
ZXRleHRfcmVwbGFjZW1lbnRbJ21vbnRoJ10gPSAkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF0
ZSddOwoJCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydkYXRlJ10pOwoJCQkJfSBl
bHNlIGlmIChhcnJheV9rZXlfZXhpc3RzKCd5ZWFyJywgJHByZXRleHRfcmVwbGFjZW1lbnQp
IHx8CgkJCQlhcnJheV9rZXlfZXhpc3RzKCdtb250aCcsICRwcmV0ZXh0X3JlcGxhY2VtZW50
KSB8fAoJCQkJYXJyYXlfa2V5X2V4aXN0cygnZGF5JywgJHByZXRleHRfcmVwbGFjZW1lbnQp
KSB7CgkJCQkJJG1vbnRoID0gJyc7CgkJCQkJJG1vbnRoIC49IChhcnJheV9rZXlfZXhpc3Rz
KCd5ZWFyJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/ICRwcmV0ZXh0X3JlcGxh
Y2VtZW50Wyd5ZWFyJ10uJy0nIDogJ19fX18tJzsKCQkJCQkkbW9udGggLj0gKGFycmF5X2tl
eV9leGlzdHMoJ21vbnRoJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/ICRwcmV0
ZXh0X3JlcGxhY2VtZW50Wydtb250aCddLictJyA6ICdfXy0nOwoJCQkJCSRtb250aCAuPSAo
YXJyYXlfa2V5X2V4aXN0cygnZGF5JywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/
ICRwcmV0ZXh0X3JlcGxhY2VtZW50WydkYXknXS4nICcgOiAnX18gJzsKCgkJCQkJJHByZXRl
eHRfcmVwbGFjZW1lbnRbJ21vbnRoJ10gPSAkbW9udGg7CgkJCQkJdW5zZXQoJHByZXRleHRf
cmVwbGFjZW1lbnRbJ3llYXInXSk7CgkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnRb
J2RheSddKTsKCQkJCX0KCgkJCQkvLyBTZWN0aW9uIG5lZWRzIHRvIGJlIGRlZmluZWQgc28g
d2UgY2FuIGFsd2F5cyBnZXQgYSBwYWdlIHRlbXBsYXRlLgoJCQkJaWYgKCFhcnJheV9rZXlf
ZXhpc3RzKCdzJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJewoJCQkJCWlmICghQCRw
cmV0ZXh0X3JlcGxhY2VtZW50WydpZCddKQoJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsn
cyddID0gJ2RlZmF1bHQnOwoJCQkJCWVsc2UKCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRb
J3MnXSA9IHNhZmVfZmllbGQoJ1NlY3Rpb24nLCAndGV4dHBhdHRlcm4nLCAnSUQgPSAnLiRw
cmV0ZXh0X3JlcGxhY2VtZW50WydpZCddKTsKCQkJCX0KCgkJCQkvLyBTZXQgdGhlIGNzcyBh
bmQgcGFnZSB0ZW1wbGF0ZSwgb3RoZXJ3aXNlIHdlIGdldCBhbiB1bmtub3duIHNlY3Rpb24K
CQkJCSRzZWN0aW9uX3NldHRpbmdzID0gc2FmZV9yb3coJ2NzcywgcGFnZScsICd0eHBfc2Vj
dGlvbicsICJuYW1lID0gJ3skcHJldGV4dF9yZXBsYWNlbWVudFsncyddfScgbGltaXQgMSIp
OwoJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3BhZ2UnXSA9IChAJGRlc19wYWdlKSA/ICRk
ZXNfcGFnZSA6ICRzZWN0aW9uX3NldHRpbmdzWydwYWdlJ107CgkJCQkkcHJldGV4dF9yZXBs
YWNlbWVudFsnY3NzJ10gID0gJHNlY3Rpb25fc2V0dGluZ3NbJ2NzcyddOwoKCQkJCSR0aGlz
LT5tYXRjaGVkX3Blcm1saW5rID0gJHByZXRleHRfcmVwbGFjZW1lbnQ7CgoJCQkJZ2xvYmFs
ICRwZXJtbGlua19tb2RlOwoKCQkJCWlmIChpbl9hcnJheSgkcHJlZnNbJ3Blcm1saW5rX21v
ZGUnXSwgYXJyYXkoJ2lkX3RpdGxlJywgJ3NlY3Rpb25faWRfdGl0bGUnKSkgJiYgQCRwcmV0
ZXh0X3JlcGxhY2VtZW50WydwZyddICYmICFAJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10p
IHsKCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSA9ICcnOwoJCQkJCSRwcmV0ZXh0
X3JlcGxhY2VtZW50Wydpc19hcnRpY2xlX2xpc3QnXSA9IHRydWU7CgkJCQl9CgoJCQkJLy8g
TWVyZ2UgcHJldGV4dF9yZXBsYWNlbWVudCB3aXRoIHByZXRleHQKCQkJCSRwcmV0ZXh0ID0g
YXJyYXlfbWVyZ2UoJHByZXRleHQsICRwcmV0ZXh0X3JlcGxhY2VtZW50KTsKCgkJCQlpZiAo
aXNfbnVtZXJpYyhAJHByZXRleHRbJ2lkJ10pKSB7CgkJCQkJJGEgPSBzYWZlX3JvdygnKiwg
dW5peF90aW1lc3RhbXAoUG9zdGVkKSBhcyB1UG9zdGVkLCB1bml4X3RpbWVzdGFtcChFeHBp
cmVzKSBhcyB1RXhwaXJlcywgdW5peF90aW1lc3RhbXAoTGFzdE1vZCkgYXMgdUxhc3RNb2Qn
LCAndGV4dHBhdHRlcm4nLCAnSUQ9Jy5pbnR2YWwoJHByZXRleHRbJ2lkJ10pLicgYW5kIFN0
YXR1cyA+PSA0Jyk7CgkJCQkJcG9wdWxhdGVBcnRpY2xlRGF0YSgkYSk7CgkJCQl9CgoJCQkJ
Ly8gRXhwb3J0IHJlcXVpcmVkIHZhbHVlcyB0byB0aGUgZ2xvYmFsIG5hbWVzcGFjZQoJCQkJ
Zm9yZWFjaCAoYXJyYXkoJ2lkJywgJ3MnLCAnYycsICdwZycsICdpc19hcnRpY2xlX2xpc3Qn
LCAncHJldl9pZCcsICdwcmV2X3RpdGxlJywgJ25leHRfaWQnLCAnbmV4dF90aXRsZScsICdj
c3MnKSBhcyAka2V5KSB7CgkJCQkJaWYgKGFycmF5X2tleV9leGlzdHMoJGtleSwgJHByZXRl
eHQpKQoJCQkJCQkkR0xPQkFMU1ska2V5XSA9ICRwcmV0ZXh0WyRrZXldOwoJCQkJfQoKCQkJ
CWlmIChjb3VudCgkdGhpcy0+bWF0Y2hlZF9wZXJtbGluaykgfHwgQCRtdF9yZWRpcmVjdCkg
ewoJCQkJCSRwbF9pbmRleCA9ICRwcmV0ZXh0WydwZXJtbGlua19pZCddOwoJCQkJCWlmICgh
QCRtdF9yZWRpcmVjdCB8fCAhJHRoaXMtPnByZWYoJ3JlZGlyZWN0X210X3N0eWxlX2xpbmtz
JykpIHsKCQkJCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkcHJldGV4dFsncGVybWxp
bmtfaWQnXSk7CgkJCQkJCSRwbF9pbmRleCA9IEAkcGxbJ3NldHRpbmdzJ11bJ2Rlc19wZXJt
bGluayddOwoJCQkJCX0KCgkJCQkJaWYgKEAkcHJldGV4dFsnaWQnXSAmJiAkcGxfaW5kZXgp
IHsKCQkJCQkJaWYgKGNvdW50KCR0aGlzLT5nZXRfcGVybWxpbmsoJHBsX2luZGV4KSkgPiAw
KSB7CgkJCQkJCQlvYl9jbGVhbigpOwoJCQkJCQkJZ2xvYmFsICRzaXRldXJsOwoJCQkJCQkJ
JHJzID0gc2FmZV9yb3coJyosIElEIGFzIHRoaXNpZCwgdW5peF90aW1lc3RhbXAoUG9zdGVk
KSBhcyBwb3N0ZWQnLCAndGV4dHBhdHRlcm4nLCAiSUQgPSAneyRwcmV0ZXh0WydpZCddfSci
KTsKCQkJCQkJCSRob3N0ID0gcnRyaW0oc3RyX3JlcGxhY2UocnRyaW0oZG9TdHJpcCgkcHJl
dGV4dFsnc3VicGF0aCddKSwgJy8nKSwgJycsIGh1KSwgJy8nKTsKCQkJCQkJCSR0aGlzLT5y
ZWRpcmVjdCgkaG9zdC4kdGhpcy0+X3Blcm1saW5rdXJsKCRycywgUEVSTUxJTktVUkwsICRw
bF9pbmRleCksICR0aGlzLT5wcmVmKCdwZXJtbGlua19yZWRpcmVjdF9odHRwX3N0YXR1cycp
KTsKCQkJCQkJfQoJCQkJCX0gZWxzZSBpZiAoJHVybCA9IEAkcGxbJ3NldHRpbmdzJ11bJ2Rl
c19sb2NhdGlvbiddKSB7CgkJCQkJCW9iX2NsZWFuKCk7CgkJCQkJCSR0aGlzLT5yZWRpcmVj
dCgkdXJsLCAkdGhpcy0+cHJlZigndXJsX3JlZGlyZWN0X2h0dHBfc3RhdHVzJykpOwoJCQkJ
CX0KCQkJCX0KCgkJCQlpZiAoQCRwcmV0ZXh0Wydyc3MnXSkgewoJCQkJCWlmIChAJHByZXRl
eHRbJ3MnXSkKCQkJCQkJJF9QT1NUWydzZWN0aW9uJ10gPSAkcHJldGV4dFsncyddOwoJCQkJ
CWlmIChAJHByZXRleHRbJ2MnXSkKCQkJCQkJJF9QT1NUWydjYXRlZ29yeSddID0gJHByZXRl
eHRbJ2MnXTsKCQkJCQlvYl9jbGVhbigpOwoJCQkJCWluY2x1ZGUgdHhwYXRoLicvcHVibGlz
aC9yc3MucGhwJzsKCQkJCQlleGl0KHJzcygpKTsKCQkJCX0KCgkJCQlpZiAoQCRwcmV0ZXh0
WydhdG9tJ10pIHsKCQkJCQlpZiAoQCRwcmV0ZXh0WydzJ10pCgkJCQkJCSRfUE9TVFsnc2Vj
dGlvbiddID0gJHByZXRleHRbJ3MnXTsKCQkJCQlpZiAoQCRwcmV0ZXh0WydjJ10pCgkJCQkJ
CSRfUE9TVFsnY2F0ZWdvcnknXSA9ICRwcmV0ZXh0WydjJ107CgkJCQkJb2JfY2xlYW4oKTsK
CQkJCQlpbmNsdWRlIHR4cGF0aC4nL3B1Ymxpc2gvYXRvbS5waHAnOwoJCQkJCWV4aXQoYXRv
bSgpKTsKCQkJCX0KCgkJCQkkdGhpcy0+ZGVidWcoJ1ByZXRleHQgJy5wcmludF9yKCRwcmV0
ZXh0LCAxKSk7CgkJCX0gZWxzZSB7CgkJCQkkdGhpcy0+ZGVidWcoJ05PIENIQU5HRVMgTUFE
RScpOwoJCQl9CgoJCQkvLyBMb2cgdGhpcyBwYWdlIGhpdAoJCQlpZiAoQCRvcmdpbmlhbF9z
dGF0dXMgPT0gNDA0KQoJCQkJbG9nX2hpdCgkcHJldGV4dFsnc3RhdHVzJ10pOwoKCQkJLy8g
U3RhcnQgb3V0cHV0IGJ1ZmZlcmluZyBhbmQgcHNldWRvIGNhbGxiYWNrIHRvIHRleHRwYXR0
ZXJuX2VuZAoJCQlvYl9zdGFydChhcnJheSgmJHRoaXMsICdfdGV4dHBhdHRlcm5fZW5kX2Nh
bGxiYWNrJykpOwoKCQkJLy8gVHhQIDQuMC41IChyMjQzNikgaW50cm9kdWNlZCB0aGUgdGV4
dHBhdHRlcm5fZW5kIGNhbGxiYWNrIG1ha2luZyB0aGUgZm9sbG93aW5nIHJlZHVuZGFudAoJ
CQkkdmVyc2lvbiA9IGFycmF5X3N1bShhcnJheV9tYXAoCgkJCQljcmVhdGVfZnVuY3Rpb24o
JyRsaW5lJywgJ2lmIChwcmVnX21hdGNoKFwnL15cJCcuJ0xhc3RDaGFuZ2VkUmV2aXNpb246
IChcdyspIFwkL1wnLCAkbGluZSwgJG1hdGNoKSkgcmV0dXJuICRtYXRjaFsxXTsnKSwKCQkJ
CUBmaWxlKHR4cGF0aCAuICcvcHVibGlzaC5waHAnKQoJCQkpKTsKCQkJaWYgKCR2ZXJzaW9u
ID49ICcyNDM2JykgcmV0dXJuOwoKCQkJLy8gUmVtb3ZlIHRoZSBwbHVnaW4gY2FsbGJhY2tz
IHdoaWNoIGhhdmUgYWxyZWFkeSBiZWVuIGNhbGxlZAoJCQlmdW5jdGlvbiBmaWx0ZXJfY2Fs
bGJhY2tzKCRjKSB7CgkJCQlpZiAoJGNbJ2V2ZW50J10hPSd0ZXh0cGF0dGVybicpIHJldHVy
biB0cnVlOwoJCQkJaWYgKEAkY1snZnVuY3Rpb24nXVswXS0+cGx1Z2luX25hbWUgPT0gJ2di
cF9wZXJtYW5lbnRfbGlua3MnICYmCgkJCQkJCUAkY1snZnVuY3Rpb24nXVsxXSA9PSAnX3Rl
eHRwYXR0ZXJuJykKCQkJCXsKCQkJCQkkR0xPQkFMU1snZ2JwX2ZvdW5kX3NlbGYnXSA9IHRy
dWU7CgkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJfQoJCQkJcmV0dXJuIEAkR0xPQkFMU1snZ2Jw
X2ZvdW5kX3NlbGYnXTsKCQkJfQoJCQkkcGx1Z2luX2NhbGxiYWNrID0gYXJyYXlfZmlsdGVy
KCRwbHVnaW5fY2FsbGJhY2ssICdmaWx0ZXJfY2FsbGJhY2tzJyk7CgkJCXVuc2V0KCRHTE9C
QUxTWydnYnBfZm91bmRfc2VsZiddKTsKCgkJCS8vIFJlLWNhbGwgdGV4dHBhdHRlcm4KCQkJ
dGV4dHBhdHRlcm4oKTsKCgkJCS8vIENhbGwgY3VzdG9tIHRleHRwYXR0ZXJuX2VuZCBjYWxs
YmFjawoJCQkkdGhpcy0+X3RleHRwYXR0ZXJuX2VuZCgpOwoKCQkJLy8gdGV4dHBhdHRlcm4o
KSBoYXMgcnVuLCBraWxsIHRoZSBjb25uZWN0aW9uCgkJCWRpZSgpOwoJCX0KCgl9IC8vIGZ1
bmN0aW9uIF90ZXh0cGF0dGVybiBlbmQKCglmdW5jdGlvbiBfdGV4dHBhdHRlcm5fZW5kICgp
IHsKCQkvLyBSZWRpcmVjdCB0byBhIDQwNCBpZiB0aGUgcGFnZSBudW1iZXIgaXMgZ3JlYXRl
ciB0aGFuIHRoZSBtYXggbnVtYmVyIG9mIHBhZ2VzCgkJLy8gSGFzIHRvIGJlIGFmdGVyIHRl
eHRwYXR0ZXJuKCkgYXMgJHRoaXNwYWdlIGlzIHNldCBkdXJpbmcgPHR4cDphcnRpY2xlIC8+
CgkJZ2xvYmFsICR0aGlzcGFnZSwgJHByZXRleHQ7CgkJaWYgKChAJHByZXRleHRbJ3BnJ10g
JiYgaXNzZXQoJHRoaXNwYWdlKSkgJiYKCQkoJHRoaXNwYWdlWydudW1QYWdlcyddIDwgJHBy
ZXRleHRbJ3BnJ10pKSB7CgkJCW9iX2VuZF9jbGVhbigpOwoJCQl0eHBfZGllKGdUeHQoJzQw
NF9ub3RfZm91bmQnKSwgJzQwNCcpOwoJCX0KCgkJLy8gU3RvcCBvdXRwdXQgYnVmZmVyaW5n
LCB0aGlzIHNlbmRzIHRoZSBidWZmZXIgdG8gX3RleHRwYXR0ZXJuX2VuZF9jYWxsYmFjaygp
CgkJd2hpbGUgKEBvYl9lbmRfZmx1c2goKSk7CgoJfSAvLyBmdW5jdGlvbiBfdGV4dHBhdHRl
cm5fZW5kIGVuZAoKCWZ1bmN0aW9uIF90ZXh0cGF0dGVybl9lbmRfY2FsbGJhY2sgKCRodG1s
LCAkb3ZlcnJpZGUgPSAnJykgewoJCWdsb2JhbCAkcHJldGV4dCwgJHByb2R1Y3Rpb25fc3Rh
dHVzOwoKCQlpZiAoJG92ZXJyaWRlKSAkcHJldGV4dFsncGVybWxpbmtfb3ZlcnJpZGUnXSA9
ICRvdmVycmlkZTsKCQkkaHRtbCA9IHByZWdfcmVwbGFjZV9jYWxsYmFjaygKCQkJJyVocmVm
PSIoJy5odS4nfFw/KShbXiJdKikiJScsCgkJCWFycmF5KCYkdGhpcywgJ19wYWdlbGlua3Vy
bCcpLAoJCQkkaHRtbAoJCSk7CgkJdW5zZXQoJHByZXRleHRbJ3Blcm1saW5rX292ZXJyaWRl
J10pOwoKCQlpZiAoJHRoaXMtPnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rp
b25fc3RhdHVzLCBhcnJheSgnZGVidWcnLCAndGVzdGluZycpKSkgewoJCQkkZGVidWcgPSBq
b2luKG4sICR0aGlzLT5idWZmZXJfZGVidWcpOwoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnID0g
YXJyYXkoKTsKCQkJaWYgKCRkZWJ1ZykKCQkJCSRodG1sID0gY29tbWVudChuLiRkZWJ1Zy5u
KSAuICRodG1sOwoJCX0KCgkJcmV0dXJuICRodG1sOwoJfSAvLyBmdW5jdGlvbiBfdGV4dHBh
dHRlcm5fZW5kX2NhbGxiYWNrIGVuZAoKCWZ1bmN0aW9uIGNoZWNrX3Blcm1saW5rX2NvbmRp
dGlvbnMgKCRwbCwgJGFydGljbGVfYXJyYXkpIHsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJy
YXlbJ3NlY3Rpb24nXSkpICRhcnRpY2xlX2FycmF5WydzZWN0aW9uJ10gPSBAJGFydGljbGVf
YXJyYXlbJ1NlY3Rpb24nXTsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5
MSddKSkgJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MSddID0gQCRhcnRpY2xlX2FycmF5WydD
YXRlZ29yeTEnXTsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MiddKSkg
JGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MiddID0gQCRhcnRpY2xlX2FycmF5WydDYXRlZ29y
eTInXTsKCgkJaWYgKEAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9jYXRlZ29yeSddICYmICgkcGxb
J3NldHRpbmdzJ11bJ2Nvbl9jYXRlZ29yeSddICE9ICRhcnRpY2xlX2FycmF5WydjYXRlZ29y
eTEnXSB8fCAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9jYXRlZ29yeSddICE9ICRhcnRpY2xlX2Fy
cmF5WydjYXRlZ29yeTInXSkpCgkJCXJldHVybiBmYWxzZTsKCQlpZiAoQCRwbFsnc2V0dGlu
Z3MnXVsnY29uX3NlY3Rpb24nXSAmJiAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9zZWN0aW9uJ10g
IT0gJGFydGljbGVfYXJyYXlbJ3NlY3Rpb24nXSkKCQkJcmV0dXJuIGZhbHNlOwoKCQlyZXR1
cm4gdHJ1ZTsKCX0KCglmdW5jdGlvbiBfcGVybWxpbmt1cmwgKCRhcnRpY2xlX2FycmF5LCAk
dHlwZSA9IFBFUk1MSU5LVVJMLCAkcGxfaW5kZXggPSBOVUxMKSB7CgkJZ2xvYmFsICRwcmV0
ZXh0LCAkcHJlZnMsICRwcm9kdWN0aW9uX3N0YXR1czsKCgkJaWYgKCR0eXBlID09IFBBR0VM
SU5LVVJMKQoJCQlyZXR1cm4gJHRoaXMtPnRvZ2dsZV9jdXN0b21fdXJsX2Z1bmMoJ3BhZ2Vs
aW5rdXJsJywgJGFydGljbGVfYXJyYXkpOwoKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXkp
KSByZXR1cm47CgoJCWlmICgkcGxfaW5kZXgpCgkJCSRwbCA9ICR0aGlzLT5nZXRfcGVybWxp
bmsoJHBsX2luZGV4KTsKCQllbHNlIHsKCQkJLy8gR2V0IHRoZSBtYXRjaGVkIHByZXRleHQg
cmVwbGFjZW1lbnQgYXJyYXkuCgkJCSRtYXRjaGVkID0gKGNvdW50KCR0aGlzLT5tYXRjaGVk
X3Blcm1saW5rKSkKCQkJPyAkdGhpcy0+bWF0Y2hlZF9wZXJtbGluawoJCQk6IEBhcnJheV9z
aGlmdChhcnJheV9zbGljZSgkdGhpcy0+cGFydGlhbF9tYXRjaGVzLCAtMSkpOwoKCQkJaWYg
KCFpc3NldCgkcGwpICYmICRtYXRjaGVkICYmIGFycmF5X2tleV9leGlzdHMoJ2lkJywgJG1h
dGNoZWQpKSB7CgkJCQkvLyBUaGUgcGVybWxpbmsgaWQgaXMgc3RvcmVkIGluIHRoZSBwcmV0
ZXh0IHJlcGxhY2VtZW50IGFycmF5LCBzbyB3ZSBjYW4gZmluZCB0aGUgcGVybWxpbmsuCgkJ
CQkkcGwgPSAkdGhpcy0+Z2V0X3Blcm1saW5rKCRtYXRjaGVkWydwZXJtbGlua19pZCddKTsK
CQkJCWZvcmVhY2ggKCRwbFsnY29tcG9uZW50cyddIGFzICRwbF9jKQoJCQkJCWlmIChpbl9h
cnJheSgkcGxfY1sndHlwZSddLCBhcnJheSgnZmVlZCcsICdwYWdlJykpIHx8ICEkdGhpcy0+
Y2hlY2tfcGVybWxpbmtfY29uZGl0aW9ucygkcGwsICRhcnRpY2xlX2FycmF5KSkgewoJCQkJ
CQl1bnNldCgkcGwpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCX0KCgkJCWlmICghaXNzZXQo
JHBsKSkgewoJCQkJLy8gV2UgaGF2ZSBubyBwZXJtbGluayBpZCBzbyBncmFiIHRoZSBwZXJt
bGluayB3aXRoIHRoZSBoaWdoZXN0IHByZWNlZGVuY2UuCgkJCQkkcGVybWxpbmtzID0gJHRo
aXMtPmdldF9hbGxfcGVybWxpbmtzKDEsIGFycmF5KCdmZWVkJywgJ3BhZ2UnKSk7CgkJCQlm
b3JlYWNoICgkcGVybWxpbmtzIGFzICRrZXkgPT4gJHBsKQoJCQkJCWlmICghJHRoaXMtPmNo
ZWNrX3Blcm1saW5rX2NvbmRpdGlvbnMoJHBsLCAkYXJ0aWNsZV9hcnJheSkpCgkJCQkJCXVu
c2V0KCRwZXJtbGlua3NbJGtleV0pOwoJCQkJJHBsID0gYXJyYXlfc2hpZnQoJHBlcm1saW5r
cyk7CgkJCX0KCQl9CgoJCSR1cmkgPSAnJzsKCgkJaWYgKGlzX2FycmF5KCRwbCkgJiYgYXJy
YXlfa2V5X2V4aXN0cygnY29tcG9uZW50cycsICRwbCkpIHsKCQkJZXh0cmFjdCgkYXJ0aWNs
ZV9hcnJheSk7CgoJCQlpZiAoIWlzc2V0KCR0aXRsZSkpICR0aXRsZSA9ICRUaXRsZTsKCQkJ
aWYgKGVtcHR5KCR1cmxfdGl0bGUpKSAkdXJsX3RpdGxlID0gc3RyaXBTcGFjZSgkdGl0bGUp
OwoJCQlpZiAoZW1wdHkoJHNlY3Rpb24pKSAkc2VjdGlvbiA9ICRTZWN0aW9uOwoJCQlpZiAo
ZW1wdHkoJHBvc3RlZCkpICRwb3N0ZWQgPSAkUG9zdGVkOwoJCQlpZiAoZW1wdHkoJGF1dGhv
cmlkKSkgJGF1dGhvcmlkID0gQCRBdXRob3JJRDsKCQkJaWYgKGVtcHR5KCRjYXRlZ29yeTEp
KSAkY2F0ZWdvcnkxID0gQCRDYXRlZ29yeTE7CgkJCWlmIChlbXB0eSgkY2F0ZWdvcnkyKSkg
JGNhdGVnb3J5MiA9IEAkQ2F0ZWdvcnkyOwoJCQlpZiAoZW1wdHkoJHRoaXNpZCkpICR0aGlz
aWQgPSAkSUQ7CgoJCQkkcGxfY29tcG9uZW50cyA9ICRwbFsnY29tcG9uZW50cyddOwoKCQkJ
Ly8gQ2hlY2sgdG8gc2VlIGlmIHRoZXJlIGlzIGEgdGl0bGUgY29tcG9uZW50LgoJCQkkdGl0
bGUgPSBmYWxzZTsKCQkJZm9yZWFjaCgkcGxfY29tcG9uZW50cyBhcyAkcGxfYykKCQkJCWlm
ICgkcGxfY1sndHlwZSddID09ICd0aXRsZScgfHwgJHBsX2NbJ3R5cGUnXSA9PSAnaWQnKQoJ
CQkJCSR0aXRsZSA9IHRydWU7CgoJCQkvLyBJZiB0aGVyZSBpc24ndCBhIHRpdGxlIGNvbXBv
bmVudCB0aGVuIHdlIG5lZWQgdG8gYXBwZW5kIG9uZSB0byB0aGUgZW5kIG9mIHRoZSBVUkkK
CQkJaWYgKCEkdGl0bGUgJiYgJHRoaXMtPnByZWYoJ2F1dG9tYXRpY2FsbHlfYXBwZW5kX3Rp
dGxlJykpCgkJCQkkcGxfY29tcG9uZW50c1tdID0gYXJyYXkoJ3R5cGUnID0+ICd0aXRsZScs
ICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywgJ3JlZ2V4JyA9PiAnJywgJ3RleHQn
ID0+ICcnKTsKCgkJCSR1cmkgPSBydHJpbShkb1N0cmlwKEAkcHJldGV4dFsnc3VicGF0aCdd
KSwgJy8nKTsKCQkJZm9yZWFjaCAoJHBsX2NvbXBvbmVudHMgYXMgJHBsX2MpIHsKCQkJCSR1
cmkgLj0gJy8nOwoKCQkJCSR0eXBlID0gJHBsX2NbJ3R5cGUnXTsKCQkJCXN3aXRjaCAoJHR5
cGUpIHsKCQkJCQljYXNlICdjYXRlZ29yeSc6CgkJCQkJCWlmICghQCRwbF9jWydjYXRlZ29y
eSddKSAkcGxfY1snY2F0ZWdvcnknXSA9IDE7CgkJCQkJCSRwcmltYXJ5ID0gJ2NhdGVnb3J5
Jy4gJHBsX2NbJ2NhdGVnb3J5J107CgkJCQkJCSRzZWNvbmRhcnkgPSAnY2F0ZWdvcnknLiAo
My0oaW50KSRwbF9jWydjYXRlZ29yeSddKTsKCQkJCQkJJGNoZWNrX2NvbnRleHQgPSAoJHRo
aXMtPnByZWYoJ2pvaW5fcHJldGV4dF90b19wYWdlbGlua3MnKSAmJiAkdGhpcy0+cHJlZign
Y2hlY2tfcHJldGV4dF9jYXRlZ29yeV9jb250ZXh0JykpOwoJCQkJCQlpZiAoISRjaGVja19j
b250ZXh0IHx8ICQkcHJpbWFyeSA9PSAkcHJldGV4dFsnYyddKQoJCQkJCQkJJHVyaV9jID0g
JCRwcmltYXJ5OwoJCQkJCQllbHNlIGlmICghJGNoZWNrX2NvbnRleHQgfHwgJCRzZWNvbmRh
cnkgPT0gJHByZXRleHRbJ2MnXSkKCQkJCQkJCSR1cmlfYyA9ICQkc2Vjb25kYXJ5OwoJCQkJ
CQllbHNlIGlmICgkdGhpcy0+cHJlZignZGVidWcnKSAmJiBpbl9hcnJheSgkcHJvZHVjdGlv
bl9zdGF0dXMsIGFycmF5KCdkZWJ1ZycsICd0ZXN0aW5nJykpKQoJCQkJCQkJJHVyaV9jID0g
Jy0tSU5WQUxJRF9DQVRFR09SWS0tJzsKCQkJCQkJZWxzZSB7CgkJCQkJCQl1bnNldCgkdXJp
KTsKCQkJCQkJCWJyZWFrIDI7CgkJCQkJCX0KCQkJCQlicmVhazsKCQkJCQljYXNlICdzZWN0
aW9uJzoKCQkJCQkJJGNoZWNrX2NvbnRleHQgPSAoJHRoaXMtPnByZWYoJ2pvaW5fcHJldGV4
dF90b19wYWdlbGlua3MnKSAmJiAkdGhpcy0+cHJlZignY2hlY2tfcHJldGV4dF9zZWN0aW9u
X2NvbnRleHQnKSk7CgkJCQkJCWlmICghJGNoZWNrX2NvbnRleHQgfHwgJHNlY3Rpb24gPT0g
JHByZXRleHRbJ3MnXSkKCQkJCQkJCSR1cmlfYyA9ICRzZWN0aW9uOwoJCQkJCQllbHNlIHsK
CQkJCQkJCXVuc2V0KCR1cmkpOwoJCQkJCQkJYnJlYWsgMjsKCQkJCQkJfQoJCQkJCWJyZWFr
OwoJCQkJCWNhc2UgJ3RpdGxlJzogJHVyaV9jID0gJHVybF90aXRsZTsgYnJlYWs7CgkJCQkJ
Y2FzZSAnaWQnOiAkdXJpX2MgPSAkdGhpc2lkOyBicmVhazsKCQkJCQljYXNlICdhdXRob3In
OiAkdXJpX2MgPSBzYWZlX2ZpZWxkKCdSZWFsTmFtZScsICd0eHBfdXNlcnMnLCAibmFtZSBs
aWtlICd7JGF1dGhvcmlkfSciKTsgYnJlYWs7CgkJCQkJY2FzZSAnbG9naW4nOiAkdXJpX2Mg
PSAkYXV0aG9yaWQ7IGJyZWFrOwoJCQkJCWNhc2UgJ2RhdGUnOiAkdXJpX2MgPSBleHBsb2Rl
KCcvJywgZGF0ZSgnWS9tL2QnLCAkcG9zdGVkKSk7IGJyZWFrOwoJCQkJCWNhc2UgJ3llYXIn
OiAkdXJpX2MgPSBkYXRlKCdZJywgJHBvc3RlZCk7IGJyZWFrOwoJCQkJCWNhc2UgJ21vbnRo
JzogJHVyaV9jID0gZGF0ZSgnbScsICRwb3N0ZWQpOyBicmVhazsKCQkJCQljYXNlICdkYXkn
OiAkdXJpX2MgPSBkYXRlKCdkJywgJHBvc3RlZCk7IGJyZWFrOwoJCQkJCWNhc2UgJ2N1c3Rv
bSc6CgkJCQkJCWlmICgkdXJpX2MgPSBAJGFydGljbGVfYXJyYXlbJHByZWZzWyJjdXN0b21f
eyRwbF9jWydjdXN0b20nXX1fc2V0Il1dKTsKCQkJCQkJZWxzZSBpZiAoJHVyaV9jID0gQCRh
cnRpY2xlX2FycmF5WyJjdXN0b21feyRwbF9jWydjdXN0b20nXX0iXSk7CgkJCQkJCWVsc2Ug
aWYgKCR0aGlzLT5wcmVmKCdkZWJ1ZycpICYmIGluX2FycmF5KCRwcm9kdWN0aW9uX3N0YXR1
cywgYXJyYXkoJ2RlYnVnJywgJ3Rlc3RpbmcnKSkpCgkJCQkJCQkkdXJpX2MgPSAnLS1VTlNF
VF9DVVNUT01fRklFTEQtLSc7CgkJCQkJCWVsc2UgewoJCQkJCQkJdW5zZXQoJHVyaSk7CgkJ
CQkJCQlicmVhayAyOwoJCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAndGV4dCc6ICR1
cmlfYyA9ICRwbF9jWyd0ZXh0J107IGJyZWFrOwoJCQkJCWNhc2UgJ3JlZ2V4JzoKCQkJCQkJ
Ly8gQ2hlY2sgdG8gc2VlIGlmIHJlZ2V4IGlzIHZhbGlkIHdpdGhvdXQgb3V0cHV0dGluZyBl
cnJvciBtZXNzYWdlcy4KCQkJCQkJb2Jfc3RhcnQoKTsKCQkJCQkJcHJlZ19tYXRjaCgkcGxf
Y1sncmVnZXgnXSwgJHBsX2NbJ3JlZ2V4J10sICRyZWdleF9tYXRjaGVzKTsKCQkJCQkJJGlz
X3ZhbGlkX3JlZ2V4ID0gIShvYl9nZXRfY2xlYW4oKSk7CgkJCQkJCWlmICgkaXNfdmFsaWRf
cmVnZXgpIHsKCQkJCQkJCSRrZXkgPSAicGVybWxpbmtfcmVnZXhfeyRwbF9jWyduYW1lJ119
IjsKCQkJCQkJCSR1cmlfYyA9IChhcnJheV9rZXlfZXhpc3RzKCRrZXksICRwcmV0ZXh0KSkg
PyAkcHJldGV4dFska2V5XSA6ICRyZWdleF9tYXRjaGVzWzBdOwoJCQkJCQl9IGVsc2UgaWYg
KCR0aGlzLT5wcmVmKCdkZWJ1ZycpKQoJCQkJCQkJJHVyaV9jID0gJy0tSU5WQUxJRF9SRUdF
WC0tJzsKCQkJCQlicmVhazsKCQkJCX0KCgkJCQlpZiAoZW1wdHkoJHVyaV9jKSkKCQkJCQlp
ZiAoJHRoaXMtPnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rpb25fc3RhdHVz
LCBhcnJheSgnZGVidWcnLCAndGVzdGluZycpKSkKCQkJCQkJJHVyaV9jID0gJy0tUEVSTUxJ
TktfRk9STUFUX0VSUk9SLS0nOwoJCQkJCWVsc2UgewoJCQkJCQl1bnNldCgkdXJpKTsKCQkJ
CQkJYnJlYWs7CgkJCQkJfQoKCQkJCWlmIChAJHBsX2NbJ3ByZWZpeCddKQoJCQkJCSR1cmkg
Lj0gJHRoaXMtPmVuY29kZV91cmwoJHBsX2NbJ3ByZWZpeCddKTsKCgkJCQlpZiAoaXNfYXJy
YXkoJHVyaV9jKSkgewoJCQkJCWZvcmVhY2ggKCR1cmlfYyBhcyAkdXJpX2MyKQoJCQkJCQkk
dXJpIC49ICR0aGlzLT5lbmNvZGVfdXJsKCR1cmlfYzIpIC4gJy8nOwoJCQkJCSR1cmkgPSBy
dHJpbSgkdXJpLCAnLycpOwoJCQkJfSBlbHNlCgkJCQkJJHVyaSAuPSAkdGhpcy0+ZW5jb2Rl
X3VybCgkdXJpX2MpOwoKCQkJCWlmIChAJHBsX2NbJ3N1ZmZpeCddKQoJCQkJCSR1cmkgLj0g
JHRoaXMtPmVuY29kZV91cmwoJHBsX2NbJ3N1ZmZpeCddKTsKCgkJCQl1bnNldCgkdXJpX2Mp
OwoJCQl9CgoJCQlpZiAoaXNzZXQoJHVyaSkpCgkJCQkkdXJpIC49ICcvJzsKCQl9CgoJCWlm
ICgkdXJpX2VtcHR5ID0gZW1wdHkoJHVyaSkpIHsKCQkJLy8gSXQgaXMgcG9zc2libGUgdGhl
IHVyaSBpcyBzdGlsbCBlbXB0eSBpZiB0aGVyZSBpcyBubyBtYXRjaCBvciBpZiB3ZSdyZSB1
c2luZwoJCQkvLyBzdHJpY3QgbWF0Y2hpbmcgaWYgc28gdHJ5IHRoZSBkZWZhdWx0IHBlcm1s
aW5rIG1vZGUuCgkJCSR1cmkgPSAkdGhpcy0+dG9nZ2xlX3Blcm1saW5rX21vZGUoJ3Blcm1s
aW5rdXJsJywgJGFydGljbGVfYXJyYXkpOwoJCX0KCgkJaWYgKCR0aGlzLT5wcmVmKCdvbWl0
X3RyYWlsaW5nX3NsYXNoJykpCgkJCSR1cmkgPSBydHJpbSgkdXJpLCAnLycpOwoKCQlpZiAo
ISR1cmlfZW1wdHkgJiYgaW5fYXJyYXkodHhwYXRoLicvcHVibGlzaC9yc3MucGhwJywgZ2V0
X2luY2x1ZGVkX2ZpbGVzKCkpIHx8IGluX2FycmF5KHR4cGF0aC4nL3B1Ymxpc2gvYXRvbS5w
aHAnLCBnZXRfaW5jbHVkZWRfZmlsZXMoKSkgfHwgdHhwaW50ZXJmYWNlID09ICdhZG1pbicp
IHsKCQkJJGhvc3QgPSBydHJpbShzdHJfcmVwbGFjZShydHJpbShkb1N0cmlwKEAkcHJldGV4
dFsnc3VicGF0aCddKSwgJy8nKSwgJycsIGh1KSwgJy8nKTsKCQkJJHVyaSA9ICRob3N0IC4g
JHVyaTsKCQl9CgoJCXJldHVybiAoJHRoaXMtPnByZWYoJ2ZvcmNlX2xvd2VyY2FzZV91cmxz
JykpID8gc3RydG9sb3dlcigkdXJpKSA6ICR1cmk7Cgl9CgoJZnVuY3Rpb24gX3BhZ2VsaW5r
dXJsICgkcGFydHMpIHsKCQlleHRyYWN0KGxBdHRzKGFycmF5KAoJCQkncGF0aCcJCT0+ICdp
bmRleC5waHAnLAoJCQkncXVlcnknCQk9PiAnJywKCQkJJ2ZyYWdtZW50Jwk9PiAnJywKCQkp
LCBwYXJzZV91cmwoaHRtbF9lbnRpdHlfZGVjb2RlKHN0cl9yZXBsYWNlKCcmIzM4OycsICcm
JywgJHBhcnRzWzJdKSkpKSk7CgoJCS8vIFRpZHkgdXAgbGlua3MgYmFjayB0byB0aGUgc2l0
ZSBob21lcGFnZQoJCWlmICgkcGF0aCA9PSAnaW5kZXgucGhwJyAmJiBlbXB0eSgkcXVlcnkp
KQoJCQlyZXR1cm4gJ2hyZWY9IicgLmh1LiAnIic7CgoJCS8vIEZpeCBtYXRjaGVzIGxpa2Ug
aHJlZj0iP3M9Zm9vIgoJCWVsc2UgaWYgKCRwYXRoICYmIGVtcHR5KCRxdWVyeSkgJiYgJHBh
cnRzWzFdID09ICc/JykgewoJCQkkcXVlcnkgPSAkcGF0aDsKCQkJJHBhdGggPSAnaW5kZXgu
cGhwJzsKCQl9CgoJCS8vIENoZWNrIHRvIHNlZSBpZiB0aGVyZSBpcyBxdWVyeSB0byB3b3Jr
IHdpdGguCgkJZWxzZSBpZiAoZW1wdHkoJHF1ZXJ5KSB8fCAkcGF0aCAhPSAnaW5kZXgucGhw
JyB8fCBzdHJwb3MoJHF1ZXJ5LCAnLycpID09PSB0cnVlKQoJCQlyZXR1cm4gJHBhcnRzWzBd
OwoKCQkvLyAnJmFtcDsnIHdpbGwgYnJlYWsgcGFyc2Vfc3RyKCkgaWYgdGhleSBhcmUgZm91
bmQgaW4gYSBxdWVyeSBzdHJpbmcKCQkkcXVlcnkgPSBzdHJfcmVwbGFjZSgnJmFtcDsnLCAn
JicsICRxdWVyeSk7CgoJCWlmICgkZnJhZ21lbnQpCgkJCSRmcmFnbWVudCA9ICcjJy4kZnJh
Z21lbnQ7CgoJCWdsb2JhbCAkcHJldGV4dDsKCQlwYXJzZV9zdHIoJHF1ZXJ5LCAkcXVlcnlf
cGFydCk7CgkJaWYgKCFhcnJheV9rZXlfZXhpc3RzKCdwZycsICRxdWVyeV9wYXJ0KSkKCQkJ
JHF1ZXJ5X3BhcnRbJ3BnJ10gPSAwOwoJCWlmICghYXJyYXlfa2V5X2V4aXN0cygnaWQnLCAk
cXVlcnlfcGFydCkpCgkJCSRxdWVyeV9wYXJ0WydpZCddID0gMDsKCQlpZiAoIWFycmF5X2tl
eV9leGlzdHMoJ3JzcycsICRxdWVyeV9wYXJ0KSkKCQkJJHF1ZXJ5X3BhcnRbJ3JzcyddID0g
MDsKCQlpZiAoIWFycmF5X2tleV9leGlzdHMoJ2F0b20nLCAkcXVlcnlfcGFydCkpCgkJCSRx
dWVyeV9wYXJ0WydhdG9tJ10gPSAwOwoJCWlmICgkdGhpcy0+cHJlZignam9pbl9wcmV0ZXh0
X3RvX3BhZ2VsaW5rcycpKQoJCQlleHRyYWN0KGFycmF5X21lcmdlKCRwcmV0ZXh0LCAkcXVl
cnlfcGFydCkpOwoJCWVsc2UKCQkJZXh0cmFjdCgkcXVlcnlfcGFydCk7CgoJCS8vIFdlIGhh
dmUgYSBpZCwgcGFzcyB0byBwZXJtbGlua3VybCgpCgkJaWYgKCRpZCkgewoJCQlpZiAoQCRz
ID09ICdmaWxlX2Rvd25sb2FkJykgewoJCQkJJHRpdGxlID0gKHZlcnNpb25fY29tcGFyZSgk
ZGJ2ZXJzaW9uLCAnNC4yJywgJz49JykpID8gTlVMTCA6IHNhZmVfZmllbGQoJ2ZpbGVuYW1l
JywgJ3R4cF9maWxlJywgImlkID0gJ3skaWR9JyIpOwoJCQkJJHVybCA9ICR0aGlzLT50b2dn
bGVfcGVybWxpbmtfbW9kZSgnZmlsZWRvd25sb2FkdXJsJywgYXJyYXkoJGlkLCAkdGl0bGUp
LCB0cnVlKTsKCQkJfSBlbHNlIHsKCQkJCSRycyA9IHNhZmVfcm93KCcqLCBJRCBhcyB0aGlz
aWQsIHVuaXhfdGltZXN0YW1wKFBvc3RlZCkgYXMgcG9zdGVkJywgJ3RleHRwYXR0ZXJuJywg
IklEID0gJ3skaWR9JyIpOwoJCQkJJHVybCA9ICR0aGlzLT5fcGVybWxpbmt1cmwoJHJzLCBQ
RVJNTElOS1VSTCkgLiAkZnJhZ21lbnQ7CgkJCX0KCQkJcmV0dXJuICdocmVmPSInLiAkdXJs
IC4nIic7CgkJfQoKCQlpZiAoQCRzID09ICdkZWZhdWx0JykKCQkJdW5zZXQoJHMpOwoKCQkv
LyBTb21lIFR4UCB0YWdzLCBlLmcuIDx0eHA6ZmVlZF9saW5rIC8+IHVzZSAnc2VjdGlvbicg
b3IgJ2NhdGVnb3J5JyBpbmNvbnNpc3RlbnQKCQkvLyB3aXRoIG1vc3Qgb3RoZXIgdGFncy4g
UHJvY2VzcyB0aGVzZSBub3cgc28gd2Ugb25seSBoYXZlIHRvIGNoZWNrICRzIGFuZCAkYy4K
CQlpZiAoQCRzZWN0aW9uICYmICEkcykKCQkJJHMgPSAkc2VjdGlvbjsKCQlpZiAoQCRjYXRl
Z29yeSAmJiAhJGMpCgkJCSRjID0gJGNhdGVnb3J5OwoKCQkvLyBEZWJ1Z2dpbmcgZm9yIGJ1
ZmZlcnMKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAndXJsOiAnLnN0cl9yZXBsYWNlKCcm
YW1wOycsICcmJywgJHBhcnRzWzFdLiRwYXJ0c1syXSk7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1
Z1tdID0gJ3BhdGg6ICcuJHBhdGg7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3F1ZXJ5
OiAnLiRxdWVyeTsKCQlpZiAoJGZyYWdtZW50KSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAn
ZnJhZ21lbnQ6ICcuJGZyYWdtZW50OwoKCQlpZiAoQCRpZCkgJHRoaXMtPmJ1ZmZlcl9kZWJ1
Z1tdID0gJ2lkOiAnLiRpZDsKCQlpZiAoQCRzKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAn
czogJy4kczsKCQlpZiAoQCRjKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnYzogJy4kYzsK
CQlpZiAoQCRyc3MpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdyc3M6ICcuJHJzczsKCQlp
ZiAoQCRhdG9tKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnYXRvbTogJy4kYXRvbTsKCQlp
ZiAoQCRwZykgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3BnOiAnLiRwZzsKCQlpZiAoQCRx
KSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncTogJy4kcTsKCgkJaWYgKEAkcHJldGV4dFsn
cGVybWxpbmtfb3ZlcnJpZGUnXSkgewoJCQkkb3ZlcnJpZGVfaWRzID0gZXhwbG9kZSgnLCcs
ICRwcmV0ZXh0WydwZXJtbGlua19vdmVycmlkZSddKTsKCQkJZm9yZWFjaCAoJG92ZXJyaWRl
X2lkcyBhcyAkb3ZlcnJpZGVfaWQpIHsKCQkJCSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmso
JG92ZXJyaWRlX2lkKTsKCQkJCWlmIChjb3VudCgkcGwpID4gMCkgJHBlcm1saW5rc1tdID0g
JHBsOwoJCQl9CgkJfQoKCQlpZiAoZW1wdHkoJHBlcm1saW5rcykpIHsKCQkJJHBlcm1saW5r
cyA9ICR0aGlzLT5nZXRfYWxsX3Blcm1saW5rcygxKTsKCgkJCSRwZXJtbGlua3NbJ2dicF9w
ZXJtYW5lbnRfbGlua3NfZGVmYXVsdCddID0gYXJyYXkoCgkJCQknY29tcG9uZW50cycgPT4g
YXJyYXkoCgkJCQkJYXJyYXkoJ3R5cGUnID0+ICd0ZXh0JywgJ3RleHQnID0+IHN0cnRvbG93
ZXIodXJsZW5jb2RlKGdUeHQoJ2NhdGVnb3J5JykpKSksCgkJCQkJYXJyYXkoJ3R5cGUnID0+
ICdjYXRlZ29yeScpLAoJCQkJKSwKCQkJCSdzZXR0aW5ncycgPT4gYXJyYXkoCgkJCQkJJ3Bs
X25hbWUnID0+ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1bHQnLCAncGxfcHJlY2VkZW5j
ZScgPT4gJycsICdwbF9wcmV2aWV3JyA9PiAnJywKCQkJCQknY29uX3NlY3Rpb24nID0+ICcn
LCAnY29uX2NhdGVnb3J5JyA9PiAnJywgJ2Rlc19zZWN0aW9uJyA9PiAnJywgJ2Rlc19jYXRl
Z29yeScgPT4gJycsCgkJCQkJJ2Rlc19wZXJtbGluaycgPT4gJycsICdkZXNfZmVlZCcgPT4g
JycsICdkZXNfbG9jYXRpb24nID0+ICcnLAoJCQkpKTsKCQl9CgoJCSRjdXJyZW50X3NlZ21l
bnRzID0gZXhwbG9kZSgnLycsIGx0cmltKCRwcmV0ZXh0WydyZXF1ZXN0X3VyaSddLCAnLycp
KTsKCgkJJGhpZ2hlc3RfbWF0Y2hfY291bnQgPSBudWxsOwoJCWZvcmVhY2ggKCRwZXJtbGlu
a3MgYXMgJGtleSA9PiAkcGwpIHsKCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ1Rlc3Rp
bmcgcGVybWxpbms6ICcuICRwbFsnc2V0dGluZ3MnXVsncGxfbmFtZSddIC4nIC0gJy4gJGtl
eTsKCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ1ByZXZpZXc6ICcuICRwbFsnc2V0dGlu
Z3MnXVsncGxfcHJldmlldyddOwoJCQkkb3V0ID0gYXJyYXkoKTsgJGtleXMgPSBhcnJheSgp
OyAkbWF0Y2hfY291bnQgPSAwOwoJCQlmb3JlYWNoICgkcGxbJ2NvbXBvbmVudHMnXSBhcyAk
aSA9PiAkcGxfYykgewoJCQkJc3dpdGNoICgkcGxfY1sndHlwZSddKSB7CgkJCQkJY2FzZSAn
dGV4dCc6CgkJCQkJCSRvdXRbXSA9ICRwbF9jWyd0ZXh0J107CgkJCQkJYnJlYWs7CgkJCQkJ
Y2FzZSAncmVnZXgnOgoJCQkJCQkkb3V0W10gPSAkcHJldGV4dFsncGVybWxpbmtfcmVnZXhf
Jy4kcGxfY1snbmFtZSddXTsKCQkJCQlicmVhazsKCQkJCQljYXNlICdzZWN0aW9uJzoKCQkJ
CQkJaWYgKEAkcykgJG91dFtdID0gJHM7CgkJCQkJCWVsc2UgYnJlYWsgMjsKCQkJCQlicmVh
azsKCQkJCQljYXNlICdjYXRlZ29yeSc6CgkJCQkJCWlmIChAJGMpICRvdXRbXSA9ICRjOwoJ
CQkJCQllbHNlIGJyZWFrIDI7CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAnZmVlZCc6CgkJCQkJ
CWlmIChAJHJzcykgJGtleXNbXSA9ICRvdXRbXSA9ICdyc3MnOwoJCQkJCQllbHNlIGlmIChA
JGF0b20pICRrZXlzW10gPSAkb3V0W10gPSAnYXRvbSc7CgkJCQkJCWVsc2UgYnJlYWsgMjsK
CQkJCQlicmVhazsKCQkJCQljYXNlICdzZWFyY2gnOgoJCQkJCQlpZiAoQCRxKSAkb3V0W10g
PSAkcTsKCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3BhZ2Un
OgoJCQkJCQlpZiAoQCRwZykgewoJCQkJCQkJJG91dFtdID0gJHBnOwoJCQkJCQkJJGtleXNb
XSA9ICdwZyc7CgkJCQkJCX0KCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJyZWFrOwoJCQkJ
CWRlZmF1bHQ6IGJyZWFrIDI7CgkJCQl9CgkJCQlpZiAoaW5fYXJyYXkoJHBsX2NbJ3R5cGUn
XSwgYXJyYXkoJ3RleHQnLCAncmVnZXgnKSkpIHsKCQkJCQlpZiAoJGN1cnJlbnRfc2VnbWVu
dHNbJGldID09IGVuZCgkb3V0KSAmJiBzdHJsZW4oZW5kKCRvdXQpKSA+IDApCgkJCQkJCSRt
YXRjaF9jb3VudCArPSAkdGhpcy0+cHJlZigndGV4dF9hbmRfcmVnZXhfc2VnbWVudF9zY29y
ZXMnKTsKCQkJCX0KCQkJCWVsc2VpZiAoIWluX2FycmF5KCRwbF9jWyd0eXBlJ10sIGFycmF5
KCd0aXRsZScsICdpZCcpKSkKCQkJCQkkbWF0Y2hfY291bnQrKzsKCQkJCWVsc2UgYnJlYWs7
CgkJCX0KCgkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdNYXRjaCBjb3VudDogJy4gJG1h
dGNoX2NvdW50OwoKCQkJLy8gVG9kbzogU3RvcmUgYWNjb3JkaW5nIHRvIHRoZSBwcmVjZWRl
bmNlIHZhbHVlCgkJCWlmIChjb3VudCgkb3V0KSA+IDAgJiYgKCRtYXRjaF9jb3VudCA+ICRo
aWdoZXN0X21hdGNoX2NvdW50IHx8ICFpc3NldCgkaGlnaGVzdF9tYXRjaF9jb3VudCkpICYm
CgkJCSEoJGtleSA9PSAnZ2JwX3Blcm1hbmVudF9saW5rc19kZWZhdWx0JyAmJiAhJG1hdGNo
X2NvdW50KSkgewoJCQkJZXh0cmFjdCgkcGxbJ3NldHRpbmdzJ10pOwoJCQkJaWYgKChlbXB0
eSgkcykgJiYgZW1wdHkoJGMpKSB8fAoJCQkJKGVtcHR5KCRjb25fc2VjdGlvbikgfHwgQCRz
ID09ICRjb25fc2VjdGlvbikgfHwKCQkJCShlbXB0eSgkY29uX2NhdGVnb3J5KSB8fCBAJGMg
PT0gJGNvbl9jYXRlZ29yeSkpIHsKCQkJCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnTmV3
IGhpZ2hlc3QgbWF0Y2ghICcuIGltcGxvZGUoJy8nLCAkb3V0KTsKCQkJCQkkaGlnaGVzdF9t
YXRjaF9jb3VudCA9ICRtYXRjaF9jb3VudDsKCQkJCQkkbWF0Y2ggPSAkb3V0OwoJCQkJCSRt
YXRjaF9rZXlzID0gJGtleXM7CgkJCQl9CgkJCX0KCQl9CgoJCWlmIChlbXB0eSgkbWF0Y2gp
ICYmICghKEAkcGcgJiYgJHRoaXMtPnByZWYoJ2NsZWFuX3BhZ2VfYXJjaGl2ZV9saW5rcycp
KSB8fCAoQCRwZyAmJiBAJHEpKSkgewoJCQlnbG9iYWwgJHByZWZzLCAkcHJldGV4dCwgJHBl
cm1saW5rX21vZGU7CgkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdObyBtYXRjaCc7CgkJ
CSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICctLS0tJzsKCQkJJHByZXRleHRbJ3Blcm1saW5r
X21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJHByZWZzWydwZXJtbGlua19tb2RlJ107CgkJ
CSR1cmwgPSBwYWdlbGlua3VybCgkcXVlcnlfcGFydCk7CgkJCSRwcmV0ZXh0WydwZXJtbGlu
a19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICdtZXNzeSc7CgkJCXJldHVybiAnaHJlZj0i
Jy4gJHVybCAuJyInOwoJCX0KCgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ21hdGNoOiAn
LiAgICAgIHNlcmlhbGl6ZSgkbWF0Y2gpOwoJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdt
YXRjaF9rZXlzOiAnLiBzZXJpYWxpemUoJG1hdGNoX2tleXMpOwoKCQkkdXJsID0gJy8nLmpv
aW4oJy8nLCAkbWF0Y2gpOwoJCSR1cmwgPSBydHJpbShodSwgJy8nKS5ydHJpbSgkdXJsLCAn
LycpLicvJzsKCgkJaWYgKCRyc3MgJiYgIWluX2FycmF5KCdyc3MnLCAkbWF0Y2hfa2V5cykp
CgkJCSR1cmwgLj0gJ3Jzcyc7CgkJZWxzZSBpZiAoJGF0b20gJiYgIWluX2FycmF5KCdhdG9t
JywgJG1hdGNoX2tleXMpKQoJCQkkdXJsIC49ICdhdG9tJzsKCQllbHNlIGlmICgkcGcgJiYg
IWluX2FycmF5KCdwZycsICRtYXRjaF9rZXlzKSkgewoJCQlpZiAoJHRoaXMtPnByZWYoJ2Ns
ZWFuX3BhZ2VfYXJjaGl2ZV9saW5rcycpKQoJCQkJJHVybCAuPSAkcGc7CgkJCWVsc2UgewoJ
CQkJJHVybCAuPSAnP3BnPScuICRwZzsKCQkJCSRvbWl0X3RyYWlsaW5nX3NsYXNoID0gdHJ1
ZTsKCQkJfQoJCX0KCgkJJHVybCA9IHJ0cmltKCR1cmwsICcvJykgLiAnLyc7CgoJCWlmIChA
JG9taXRfdHJhaWxpbmdfc2xhc2ggfHwgJHRoaXMtPnByZWYoJ29taXRfdHJhaWxpbmdfc2xh
c2gnKSkKCQkJJHVybCA9IHJ0cmltKCR1cmwsICcvJyk7CgoJCSR0aGlzLT5idWZmZXJfZGVi
dWdbXSA9ICR1cmw7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJy0tLS0nOwoKCQlpZiAo
JHBhdGggPT0gJ2luZGV4LnBocCcgJiYgJHVybCAhPSBodSkKCQkJcmV0dXJuICdocmVmPSIn
LiAkdXJsIC4gJGZyYWdtZW50IC4nIic7CgoJCS8qCgkJMSA9IGluZGV4LCB0ZXh0cGF0dGVy
bi9jc3MsIE5VTEwgKD1pbmRleCkKCQkyID0gaWQsIHMsIHNlY3Rpb24sIGMsIGNhdGVnb3J5
LCByc3MsIGF0b20sIHBnLCBxLCAobiwgcCwgbW9udGgsIGF1dGhvcikKCQkqLwoKCQlyZXR1
cm4gKCR0aGlzLT5wcmVmKCdmb3JjZV9sb3dlcmNhc2VfdXJscycpKSA/IHN0cnRvbG93ZXIo
JHBhcnRzWzBdKSA6ICRwYXJ0c1swXTsKCX0KCglmdW5jdGlvbiBzZXRfcGVybWxpbmtfbW9k
ZSAoJHJlc2V0X2Z1bmN0aW9uID0gZmFsc2UpIHsKCQlnbG9iYWwgJHByZWZzLCAkcHJldGV4
dCwgJHBlcm1saW5rX21vZGU7CgkJJHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXSA9IGFycmF5
KCYkdGhpcywgJ19wZXJtbGlua3VybCcpOwoKCQlpZiAoISRyZXNldF9mdW5jdGlvbikKCQkJ
JHByZXRleHRbJ3Blcm1saW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJ21lc3N5JzsK
CQllbHNlCgkJCSRwcmV0ZXh0WydwZXJtbGlua19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9
ICRwcmVmc1sncGVybWxpbmtfbW9kZSddOwoJfQoKCWZ1bmN0aW9uIHJlc2V0X3Blcm1saW5r
X21vZGUgKCkgewoJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0LCAkcGVybWxpbmtfbW9kZTsK
CQl1bnNldCgkcHJlZnNbJ2N1c3RvbV91cmxfZnVuYyddKTsKCQkkcHJldGV4dFsncGVybWxp
bmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAkcHJlZnNbJ3Blcm1saW5rX21vZGUnXTsK
CX0KCglmdW5jdGlvbiB0b2dnbGVfY3VzdG9tX3VybF9mdW5jICgkZnVuYywgJGF0dHMgPSBO
VUxMLCAkdG9vZ2xlX3Blcm1saW5rX21vZGUgPSBmYWxzZSwgJGV4cGFuZF9hcmd1bWVudHMg
PSBmYWxzZSkgewoJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0OwoKCQlpZiAoJHRvb2dsZV9w
ZXJtbGlua19tb2RlKSB7CgkJCWdsb2JhbCAkcGVybWxpbmtfbW9kZTsKCQkJJF9wZXJtbGlu
a19tb2RlID0gJHBlcm1saW5rX21vZGU7CgkJfQoKCQkkX2NhbGxfdXNlcl9mdW5jID0gQCRw
cmVmc1snY3VzdG9tX3VybF9mdW5jJ107CgoJCXVuc2V0KCRwcmVmc1snY3VzdG9tX3VybF9m
dW5jJ10pOwoJCWlmICgkdG9vZ2xlX3Blcm1saW5rX21vZGUpCgkJCSRwcmV0ZXh0WydwZXJt
bGlua19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICRwcmVmc1sncGVybWxpbmtfbW9kZSdd
OwoKCQlpZiAoaXNfY2FsbGFibGUoJGZ1bmMpKSB7CgkJCWlmIChpc19hcnJheSgkYXR0cykg
YW5kICRleHBhbmRfYXJndW1lbnRzKQoJCQkJJHJzID0gY2FsbF91c2VyX2Z1bmNfYXJyYXko
JGZ1bmMsICRhdHRzKTsKCQkJZWxzZQoJCQkJJHJzID0gY2FsbF91c2VyX2Z1bmMoJGZ1bmMs
ICRhdHRzKTsKCQl9CgoJCSRwcmVmc1snY3VzdG9tX3VybF9mdW5jJ10gPSAkX2NhbGxfdXNl
cl9mdW5jOwoKCQlpZiAoJHRvb2dsZV9wZXJtbGlua19tb2RlKQoJCQkkcHJldGV4dFsncGVy
bWxpbmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAkX3Blcm1saW5rX21vZGU7CgoJCXJl
dHVybiAkcnM7Cgl9CgoJZnVuY3Rpb24gdG9nZ2xlX3Blcm1saW5rX21vZGUgKCRmdW5jLCAk
YXR0cyA9IE5VTEwsICRleHBhbmRfYXJndW1lbnRzID0gZmFsc2UpIHsKCQlyZXR1cm4gJHRo
aXMtPnRvZ2dsZV9jdXN0b21fdXJsX2Z1bmMoJGZ1bmMsICRhdHRzLCB0cnVlLCAkZXhwYW5k
X2FyZ3VtZW50cyk7Cgl9CgoJZnVuY3Rpb24gZW5jb2RlX3VybCAoJHRleHQpIHsKCQlyZXR1
cm4gdXJsZW5jb2RlKHRyaW0oZHVtYkRvd24odXJsZGVjb2RlKCR0ZXh0KSkpKTsKCX0KCglm
dW5jdGlvbiBkZWJ1ZyAoKSB7CgkJaWYgKCR0aGlzLT5wcmVmKCdkZWJ1ZycpKSB7CgkJCWds
b2JhbCAkcHJvZHVjdGlvbl9zdGF0dXM7CgkJCSRhID0gZnVuY19nZXRfYXJncygpOwoKCQkJ
aWYgKEB0eHBpbnRlcmZhY2UgPT0gJ2FkbWluJykKCQkJCWZvcmVhY2ggKCRhIGFzICR0aGlu
ZykKCQkJCQlkbXAoJHRoaW5nKTsKCgkJCWlmIChAdHhwaW50ZXJmYWNlID09ICdwdWJsaWMn
ICYmIGluX2FycmF5KCRwcm9kdWN0aW9uX3N0YXR1cywgYXJyYXkoJ2RlYnVnJywgJ3Rlc3Rp
bmcnKSkpCgkJCQlmb3JlYWNoICgkYSBhcyAkdGhpbmcpCgkJCQkJZWNobyBjb21tZW50KGlz
X3NjYWxhcigkdGhpbmcpID8gc3RydmFsKCR0aGluZykgOiB2YXJfZXhwb3J0KCR0aGluZywg
dHJ1ZSkpLG47CgkJfQoJfQp9CgpjbGFzcyBQZXJtYW5lbnRMaW5rc0J1aWxkVGFiVmlldyBl
eHRlbmRzIEdCUEFkbWluVGFiVmlldwp7Cgl2YXIgJHBlcm1pc3Npb25zID0gJzEsMic7Cglm
dW5jdGlvbiBwcmVsb2FkICgpIHsKCQlyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJHRoaXMs
ICdwb3N0X3NhdmVfcGVybWxpbmsnKSwgJHRoaXMtPnBhcmVudC0+ZXZlbnQsIGdicF9zYXZl
LCAxKTsKCQlyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJHRoaXMsICdwb3N0X3NhdmVfcGVy
bWxpbmsnKSwgJHRoaXMtPnBhcmVudC0+ZXZlbnQsIGdicF9wb3N0LCAxKTsKCX0KCglmdW5j
dGlvbiBtYWluICgpIHsKCQlnbG9iYWwgJHByZWZzOwoJCWV4dHJhY3QoZ3BzYShhcnJheSgn
c3RlcCcsIGdicF9pZCkpKTsKCgkJLy8gV2l0aCBoYXZlIGFuIElELCBlaXRoZXIgdGhlIHBl
cm1saW5rIGhhcyBqdXN0IGJlZW4gc2F2ZWQgb3IgdGhlIHVzZXIgd2FudHMgdG8gZWRpdCBp
dAoJCWlmICgkaWQpIHsKCQkJLy8gTmV3bHkgc2F2ZWQgb3IgYmVlbmluZyBlZGl0ZWQsIGVp
dGhlciB3YXkgd2UncmUgZWRpdGluZyBhIHBlcm1saW5rCgkJCSRzdGVwID0gZ2JwX3NhdmU7
CgoJCQkvLyBVc2UgdGhlIElEIHRvIGdyYWIgdGhlIHBlcm1saW5rIGRhdGEgKGNvbXBvbmVu
dHMgJiBzZXR0aW5ncykKCQkJJHBlcm1saW5rID0gJHRoaXMtPnBhcmVudC0+Z2V0X3Blcm1s
aW5rKCRpZCk7CgkJCSRjb21wb25lbnRzID0gJHRoaXMtPnBocEFycmF5VG9Kc0FycmF5KCdj
b21wb25lbnRzJywgJHBlcm1saW5rWydjb21wb25lbnRzJ10pOwoJCQkkc2V0dGluZ3MgPSAk
cGVybWxpbmtbJ3NldHRpbmdzJ107CgkJfSBlbHNlIHsKCQkJLy8gQ3JlYXRpbmcgYSBuZXcg
SUQgYW5kIHBlcm1saW5rLgoJCQkkc3RlcCA9IGdicF9wb3N0OwoJCQkkaWQgPSB1bmlxaWQo
JycpOwoKCQkJLy8gU2V0IHRoZSBkZWZhdWx0IHNldCBvZiBjb21wb25lbnRzIGRlcGVuZGlu
ZyBvbiB3aGV0aGVyIHRoZXJlIGlzIHBhcmVudCBwZXJtbGluawoJCQkkY29tcG9uZW50cyA9
ICR0aGlzLT5waHBBcnJheVRvSnNBcnJheSgnY29tcG9uZW50cycsIGFycmF5KAoJCQkJYXJy
YXkoJ3R5cGUnID0+ICdzZWN0aW9uJywgJ3ByZWZpeCcgPT4gJycsICdzdWZmaXgnID0+ICcn
LCAncmVnZXgnID0+ICcnLCAndGV4dCcgPT4gJycpLAoJCQkJYXJyYXkoJ3R5cGUnID0+ICdj
YXRlZ29yeScsICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywgJ3JlZ2V4JyA9PiAn
JywgJ3RleHQnID0+ICcnLCAnY2F0ZWdvcnknID0+ICcxJyksCgkJCQlhcnJheSgndHlwZScg
PT4gJ3RpdGxlJywgJ3ByZWZpeCcgPT4gJycsICdzdWZmaXgnID0+ICcnLCAncmVnZXgnID0+
ICcnLCAndGV4dCcgPT4gJycpLAoJCQkpKTsKCgkJCSRzZXR0aW5ncyA9IGFycmF5KAoJCQkJ
J3BsX25hbWUnID0+ICdVbnRpdGxlZCcsICdwbF9wcmVjZWRlbmNlJyA9PiAnMCcsCgkJCQkn
Y29uX3NlY3Rpb24nID0+ICcnLCAnY29uX2NhdGVnb3J5JyA9PiAnJywKCQkJCSdkZXNfc2Vj
dGlvbicgPT4gJycsICdkZXNfY2F0ZWdvcnknID0+ICcnLCAnZGVzX3BhZ2UnID0+ICcnLAoJ
CQkJJ2Rlc19wZXJtbGluaycgPT4gJycsICdkZXNfZmVlZCcgPT4gJycsICdkZXNfbG9jYXRp
b24nID0+ICcnLAoJCQkpOwoJCX0KCgkJLy8gRXh0cmFjdCBzZXR0aW5ncyAtIHRoaXMgd2ls
bCBiZSB1c2VmdWwgd2hlbiBjcmVhdGluZyB0aGUgdXNlciBpbnRlcmZhY2UKCQlleHRyYWN0
KCRzZXR0aW5ncyk7CgoJCS8vIFBIUCAmIEphdmFzY3JpcHQgY29uc3RhbnRzOwoJCSRzZXBh
cmF0b3IgPSBnYnBfc2VwYXJhdG9yOwoJCSRjb21wb25lbnRzX2RpdiA9ICdwZXJtbGlua19j
b21wb25lbnRzX3VpJzsKCQkkY29tcG9uZW50c19mb3JtID0gJ3Blcm1saW5rX2NvbXBvbmVu
dHMnOwoJCSRzZXR0aW5nc19mb3JtID0gJ3Blcm1saW5rX3NldHRpbmdzJzsKCQkkc2hvd19w
cmVmaXggPSAkdGhpcy0+cHJlZignc2hvd19wcmVmaXgnKTsKCQkkc2hvd19zdWZmaXggPSAk
dGhpcy0+cHJlZignc2hvd19zdWZmaXgnKTsKCgkJLy8gQSBsaXR0bGUgY3JlZGl0IGhlcmUg
YW5kIHRoZXJlIGRvZXNuJ3QgaHVydAoJCSRvdXRbXSA9ICI8IS0tIHskdGhpcy0+cGFyZW50
LT5wbHVnaW5fbmFtZX0gYnkgR3JhZW1lIFBvcnRlb3VzIC0tPiI7CgoJCS8vIFRoZSBKYXZh
c2NyaXB0CiRvdXRbXSA9IDw8PEhUTUwKCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0
IiBsYW5ndWFnZT0iamF2YXNjcmlwdCIgY2hhcnNldD0idXRmLTgiPgoJLy8gPCFbQ0RBVEFb
CgoJLy8gR2xvYmFsIHZhcmlhYmxlcwp2YXIgeyRjb21wb25lbnRzfS8vIGNvbXBvbmVudHMg
YXJyYXkgZm9yIGFsbCB0aGUgZGF0YQoKCXZhciBfY3VycmVudCA9IDA7IC8vIEluZGV4IG9m
IHRoZSBjb21wb25lbnRzIGFycmF5LCBvZiB0aGUgY3VycmVudGx5IHNlbGVjdGVkIGNvbXBv
bmVudAoJdmFyIGNfdmFscyA9IG5ldyBBcnJheSgndHlwZScsICdjdXN0b20nLCAnY2F0ZWdv
cnknLCAnbmFtZScsICdwcmVmaXgnLCAnc3VmZml4JywgJ3JlZ2V4JywgJ3RleHQnKTsKCgl3
aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKSB7CgkJY29tcG9uZW50X3JlZnJlc2hfYWxsKCk7
CgkJY29tcG9uZW50X3N3aXRjaChjb21wb25lbnQoX2N1cnJlbnQpKTsKCX0KCglmdW5jdGlv
biBjb21wb25lbnRfYWRkICgpIHsKCQkvLyBDcmVhdGUgZGF0YSBzZXQKCQl2YXIgZGF0YSA9
IG5ldyBBcnJheSgpOwoJCWZvciAoa2V5IGluIGNfdmFscykgewoJCQlkYXRhW2NfdmFsc1tr
ZXldXSA9ICcnOwoJCX0KCgkJLy8gQWRkIGRhdGEKCQljb21wb25lbnRzLnB1c2goZGF0YSk7
CgoJCS8vIFJlc2V0IGNvbXBvbmVudCB0eXBlIGxpc3QKCQlmb3JtKCd7JGNvbXBvbmVudHNf
Zm9ybX0nKS50eXBlLnZhbHVlID0gJyc7CgoJCS8vIFN3aXRjaCB0byB0aGUgbmV3IGNvbXBv
bmVudAoJCV9jdXJyZW50ID0gY29tcG9uZW50cy5sZW5ndGggLSAxOwoKCQkvLyBSZWZyZXNo
IFVJCgkJY29tcG9uZW50X3JlZnJlc2hfYWxsKCk7CgkJY29tcG9uZW50X3VwZGF0ZSgpOwoJ
fQoKCWZ1bmN0aW9uIGNvbXBvbmVudF9yZWZyZXNoIChlbGVtZW50KSB7CgkJdmFyIGMgPSBj
b21wb25lbnRzW2VsZW1lbnQuaWRdOwoKCQkvLyBDU1MKCQlpZiAoX2N1cnJlbnQgPT0gZWxl
bWVudC5pZCkKCQkJZWxlbWVudC5zdHlsZVsnYmFja2dyb3VuZENvbG9yJ10gPSAncmdiKDI0
OSwgMjA2LCA3MyknOwoJCWVsc2UKCQkJZWxlbWVudC5zdHlsZVsnYmFja2dyb3VuZENvbG9y
J10gPSAncmdiKDI1NSwgMjU0LCAyMTEpJzsKCQllbGVtZW50LnN0eWxlWydjb2xvciddID0g
J3JnYigwLCAwLCAwKSc7CgkJZWxlbWVudC5zdHlsZVsnZm9udEZhbWlseSddID0gJ0FyaWFs
JzsKCQllbGVtZW50LnN0eWxlWydmb250V2VpZ2h0J10gPSAnYm9sZCc7CgkJZWxlbWVudC5z
dHlsZVsndmVydGljYWxBbGlnbiddID0gJ21pZGRsZSc7CgkJZWxlbWVudC5zdHlsZVsndGV4
dEFsaWduJ10gPSAnY2VudGVyJzsKCQllbGVtZW50LnN0eWxlWydsaW5lSGVpZ2h0J10gPSAn
MS41ZW0nOwoJCWVsZW1lbnQuc3R5bGVbJ2hlaWdodCddID0gJzEuNWVtJzsKCQllbGVtZW50
LnN0eWxlWydwYWRkaW5nJ10gPSAnMCA1cHgnOwoJCWVsZW1lbnQuc3R5bGVbJ21hcmdpblJp
Z2h0J10gPSAnNXB4JzsKCQllbGVtZW50LnN0eWxlWydjc3NGbG9hdCddID0gJ2xlZnQnOwoJ
CWVsZW1lbnQuc3R5bGVbJ2Rpc3BsYXknXSA9ICdpbmxpbmUnOwoKCQkvLyBSZW1vdmUgYWxs
IGNoaWxkIG5vZGVzCgkJd2hpbGUgKGVsZW1lbnQuaGFzQ2hpbGROb2RlcygpKSB7IGVsZW1l
bnQucmVtb3ZlQ2hpbGQoZWxlbWVudC5maXJzdENoaWxkKTsgfQoKCQkvLyBDcmVhdGUgdGhl
IHZpc2libGUgc3RyaW5nIHJlcHJlc2VudGluZyB0aGlzIGNvbXBvbmVudAoJCXN3aXRjaCAo
Y1sndHlwZSddKSB7CgkJCWNhc2UgJycgOgoJCQkJc3RyaW5nID0gJy8nOwoJCQkJYnJlYWs7
CgkJCWNhc2UgJ3JlZ2V4JyA6CgkJCWNhc2UgJ3RleHQnIDoKCQkJCXN0cmluZyA9IGNbY1sn
dHlwZSddXSArICcgLyc7CgkJCQlicmVhazsKCQkJY2FzZSAnZGF0ZScgOgoJCQkJc3RyaW5n
ID0gY1sndHlwZSddICsgJyAvJzsKCQkJCWJyZWFrOwoJCQljYXNlICdjdXN0b20nIDoKCQkJ
CXN0cmluZyA9IGNbJ3ByZWZpeCddICsgJ2N1c3RvbV8nICsgY1snY3VzdG9tJ10gKyBjWydz
dWZmaXgnXSArICcgLyc7CgkJCQlicmVhazsKCQkJZGVmYXVsdCA6CgkJCQlzdHJpbmcgPSBj
WydwcmVmaXgnXSArIGNbJ3R5cGUnXSArIGNbJ3N1ZmZpeCddICsgJyAvJzsKCQkJYnJlYWs7
CgkJfQoKCQkvLyBTZXQgdGhlIHZpc2libGUgc3RyaW5nCgkJZWxlbWVudC5hcHBlbmRDaGls
ZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzdHJpbmcpKTsKCgkJcmV0dXJuIGVsZW1lbnQ7
Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3JlZnJlc2hfYWxsICgpIHsKCQkvLyBSZW1vdmUg
YWxsIGNoaWxkIG5vZGVzCgkJd2hpbGUgKHBlcm1saW5rX2RpdigpLmhhc0NoaWxkTm9kZXMo
KSkgeyBwZXJtbGlua19kaXYoKS5yZW1vdmVDaGlsZChwZXJtbGlua19kaXYoKS5maXJzdENo
aWxkKTsgfQoKCQlmb3IgKHZhciBpID0gMDsgaSA8IGNvbXBvbmVudHMubGVuZ3RoOyBpKysp
IHsKCQkJdmFyIGMgPSBjb21wb25lbnRzW2ldOwoKCQkJLy8gQ3JlYXRlIHRoZSBuZXcgY29t
cG9uZW50CgkJCXZhciBuZXdfY29tcG9uZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgn
ZGl2Jyk7CgoJCQkvLyBTZXQgdGhlIGlkIGludGVyZ2VyIGZvciB0aGlzIGNvbXBvbmVudAoJ
CQluZXdfY29tcG9uZW50LmlkID0gaTsKCgkJCS8vIEphdmFzY3JpcHQsIG9ubW91c2V1cCBz
ZXR0aW5nCgkJCW5ld19jb21wb25lbnQuc2V0QXR0cmlidXRlKCdvbm1vdXNlZG93bicsICdj
b21wb25lbnRfc3dpdGNoKHRoaXMpOycpOwoJCQluZXdfY29tcG9uZW50Lm9ubW91c2Vkb3du
ID0gZnVuY3Rpb24oKSB7IGNvbXBvbmVudF9zd2l0Y2godGhpcyk7IH07CgoJCQkvLyBSZWZy
ZXNoIHRoZSBsb29rIG9mIHRoZSBjb21wb25lbnQKCQkJbmV3X2NvbXBvbmVudCA9IGNvbXBv
bmVudF9yZWZyZXNoKG5ld19jb21wb25lbnQpOwoKCQkJLy8gQW5kIGFkZCB0aGUgbmV3IGNv
bXBvbmVudCB0byB0aGUgdWkKCQkJcGVybWxpbmtfZGl2KCkuYXBwZW5kQ2hpbGQobmV3X2Nv
bXBvbmVudCk7CgkJfQoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVudF9yZW1vdmUgKCkgewoJCWlm
IChjb21wb25lbnRzLmxlbmd0aCA+IDEpIHsKCQkJY29tcG9uZW50cy5zcGxpY2UoX2N1cnJl
bnQsIDEpOwoKCQkJaWYgKF9jdXJyZW50ID49IGNvbXBvbmVudHMubGVuZ3RoKQoJCQkJX2N1
cnJlbnQgPSBjb21wb25lbnRzLmxlbmd0aCAtIDE7CgoJCQljb21wb25lbnRfcmVmcmVzaF9h
bGwoKTsKCQl9Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3N3aXRjaCAoZWxlbWVudCkgewoJ
CS8vIFVwZGF0ZSBjdXJyZW50IGluZGV4CgkJX2N1cnJlbnQgPSBlbGVtZW50LmlkOwoKCQkv
LyBSZWZyZXNoIFVJCgkJY29tcG9uZW50X3JlZnJlc2hfYWxsKCk7CgoJCS8vIFNldCBmb3Jt
IGlucHV0IHZhbHVlcwoJCXZhciBjID0gY29tcG9uZW50c1tfY3VycmVudF07CgkJZm9yIChr
ZXkgaW4gY192YWxzKSB7CgkJCXZhciBrID0gY192YWxzW2tleV07CgkJCXZhciBlID0gZm9y
bSgneyRjb21wb25lbnRzX2Zvcm19JykuZWxlbWVudHMubmFtZWRJdGVtKGspOwoKCQkJaWYg
KGNba10pIGUudmFsdWUgPSBjW2tdOwoJCQllbHNlIGUudmFsdWUgPSAnJzsKCQl9CgoJCS8v
IEhpZGUgdW5uZWVkZWQgZm9ybSBpbnB1dHMKCQljb21wb25lbnRfdXBkYXRlKCk7Cgl9CgoJ
ZnVuY3Rpb24gY29tcG9uZW50X3VwZGF0ZSAoZWxlbWVudCkgewoJCS8vIFN0b3JlIHRoZSBk
YXRhIGluIGZvcm0gaW5wdXRzLCBhbmQgaGlkZSBhbGwgZm9ybSBpbnB1dHMKCQl2YXIgYyA9
IG5ldyBBcnJheSgpCgkJZm9yIChrZXkgaW4gY192YWxzKSB7CgkJCXZhciBrID0gY192YWxz
W2tleV07CgkJCXZhciBlID0gZm9ybSgneyRjb21wb25lbnRzX2Zvcm19JykuZWxlbWVudHMu
bmFtZWRJdGVtKGspOwoKCQkJY1trXSA9IGUudmFsdWU7CgoJCQllLnBhcmVudE5vZGUuc3R5
bGVbJ2Rpc3BsYXknXSA9ICdub25lJzsKCQl9CgoJCS8vIFJlc2hvdyB0eXBlIG9wdGlvbiBs
aXN0CgkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19JykudHlwZS5wYXJlbnROb2RlLnN0eWxl
WydkaXNwbGF5J10gPSAnJzsKCgkJLy8gU2V0IG90aGVyIGZvcm0gaW5wdXRzIHRvIHRoZSBj
b3JyZWN0IHZpc2liaWxpdHkgc3RhdGUsIGRlcGVuZGVudCBvbiB0eXBlCgkJc3dpdGNoIChj
Wyd0eXBlJ10pIHsKCQkJY2FzZSAnJyA6CgkJCWNhc2UgJ2RhdGUnIDogYnJlYWs7CgkJCWNh
c2UgJ3JlZ2V4JyA6CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5uYW1lLnBhcmVu
dE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQkJZm9ybSgneyRjb21wb25lbnRzX2Zv
cm19JykucmVnZXgucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCWJyZWFr
OwoJCQljYXNlICd0ZXh0JyA6CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5uYW1l
LnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQkJZm9ybSgneyRjb21wb25l
bnRzX2Zvcm19JykudGV4dC5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJ
YnJlYWs7CgkJCWNhc2UgJ2N1c3RvbScgOgoJCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19
JykuY3VzdG9tLnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQkJZGlzcGxh
eV9maXhlcygpOwoJCQlicmVhazsKCQkJY2FzZSAnY2F0ZWdvcnknIDoKCQkJCWZvcm0oJ3sk
Y29tcG9uZW50c19mb3JtfScpLmNhdGVnb3J5LnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXkn
XSA9ICcnOwoJCQkJZGlzcGxheV9maXhlcygpOwoJCQlicmVhazsKCQkJZGVmYXVsdCA6CgkJ
CQlkaXNwbGF5X2ZpeGVzKCk7CgkJCWJyZWFrOwoJCX0KCgkJLy8gU2F2ZSBkYXRhCgkJY29t
cG9uZW50c1tfY3VycmVudF0gPSBjOwoKCQkvLyBSZWZyZXNoIGNvbXBvbmVudCB0byByZWZs
ZWN0IG5ldyBkYXRhCgkJY29tcG9uZW50X3JlZnJlc2goY29tcG9uZW50KF9jdXJyZW50KSk7
CgoJCS8vIFJlLWZvY3VzIHRoZSBhY3RpdmUgZm9ybSBpbnB1dAoJCWlmIChlbGVtZW50KQoJ
CQllbGVtZW50LmZvY3VzKCk7Cgl9CgoJZnVuY3Rpb24gZGlzcGxheV9maXhlcyAoKSB7CgkJ
aWYgKCd7JHNob3dfcHJlZml4fScpCgkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLnBy
ZWZpeC5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQlpZiAoJ3skc2hvd19z
dWZmaXh9JykKCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19Jykuc3VmZml4LnBhcmVudE5v
ZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVudF9sZWZ0
ICgpIHsKCQlpZiAoY29tcG9uZW50cy5sZW5ndGggPiAxICYmIF9jdXJyZW50ID4gMCkgewoJ
CQkvLyBTdG9yZSBjdXJyZW50IGNvbXBvbmVudAoJCQl2YXIgYyA9IGNvbXBvbmVudHNbX2N1
cnJlbnRdOwoKCQkJLy8gUmVtb3ZlIGN1cnJlbnQgY29tcG9uZW50CgkJCWNvbXBvbmVudHMu
c3BsaWNlKF9jdXJyZW50LCAxKTsKCgkJCS8vIFVwZGF0ZSBjdXJyZW50IGluZGV4CgkJCV9j
dXJyZW50LS07CgoJCQkvLyBSZS1hZGQgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50
cy5zcGxpY2UoX2N1cnJlbnQsIDAsIGMpOwoKCQkJLy8gUmVmcmVzaCBVSQoJCQljb21wb25l
bnRfcmVmcmVzaF9hbGwoKTsKCQl9Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3JpZ2h0ICgp
IHsKCQlpZiAoX2N1cnJlbnQgPCBjb21wb25lbnRzLmxlbmd0aCAtIDEpIHsKCQkJLy8gU3Rv
cmUgY3VycmVudCBjb21wb25lbnQKCQkJdmFyIGMgPSBjb21wb25lbnRzW19jdXJyZW50XTsK
CgkJCS8vIFJlbW92ZSBjdXJyZW50IGNvbXBvbmVudAoJCQljb21wb25lbnRzLnNwbGljZShf
Y3VycmVudCwgMSk7CgoJCQkvLyBVcGRhdGUgY3VycmVudCBpbmRleAoJCQlfY3VycmVudCsr
OwoKCQkJLy8gUmUtYWRkIGN1cnJlbnQgY29tcG9uZW50CgkJCWNvbXBvbmVudHMuc3BsaWNl
KF9jdXJyZW50LCAwLCBjKTsKCgkJCS8vIFJlZnJlc2ggVUkKCQkJY29tcG9uZW50X3JlZnJl
c2hfYWxsKCk7CgkJfQoJfQoKCWZ1bmN0aW9uIHNhdmUgKGZvcm0pIHsKCQl2YXIgYyA9ICcn
OyB2YXIgaXNfcGVybWxpbmsgPSBmYWxzZTsgdmFyIGhhc19wYWdlX29yX3NlYXJjaCA9IGZh
bHNlOwoJCWZvciAodmFyIGkgPSAwOyBpIDwgY29tcG9uZW50cy5sZW5ndGg7IGkrKykgewoJ
CQlpZiAoY29tcG9uZW50c1tpXVsndHlwZSddID09ICd0aXRsZScgfHwgY29tcG9uZW50c1tp
XVsndHlwZSddID09ICdpZCcpCgkJCQlpc19wZXJtbGluayA9IHRydWU7CgkJCWlmIChjb21w
b25lbnRzW2ldWyd0eXBlJ10gPT0gJ3BhZ2UnIHx8IGNvbXBvbmVudHNbaV1bJ3R5cGUnXSA9
PSAnZmVlZCcgfHwgY29tcG9uZW50c1tpXVsndHlwZSddID09ICdzZWFyY2gnKQoJCQkJaGFz
X3BhZ2VfZmVlZF9zZWFyY2ggPSB0cnVlOwoJCQljID0gYyArIGpzQXJyYXlUb1BocEFycmF5
KGNvbXBvbmVudHNbaV0pICsgJ3skc2VwYXJhdG9yfSc7CgkJfQoKCQlpZiAoaXNfcGVybWxp
bmsgJiYgaGFzX3BhZ2Vfb3Jfc2VhcmNoKQoJCQlhbGVydCgiWW91ciBwZXJtYW5lbnQgbGlu
ayBjYW4ndCBjb250YWluIGVpdGhlciBhICdwYWdlJywgJ2ZlZWQnIG9yIGEgJ3NlYXJjaCcg
Y29tcG9uZW50IHdpdGggJ3RpdGxlJyBvciAnaWQnIGNvbXBvbmVudHMuIik7CgoJCWVsc2Ug
aWYgKGlzX3Blcm1saW5rICYmIChmb3JtLnBsX25hbWUudmFsdWUgPT0gJycgfHwgZm9ybS5w
bF9uYW1lLnZhbHVlID09ICdVbnRpdGxlZCcpKSB7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRC
eUlkKCdzZXR0aW5ncycpLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJZm9ybS5wbF9uYW1l
LnN0eWxlWydib3JkZXInXSA9ICczcHggc29saWQgcmdiKDIyMSwgMCwgMCknOwoJCQlmb3Jt
LnBsX3ByZWNlZGVuY2Uuc3R5bGVbJ2JvcmRlciddID0gJyc7CgkJCWFsZXJ0KCdQbGVhc2Ug
ZW50ZXIgYSBuYW1lIGZvciB0aGlzIHBlcm1hbmVudCBsaW5rIHJ1bGUuJyk7CgkJfSBlbHNl
IGlmIChmb3JtLnBsX3ByZWNlZGVuY2UudmFsdWUgPT0gJycpIHsKCQkJZG9jdW1lbnQuZ2V0
RWxlbWVudEJ5SWQoJ3NldHRpbmdzJykuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQlmb3Jt
LnBsX3ByZWNlZGVuY2Uuc3R5bGVbJ2JvcmRlciddID0gJzNweCBzb2xpZCByZ2IoMjIxLCAw
LCAwKSc7CgkJCWZvcm0ucGxfbmFtZS5zdHlsZVsnYm9yZGVyJ10gPSAnJzsKCQkJYWxlcnQo
J1BsZWFzZSBlbnRlciBhIHByZWNlZGVuY2UgdmFsdWUgZm9yIHRoaXMgcGVybWFuZW50IGxp
bmsgcnVsZS4nKTsKCQl9IGVsc2UgewoJCQlmb3JtLmNvbXBvbmVudHMudmFsdWUgPSBjOwoJ
CQlpZiAocGVybWxpbmtfZGl2KCkudGV4dENvbnRlbnQpCgkJCQlmb3JtLnBsX3ByZXZpZXcu
dmFsdWUgPSBwZXJtbGlua19kaXYoKS50ZXh0Q29udGVudDsKCQkJZWxzZSBpZiAocGVybWxp
bmtfZGl2KCkuaW5uZXJUZXh0KQoJCQkJZm9ybS5wbF9wcmV2aWV3LnZhbHVlID0gcGVybWxp
bmtfZGl2KCkuaW5uZXJUZXh0OwoJCQlyZXR1cm4gdHJ1ZTsKCQl9CgoJCXJldHVybiBmYWxz
ZTsKCX0KCglmdW5jdGlvbiBqc0FycmF5VG9QaHBBcnJheSAoYXJyYXkpIHsKCQkvLyBodHRw
Oi8vZmFybS50dWNvd3MuY29tL2Jsb2cvX2FyY2hpdmVzLzIwMDUvNS8zMC84OTU5MDEuaHRt
bAoJCXZhciBhcnJheV9waHAgPSAiIjsKCQl2YXIgdG90YWwgPSAwOwoJCWZvciAodmFyIGtl
eSBpbiBhcnJheSkgewoJCQkrKyB0b3RhbDsKCQkJYXJyYXlfcGhwID0gYXJyYXlfcGhwICsg
InM6IiArCgkJCQlTdHJpbmcoa2V5KS5sZW5ndGggKyAiOlwiIiArIFN0cmluZyhrZXkpICsg
IlwiO3M6IiArCgkJCQlTdHJpbmcoYXJyYXlba2V5XSkubGVuZ3RoICsgIjpcIiIgKyBTdHJp
bmcoYXJyYXlba2V5XSkgKyAiXCI7IjsKCQl9CgkJYXJyYXlfcGhwID0gImE6IiArIHRvdGFs
ICsgIjp7IiArIGFycmF5X3BocCArICJ9IjsKCQlyZXR1cm4gYXJyYXlfcGhwOwoJfQoKCWZ1
bmN0aW9uIHBlcm1saW5rX2RpdiAoKSB7CgkJLy8gUmV0dXJuIHRoZSBwZXJtbGluayBydWxl
IGVsZW1lbnQKCQlyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3skY29tcG9uZW50
c19kaXZ9Jyk7Cgl9CgoJZnVuY3Rpb24gZm9ybSAobmFtZSkgewoJCWlmICghbmFtZSkKCQkJ
bmFtZSA9ICd7JGNvbXBvbmVudHNfZm9ybX0nCgkJLy8gUmV0dXJuIHRoZSBmb3JtIGVsZW1l
bnQgd2l0aCBuYW1lCgkJcmV0dXJuIGRvY3VtZW50LmZvcm1zLm5hbWVkSXRlbShuYW1lKTsK
CX0KCglmdW5jdGlvbiBjb21wb25lbnQgKGluZGV4KSB7CgkJLy8gUmV0dXJuIGNvbXBvbmVu
dCB3aXRoIGluZGV4CgkJcmV0dXJuIHBlcm1saW5rX2RpdigpLmNoaWxkTm9kZXNbaW5kZXhd
OwoJfQoKCS8vIF1dPgoJPC9zY3JpcHQ+CkhUTUw7CgoJCS8vIC0tLSBSdWxlIC0tLSAvLwoK
CQkkb3V0W10gPSBoZWQoJ1Blcm1hbmVudCBsaW5rIHJ1bGUnLCAyKTsKCQkkb3V0W10gPSAn
PGRpdiBpZD0iJy4kY29tcG9uZW50c19kaXYuJyIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6
IHJnYigyMzAsIDIzMCwgMjMwKTsgd2lkdGg6IGF1dG87IGhlaWdodDogMS41ZW07IG1hcmdp
bjogMTBweCAwOyBwYWRkaW5nOiA1cHg7Ij48L2Rpdj4nOwoJCSRvdXRbXSA9IGdyYWYKCQkJ
KAoJCQkkdGhpcy0+ZklucHV0KCdidXR0b24nLCAnY29tcG9uZW50X2FkZCcsICdBZGQgY29t
cG9uZW50JywgYXJyYXkoJ2NsaWNrJyA9PiAnY29tcG9uZW50X2FkZCgpOycpKS5uLgoJCQkk
dGhpcy0+ZklucHV0KCdidXR0b24nLCAnY29tcG9uZW50X3JlbW92ZScsICdSZW1vdmUgY29t
cG9uZW50JywgYXJyYXkoJ2NsaWNrJyA9PiAnY29tcG9uZW50X3JlbW92ZSgpOycpKS5uLgoJ
CQkkdGhpcy0+ZklucHV0KCdidXR0b24nLCAnY29tcG9uZW50X2xlZnQnLCAnTW92ZSBsZWZ0
JywgYXJyYXkoJ2NsaWNrJyA9PiAnY29tcG9uZW50X2xlZnQoKTsnKSkubi4KCQkJJHRoaXMt
PmZJbnB1dCgnYnV0dG9uJywgJ2NvbXBvbmVudF9yaWdodCcsICdNb3ZlIHJpZ2h0JywgYXJy
YXkoJ2NsaWNrJyA9PiAnY29tcG9uZW50X3JpZ2h0KCk7JykpCgkJCSk7CgoJCS8vIC0tLSBD
b21wb25lbnQgZm9ybSAtLS0gLy8KCgkJJG91dFtdID0gJzxmb3JtIGFjdGlvbj0iaW5kZXgu
cGhwIiBuYW1lPSInLiRjb21wb25lbnRzX2Zvcm0uJyIgb25zdWJtaXQ9InJldHVybiBmYWxz
ZTsiPic7CgoJCS8vIC0tLSBDb21wb25lbnQgdHlwZSAtLS0gLy8KCgkJJGNvbXBvbmVudF90
eXBlcyA9IGFycmF5ICgKCQkJJ3NlY3Rpb24nID0+ICdTZWN0aW9uJywgJ2NhdGVnb3J5JyA9
PiAnQ2F0ZWdvcnknLAoJCQkndGl0bGUnID0+ICdUaXRsZScsICdpZCcgPT4gJ0lEJywKCQkJ
J2RhdGUnID0+ICdEYXRlICh5eXl5L21tL2RkKScsICd5ZWFyJyA9PiAnWWVhcicsCgkJCSdt
b250aCcgPT4gJ01vbnRoJywgJ2RheScgPT4gJ0RheScsCgkJCSdhdXRob3InID0+ICdBdXRo
b3IgKFJlYWwgbmFtZSknLCAnbG9naW4nID0+ICdBdXRob3IgKExvZ2luKScsCgkJCSdjdXN0
b20nID0+ICdDdXN0b20gRmllbGQnLCAncGFnZScgPT4gJ1BhZ2UgTnVtYmVyJywKCQkJJ2Zl
ZWQnID0+ICdGZWVkJywgJ3NlYXJjaCcgPT4gJ1NlYXJjaCByZXF1ZXN0JywKCQkJJ3RleHQn
ID0+ICdQbGFpbiBUZXh0JywgJ3JlZ2V4JyA9PiAnUmVndWxhciBFeHByZXNzaW9uJwoJCSk7
CgkJJG91dFtdID0gZ3JhZigkdGhpcy0+ZlNlbGVjdCgndHlwZScsICRjb21wb25lbnRfdHlw
ZXMsICcnLCAxLCAnQ29tcG9uZW50IHR5cGUnLCAnIG9uY2hhbmdlPSJjb21wb25lbnRfdXBk
YXRlKCk7IicpKTsKCgkJLy8gLS0tIENvbXBvbmVudCBkYXRhIC0tLSAvLwoKCQkvLyBHcmFi
IHRoZSBjdXN0b20gZmllbGQgdGl0bGVzCgkJJGN1c3RvbV9maWVsZHMgPSBhcnJheSgpOwoJ
CWZvciAoJGkgPSAxOyAkaSA8PSAxMDsgJGkrKykgewoJCQlpZiAoJHYgPSAkcHJlZnNbImN1
c3RvbV97JGl9X3NldCJdKQoJCQkJJGN1c3RvbV9maWVsZHNbJGldID0gJHY7CgkJfQoKCQkk
b3V0W10gPSBncmFmICgKCQkJJHRoaXMtPmZTZWxlY3QoJ2N1c3RvbScsICRjdXN0b21fZmll
bGRzLCAnJywgMCwgJ0N1c3RvbScsICcgb25jaGFuZ2U9ImNvbXBvbmVudF91cGRhdGUodGhp
cyk7IicpLm4uCgkJCSR0aGlzLT5mU2VsZWN0KCdjYXRlZ29yeScsIGFycmF5KCcxJyA9PiAn
Q2F0ZWdvcnkgMScsICcyJyA9PiAnQ2F0ZWdvcnkgMicpLCAnJywgMCwgJ1ByaW1hcnkgQ2F0
ZWdvcnknLCAnIG9uY2hhbmdlPSJjb21wb25lbnRfdXBkYXRlKHRoaXMpOyInKS5uLgoJCQkk
dGhpcy0+ZklucHV0KCd0ZXh0JywgJ25hbWUnLCAnJywgYXJyYXkoJ2tleXVwJyA9PiAnY29t
cG9uZW50X3VwZGF0ZSh0aGlzKTsnKSwgJ05hbWUnKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0
ZXh0JywgJ3ByZWZpeCcsICcnLCBhcnJheSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRl
KHRoaXMpOycpLCAnUHJlZml4Jykubi4KCQkJJHRoaXMtPmZJbnB1dCgndGV4dCcsICdyZWdl
eCcsICcnLCBhcnJheSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRlKHRoaXMpOycpLCAn
UmVndWxhciBFeHByZXNzaW9uJykubi4KCQkJJHRoaXMtPmZJbnB1dCgndGV4dCcsICdzdWZm
aXgnLCAnJywgYXJyYXkoJ2tleXVwJyA9PiAnY29tcG9uZW50X3VwZGF0ZSh0aGlzKTsnKSwg
J1N1ZmZpeCcpLm4uCgkJCSR0aGlzLT5mSW5wdXQoJ3RleHQnLCAndGV4dCcsICcnLCBhcnJh
eSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRlKHRoaXMpOycpLCAnVGV4dCcpCgkJKTsK
CQkkaHIgPSAnPGhyIHN0eWxlPSJib3JkZXI6IDA7IGhlaWdodDogMXB4OyBiYWNrZ3JvdW5k
LWNvbG9yOiByZ2IoMjAwLCAyMDAsIDIwMCk7IGNvbG9yOiByZ2IoMjAwLCAyMDAsIDIwMCk7
IG1hcmdpbi1ib3R0b206IDEwcHg7IiAvPic7CgkJJG91dFtdID0gJGhyOwoJCSRvdXRbXSA9
ICc8L2Zvcm0+JzsKCgkJLy8gLS0tIFNldHRpbmdzIGZvcm0gLS0tIC8vCgoJCSRvdXRbXSA9
ICc8Zm9ybSBhY3Rpb249ImluZGV4LnBocCIgbWV0aG9kPSJwb3N0IiBuYW1lPSInLiRzZXR0
aW5nc19mb3JtLiciIG9uc3VibWl0PSJyZXR1cm4gc2F2ZSh0aGlzKTsiPic7CgoJCS8vIC0t
LSBTZXR0aW5ncyAtLS0gLy8KCgkJJG91dFtdID0gaGVkKCc8YSBocmVmPSIjIiBvbmNsaWNr
PSJ0b2dnbGVEaXNwbGF5KFwnc2V0dGluZ3NcJyk7IHJldHVybiBmYWxzZTsiPlNldHRpbmdz
PC9hPicsIDIpOwoJCSRvdXRbXSA9ICc8ZGl2IGlkPSJzZXR0aW5ncyI+JzsKCQkkb3V0W10g
PSBncmFmKCR0aGlzLT5mSW5wdXQoJ3RleHQnLCAncGxfbmFtZScsICRwbF9uYW1lLCBOVUxM
LCAnTmFtZScpKTsKCQkkb3V0W10gPSBncmFmKCR0aGlzLT5mSW5wdXQoJ3RleHQnLCAncGxf
cHJlY2VkZW5jZScsICRwbF9wcmVjZWRlbmNlLCBOVUxMLCAnUHJlY2VkZW5jZScpKTsKCQkk
b3V0W10gPSAnPC9kaXY+JzsKCQkkb3V0W10gPSAkaHI7CgoJCS8vIC0tLSBDb25kaXRpb25z
IC0tLSAvLwoKCQkkb3V0W10gPSBoZWQoJzxhIGhyZWY9IiMiIG9uY2xpY2s9InRvZ2dsZURp
c3BsYXkoXCdjb25kaXRpb25zXCcpOyByZXR1cm4gZmFsc2U7Ij5Db25kaXRpb25zPC9hPics
IDIpOwoJCSRvdXRbXSA9ICc8ZGl2IGlkPSJjb25kaXRpb25zIiBzdHlsZT0iZGlzcGxheTpu
b25lIj4nOwoJCSRvdXRbXSA9IGdyYWYoc3Ryb25nKCdPbmx5IHVzZSB0aGlzIHBlcm1hbmVu
dCBsaW5rIGlmIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcHBseS4uLicpKTsKCgkJLy8g
R2VuZXJhdGUgYSBzZWN0aW9ucyBhcnJheSAobmFtZT0+dGl0bGUpCgkJJHNlY3Rpb25zID0g
YXJyYXkoKTsKCQkkcnMgPSBzYWZlX3Jvd3MoJ25hbWUsIHRpdGxlJywgJ3R4cF9zZWN0aW9u
JywgIm5hbWUgIT0gJ2RlZmF1bHQnIG9yZGVyIGJ5IG5hbWUiKTsKCQlmb3JlYWNoICgkcnMg
YXMgJHNlYykgewoJCQkkc2VjdGlvbnNbJHNlY1snbmFtZSddXSA9ICRzZWNbJ3RpdGxlJ107
CgkJfQoKCQkvLyBHZW5lcmF0ZSBhIGNhdGVnb3JpZXMgYXJyYXkgKG5hbWU9PnRpdGxlKQoJ
CSRjYXRlZ29yaWVzID0gYXJyYXkoKTsKCQkkcnMgPSBzYWZlX3Jvd3MoJ25hbWUsIHRpdGxl
JywgJ3R4cF9jYXRlZ29yeScsICJ0eXBlID0gJ2FydGljbGUnIGFuZCBuYW1lICE9ICdyb290
JyBvcmRlciBieSBuYW1lIik7CgkJZm9yZWFjaCAoJHJzIGFzICRzZWMpIHsKCQkJJGNhdGVn
b3JpZXNbJHNlY1snbmFtZSddXSA9ICRzZWNbJ3RpdGxlJ107CgkJfQoKCQkkb3V0W10gPSBn
cmFmICgKCQkJJHRoaXMtPmZTZWxlY3QoJ2Nvbl9zZWN0aW9uJywgJHNlY3Rpb25zLCAkY29u
X3NlY3Rpb24sIDEsICdXaXRoaW4gc2VjdGlvbicpLm4uCgkJCSR0aGlzLT5mU2VsZWN0KCdj
b25fY2F0ZWdvcnknLCAkY2F0ZWdvcmllcywgJGNvbl9jYXRlZ29yeSwgMSwgJ1dpdGhpbiBj
YXRlZ29yeScpCgkJKTsKCQkkb3V0W10gPSAnPC9kaXY+JzsKCQkkb3V0W10gPSAkaHI7CgoJ
CS8vIC0tLSBEZXN0aW5hdGlvbiAtLS0gLy8KCgkJJG91dFtdID0gaGVkKCc8YSBocmVmPSIj
IiBvbmNsaWNrPSJ0b2dnbGVEaXNwbGF5KFwnZGVzdGluYXRpb25cJyk7IHJldHVybiBmYWxz
ZTsiPkRlc3RpbmF0aW9uPC9hPicsIDIpOwoJCSRvdXRbXSA9ICc8ZGl2IGlkPSJkZXN0aW5h
dGlvbiIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+JzsKCQkkb3V0W10gPSBncmFmKHN0cm9uZygn
Rm9yd2FyZCB0aGlzIHBlcm1hbmVudCBsaW5rIHRvLi4uJykpOwoJCSRvdXRbXSA9IGdyYWYg
KAoJCQkkdGhpcy0+ZlNlbGVjdCgnZGVzX3NlY3Rpb24nLCAkc2VjdGlvbnMsICRkZXNfc2Vj
dGlvbiwgMSwgJ1NlY3Rpb24nKS5uLgoJCQkkdGhpcy0+ZlNlbGVjdCgnZGVzX2NhdGVnb3J5
JywgJGNhdGVnb3JpZXMsICRkZXNfY2F0ZWdvcnksIDEsICdDYXRlZ29yeScpCgkJKTsKCQkk
b3V0W10gPSBncmFmKCR0aGlzLT5mU2VsZWN0KCdkZXNfcGFnZScsIHNhZmVfY29sdW1uKCdu
YW1lJywgJ3R4cF9wYWdlJywgIjEiKSwgQCRkZXNfcGFnZSwgMSwgJ1BhZ2UnKSk7CgkJJG91
dFtdID0gZ3JhZigkdGhpcy0+ZkJveGVzKCdkZXNfZmVlZCcsIGFycmF5KCdyc3MnLCAnYXRv
bScsICcnKSwgJGRlc19mZWVkLCBOVUxMLCBhcnJheSgnUlNTIGZlZWQnLCAnQXRvbSBmZWVk
JywgJ05laXRoZXInKSkpOwoJCSRvdXRbXSA9IGdyYWYoc3Ryb25nKCdSZWRpcmVjdCB0aGlz
IHBlcm1hbmVudCBsaW5rIHRvLi4uJykpOwoJCS8vIEdlbmVyYXRlIGEgcGVybWxpbmtzIGFy
cmF5CgkJJHBlcm1saW5rcyA9ICR0aGlzLT5wYXJlbnQtPmdldF9hbGxfcGVybWxpbmtzKDEp
OwoJCWZvcmVhY2ggKCRwZXJtbGlua3MgYXMgJGtleSA9PiAkcGwpIHsKCQkJJHBlcm1saW5r
c1ska2V5XSA9ICRwbFsnc2V0dGluZ3MnXVsncGxfbmFtZSddOwoJCX0KCQl1bnNldCgkcGVy
bWxpbmtzWyRpZF0pOwoJCSRvdXRbXSA9IGdyYWYoJHRoaXMtPmZTZWxlY3QoJ2Rlc19wZXJt
bGluaycsICRwZXJtbGlua3MsIEAkZGVzX3Blcm1saW5rLCAxLCAnUGVybWFuZW50IGxpbmsn
KSk7CgkJJG91dFtdID0gZ3JhZigkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ2Rlc19sb2NhdGlv
bicsICRkZXNfbG9jYXRpb24sIE5VTEwsICdIVFRQIGxvY2F0aW9uJykpOwoJCSRvdXRbXSA9
ICc8L2Rpdj4nOwoJCSRvdXRbXSA9ICRocjsKCgkJLy8gU2F2ZSBidXR0b24KCQkkb3V0W10g
PSBmSW5wdXQoJ3N1Ym1pdCcsICcnLCAnU2F2ZSBwZXJtYW5lbnQgbGluaycpOwoKCQkvLyBF
eHRyYSBmb3JtIGlucHV0cyB3aGljaCBnZXQgZmlsbGVkIG9uIHN1Ym1pdAoJCSRvdXRbXSA9
IGhJbnB1dCgnY29tcG9uZW50cycsICcnKTsKCQkkb3V0W10gPSBoSW5wdXQoJ3BsX3ByZXZp
ZXcnLCAnJyk7CgkJLy8gRXZlbnQgYW5kIHRhYiBmb3JtIGlucHV0cwoJCSRvdXRbXSA9ICR0
aGlzLT5mb3JtX2lucHV0cygpOwoJCS8vIFN0ZXAgYW5kIElEIGZvcm0gaW5wdXRzCgkJJG91
dFtdID0gc0lucHV0KCRzdGVwKTsKCQkkb3V0W10gPSBoSW5wdXQoZ2JwX2lkLCAkaWQpOwoK
CQkkb3V0W10gPSAnPC9mb3JtPic7CgoJCS8vIExldHMgZWNobyBldmVyeXRoaW5nIG91dC4g
WWFoIQoJCWVjaG8gam9pbihuLCAkb3V0KTsKCX0KCglmdW5jdGlvbiBmTGFiZWwgKCRsYWJl
bCwgJGNvbnRlbnRzID0gJycsICRsYWJlbF9yaWdodCA9IGZhbHNlKSB7CgkJLy8gPGxhYmVs
PiB0aGUgY29udGVudHMgd2l0aCB0aGUgbmFtZSAkbGFibGUKCQkkY29udGVudHMgPSAoJGxh
YmVsX3JpZ2h0KQoJCT8gJGNvbnRlbnRzLiRsYWJlbAoJCTogJGxhYmVsLigkY29udGVudHMg
PyAnOiAnLiRjb250ZW50cyA6ICcnKTsKCQlyZXR1cm4gdGFnKCRjb250ZW50cywgJ2xhYmVs
Jyk7Cgl9CgoJZnVuY3Rpb24gZkJveGVzICgkbmFtZSA9ICcnLCAkdmFsdWUgPSAnJywgJGNo
ZWNrZWRfdmFsdWUgPSAnJywgJG9uID0gYXJyYXkoKSwgJGxhYmVsID0gJycpIHsKCQkkb3V0
ID0gYXJyYXkoKTsKCQlpZiAoaXNfYXJyYXkoJHZhbHVlKSkgewoJCQkkaSA9IDA7CgkJCWZv
cmVhY2ggKCR2YWx1ZSBhcyAkdmFsKSB7CgkJCQkkbyA9ICc8aW5wdXQgdHlwZT0icmFkaW8i
IG5hbWU9IicuJG5hbWUuJyIgdmFsdWU9IicuJHZhbC4nIic7CgkJCQkkbyAuPSAoJGNoZWNr
ZWRfdmFsdWUgPT0gJHZhbCkgPyAnIGNoZWNrZWQ9ImNoZWNrZWQiJyA6ICcnOwoJCQkJaWYg
KGlzX2FycmF5KCRvbikpIGZvcmVhY2goJG9uIGFzICRrID0+ICR2KQoJCQkJCSRvIC49ICgk
b24pID8gJyBvbicuJGsuJz0iJy4kdi4nIicgOiAnJzsKCQkJCSRvIC49ICcgLz4nOwoJCQkJ
JG91dFtdID0gJHRoaXMtPmZMYWJlbCgkbGFiZWxbJGkrK10sICRvLCB0cnVlKTsKCQkJfQoJ
CX0gZWxzZSB7CgkJCSRvID0gJzxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iJy4kbmFt
ZS4nIiB2YWx1ZT0iJy4kdmFsdWUuJyInOwoJCQkkbyAuPSAoJGNoZWNrZWRfdmFsdWUgPT0g
JHZhbHVlKSA/ICcgY2hlY2tlZD0iY2hlY2tlZCInIDogJyc7CgkJCWlmIChpc19hcnJheSgk
b24pKSBmb3JlYWNoKCRvbiBhcyAkayA9PiAkdikKCQkJCSRvIC49ICgkb24pID8gJyBvbicu
JGsuJz0iJy4kdi4nIicgOiAnJzsKCQkJJG8gLj0gJyAvPic7CgkJCSRvdXRbXSA9ICR0aGlz
LT5mTGFiZWwoJGxhYmVsLCAkbywgdHJ1ZSk7CgkJfQoKCQlyZXR1cm4gam9pbignJywgJG91
dCk7Cgl9CgoJZnVuY3Rpb24gZklucHV0ICgkdHlwZSwgJG5hbWUgPSAnJywgJHZhbHVlID0g
JycsICRvbiA9IGFycmF5KCksICRsYWJlbCA9ICcnKSB7CgkJaWYgKCR0eXBlID09ICdyYWRp
bycgfHwgJHR5cGUgPT0gJ2NoZWNrYm94JykKCQkJcmV0dXJuICR0aGlzLT5mQm94ZXMoJG5h
bWUsICR2YWx1ZSwgJG9uLCAkbGFiZWwpOwoKCQkkbyA9ICc8aW5wdXQgdHlwZT0iJy4kdHlw
ZS4nIiBuYW1lPSInLiRuYW1lLiciIHZhbHVlPSInLiR2YWx1ZS4nIic7CgkJaWYgKGlzX2Fy
cmF5KCRvbikpIGZvcmVhY2goJG9uIGFzICRrID0+ICR2KQoJCQkkbyAuPSAoJG9uKSA/ICcg
b24nLiRrLic9IicuJHYuJyInIDogJyc7CgkJJG8gLj0gJyAvPic7CgkJcmV0dXJuICgkbGFi
ZWwpID8gJHRoaXMtPmZMYWJlbCgkbGFiZWwsICRvKSA6ICRvOwoJfQoKCWZ1bmN0aW9uIGZT
ZWxlY3QgKCRuYW1lID0gJycsICRhcnJheSA9ICcnLCAkdmFsdWUgPSAnJywgJGJsYW5rX2Zp
cnN0ID0gJycsICRsYWJlbCA9ICcnLCAkb25fc3VibWl0ID0gJycpIHsKCQkkbyA9IHNlbGVj
dElucHV0KCRuYW1lLCAkYXJyYXksICR2YWx1ZSwgJGJsYW5rX2ZpcnN0LCAkb25fc3VibWl0
KTsKCQlyZXR1cm4gKCRsYWJlbCA/ICR0aGlzLT5mTGFiZWwoJGxhYmVsLCAkbykgOiAkbyk7
Cgl9CgoJZnVuY3Rpb24gcG9zdF9zYXZlX3Blcm1saW5rICgpIHsKCQkvLyBUaGUgZnVuY3Rp
b24gcG9zdHMgb3Igc2F2ZXMgYSBwZXJtYW5lbnQgbGluayB0byB0eHBfcHJlZnMKCgkJZXh0
cmFjdChncHNhKGFycmF5KCdzdGVwJywgZ2JwX2lkKSkpOwoKCQkvLyBHcmFiIHRoZSB1c2Vy
IGRlZmluZWQgc2V0dGluZ3MgZnJvbSB0aGUgZm9ybSBQT1NUIGRhdGEKCQkkc2V0dGluZ3Mg
PSBncHNhKGFycmF5KAoJCQkncGxfbmFtZScsICdwbF9wcmVjZWRlbmNlJywgJ3BsX3ByZXZp
ZXcnLAoJCQknY29uX3NlY3Rpb24nLCAnY29uX2NhdGVnb3J5JywKCQkJJ2Rlc19zZWN0aW9u
JywgJ2Rlc19jYXRlZ29yeScsICdkZXNfcGFnZScsCgkJCSdkZXNfcGVybWxpbmsnLCAnZGVz
X2ZlZWQnLCAnZGVzX2xvY2F0aW9uJywKCQkpKTsKCgkJLy8gUmVtb3ZlIHNwYWNlcyBmcm9t
IHRoZSBwZXJtYW5lbnQgbGluayBwcmV2aWV3CgkJJHNldHRpbmdzWydwbF9wcmV2aWV3J10g
PSBwcmVnX3JlcGxhY2UoJyVccysvXHMqJScsICcvJywgJHNldHRpbmdzWydwbF9wcmV2aWV3
J10pOwoKCQkvLyBFeHBsb2RlIHRoZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIHNlcmlhbGl6ZSBj
b21wb25lbnRzIC0gdGhpcyB3YXMgbWFkZSBieSBKYXZhU2NyaXB0LgoJCSRzZXJpYWxpemVf
Y29tcG9uZW50cyA9IGV4cGxvZGUoZ2JwX3NlcGFyYXRvciwgcnRyaW0oZ3BzKCdjb21wb25l
bnRzJyksIGdicF9zZXBhcmF0b3IpKTsKCgkJLy8gVW5zZXJpYWxpemUgdGhlIGNvbXBvbmVu
dHMKCQkkY29tcG9uZW50cyA9IGFycmF5KCk7CgkJZm9yZWFjaCAoJHNlcmlhbGl6ZV9jb21w
b25lbnRzIGFzICRjKQoJCQkkY29tcG9uZW50c1tdID0gdW5zZXJpYWxpemUoc3RyaXBzbGFz
aGVzKCRjKSk7CgoJCS8vIENvbXBsZXRlIHRoZSBwZXJtYW5lbnQgbGluayBhcnJheSAtIHRo
aXMgaXMgZXhhY3RseSB3aGF0IG5lZWRzIHRvIGJlIHN0b3JlZCBpbiB0aGUgZGIKCQkkcGVy
bWxpbmsgPSBhcnJheSgnc2V0dGluZ3MnID0+ICRzZXR0aW5ncywgJ2NvbXBvbmVudHMnID0+
ICRjb21wb25lbnRzKTsKCgkJLy8gU2F2ZSBpdAoJCSR0aGlzLT5zZXRfcHJlZmVyZW5jZSgk
aWQsICRwZXJtbGluaywgJ2dicF9zZXJpYWxpemVkJyk7CgoJCSR0aGlzLT5wYXJlbnQtPm1l
c3NhZ2UgPSBtZXNzZW5nZXIoJycsICRzZXR0aW5nc1sncGxfbmFtZSddLCAnc2F2ZWQnKTsK
CX0KCglmdW5jdGlvbiBwaHBBcnJheVRvSnNBcnJheSAoJG5hbWUsICRhcnJheSkgewoJCS8v
IEZyb20gUEhQLm5ldAoJCWlmIChpc19hcnJheSgkYXJyYXkpKSB7CgkJCSRyZXN1bHQgPSAk
bmFtZS4nID0gbmV3IEFycmF5KCk7Jy5uOwoJCQlmb3JlYWNoICgkYXJyYXkgYXMgJGtleSA9
PiAkdmFsdWUpCgkJCQkkcmVzdWx0IC49ICR0aGlzLT5waHBBcnJheVRvSnNBcnJheSgkbmFt
ZS4nW1wnJy4ka2V5LidcJ10nLCR2YWx1ZSwnJykubjsKCQl9IGVsc2UgewoJCQkkcmVzdWx0
ID0gJG5hbWUuJyA9IFwnJy4kYXJyYXkuJ1wnOyc7CgkJfQoJCXJldHVybiAkcmVzdWx0OwoJ
fQp9CgpjbGFzcyBQZXJtYW5lbnRMaW5rc0xpc3RUYWJWaWV3IGV4dGVuZHMgR0JQQWRtaW5U
YWJWaWV3CnsKCXZhciAkcGVybWlzc2lvbnMgPSAnMSwyJzsKCWZ1bmN0aW9uIHByZWxvYWQg
KCkgewoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhpcywgJHRoaXMtPnBhcmVudC0+
ZXZlbnQuJ19tdWx0aV9lZGl0JyksICR0aGlzLT5wYXJlbnQtPmV2ZW50LCAkdGhpcy0+cGFy
ZW50LT5ldmVudC4nX211bHRpX2VkaXQnLCAxKTsKCQlyZWdpc3Rlcl9jYWxsYmFjayhhcnJh
eSgmJHRoaXMsICR0aGlzLT5wYXJlbnQtPmV2ZW50LidfY2hhbmdlX3BhZ2VieScpLCAkdGhp
cy0+cGFyZW50LT5ldmVudCwgJHRoaXMtPnBhcmVudC0+ZXZlbnQuJ19jaGFuZ2VfcGFnZWJ5
JywgMSk7Cgl9CgoJZnVuY3Rpb24gbWFpbiAoKSB7CgkJZXh0cmFjdChncHNhKGFycmF5KCdw
YWdlJywgJ3NvcnQnLCAnZGlyJywgJ2NyaXQnLCAnc2VhcmNoX21ldGhvZCcpKSk7CgoJCSRl
dmVudCA9ICR0aGlzLT5wYXJlbnQtPmV2ZW50OwoKCQkkcGVybWxpbmtzID0gJHRoaXMtPnBh
cmVudC0+Z2V0X2FsbF9wZXJtbGlua3MoKTsKCQkkdG90YWwgPSBjb3VudCgkcGVybWxpbmtz
KTsKCgkJaWYgKCR0b3RhbCA8IDEpIHsKCQkJZWNobyBncmFmKCdZb3UgaGF2ZW5cJ3QgY3Jl
YXRlZCBhbnkgY3VzdG9tIHBlcm1hbmVudCBsaW5rcyBydWxlcyB5ZXQuJywgJyBzdHlsZT0i
dGV4dC1hbGlnbjogY2VudGVyOyInKS4KCQkJCSBncmFmKCc8YSBocmVmPSInLiR0aGlzLT51
cmwoYXJyYXkoZ2JwX3RhYiA9PiAnYnVpbGQnKSwgdHJ1ZSkuJyI+Q2xpY2sgaGVyZTwvYT4g
dG8gYWRkIG9uZS4nLCAnIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IicpOwoJCQlyZXR1
cm47CgkJfQoKCQkkbGltaXQgPSBtYXgoJHRoaXMtPnByZWYoJ2xpc3RfcGFnZWJ5JyksIDE1
KTsKCgkJbGlzdCgkcGFnZSwgJG9mZnNldCwgJG51bVBhZ2VzKSA9ICR0aGlzLT5wYWdlcigk
dG90YWwsICRsaW1pdCwgJHBhZ2UpOwoKCQlpZiAoZW1wdHkoJHNvcnQpKQoJCQkkc29ydCA9
ICdwbF9wcmVjZWRlbmNlJzsKCgkJaWYgKGVtcHR5KCRkaXIpKQoJCQkkZGlyID0gJ2Rlc2Mn
OwoKCQkkZGlyID0gKCRkaXIgPT0gJ2Rlc2MnKSA/ICdkZXNjJyA6ICdhc2MnOwoKCQkvLyBT
b3J0IHRoZSBwZXJtbGlua3MgdmlhIHRoZSBzZWxlY3RlZCBjb2x1bW4gYW5kIHRoZW4gdGhl
aXIgbmFtZXMuCgkJZm9yZWFjaCAoJHBlcm1saW5rcyBhcyAkaWQgPT4gJHBlcm1saW5rKSB7
CgkJCSRzb3J0X2tleXNbJGlkXSA9ICRwZXJtbGlua1snc2V0dGluZ3MnXVskc29ydF07CgkJ
CSRuYW1lWyRpZF0gPSAkcGVybWxpbmtbJ3NldHRpbmdzJ11bJ3BsX25hbWUnXTsKCQl9CgkJ
YXJyYXlfbXVsdGlzb3J0KCRzb3J0X2tleXMsICgoJGRpciA9PSAnZGVzYycpID8gU09SVF9E
RVNDIDogU09SVF9BU0MpLCAkbmFtZSwgU09SVF9BU0MsICRwZXJtbGlua3MpOwoKCQkkc3dp
dGNoX2RpciA9ICgkZGlyID09ICdkZXNjJykgPyAnYXNjJyA6ICdkZXNjJzsKCgkJJHBlcm1s
aW5rcyA9IGFycmF5X3NsaWNlKCRwZXJtbGlua3MsICRvZmZzZXQsICRsaW1pdCk7CgoJCWlm
IChjb3VudCgkcGVybWxpbmtzKSkgewoJCQllY2hvIG4ubi4nPGZvcm0gbmFtZT0ibG9uZ2Zv
cm0iIG1ldGhvZD0icG9zdCIgYWN0aW9uPSJpbmRleC5waHAiIG9uc3VibWl0PSJyZXR1cm4g
dmVyaWZ5KFwnJy5nVHh0KCdhcmVfeW91X3N1cmUnKS4nXCcpIj4nLgoKCQkJCW4uc3RhcnRU
YWJsZSgnbGlzdCcpLgoJCQkJbi50cigKCQkJCQluLmNvbHVtbl9oZWFkKCduYW1lJywgJ3Bs
X25hbWUnLCAkZXZlbnQsIHRydWUsICRzd2l0Y2hfZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRo
b2QpLgoJCQkJCWhDZWxsKCkuCgkJCQkJY29sdW1uX2hlYWQoJ3ByZXZpZXcnLCAncGxfcHJl
dmlldycsICRldmVudCwgdHJ1ZSwgJHN3aXRjaF9kaXIsICRjcml0LCAkc2VhcmNoX21ldGhv
ZCkuCgkJCQkJY29sdW1uX2hlYWQoJ3ByZWNlZGVuY2UnLCAncGxfcHJlY2VkZW5jZScsICRl
dmVudCwgdHJ1ZSwgJHN3aXRjaF9kaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCkuCgkJCQkJ
aENlbGwoKQoJCQkJKTsKCgkJCWluY2x1ZGVfb25jZSB0eHBhdGguJy9wdWJsaXNoL3RhZ2hh
bmRsZXJzLnBocCc7CgoJCQlmb3JlYWNoICgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGVybWxp
bmspIHsKCQkJCWV4dHJhY3QoJHBlcm1saW5rWydzZXR0aW5ncyddKTsKCgkJCQkkbWFuYWdl
ID0gbi4nPHVsJy4odmVyc2lvbl9jb21wYXJlKCRHTE9CQUxTWyd0aGlzdmVyc2lvbiddLCAn
NC4wLjMnLCAnPD0nKSA/ICcgc3R5bGU9Im1hcmdpbjowO3BhZGRpbmc6MDtsaXN0LXN0eWxl
LXR5cGU6bm9uZTsiPicgOiAnPicpLgoJCQkJCQluLnQuJzxsaT4nLmhyZWYoZ1R4dCgnZWRp
dCcpLCAkdGhpcy0+dXJsKGFycmF5KGdicF90YWIgPT4gJ2J1aWxkJywgZ2JwX2lkID0+ICRp
ZCksIHRydWUpKS4nPC9saT4nLgoJCQkJCQluLic8L3VsPic7CgoJCQkJZWNobyBuLm4udHIo
CgoJCQkJCXRkKAoJCQkJCQlocmVmKCRwbF9uYW1lLCAkdGhpcy0+dXJsKGFycmF5KGdicF90
YWIgPT4gJ2J1aWxkJywgZ2JwX2lkID0+ICRpZCksIHRydWUpKQoJCQkJCSwgNzUpLgoKCQkJ
CQl0ZCgkbWFuYWdlLCAzNSkuCgoJCQkJCXRkKCRwbF9wcmV2aWV3LCAxNzUpLgoJCQkJCXRk
KCRwbF9wcmVjZWRlbmNlLicmbmJzcDsnLCA1MCkuCgoJCQkJCXRkKAoJCQkJCQlmSW5wdXQo
J2NoZWNrYm94JywgJ3NlbGVjdGVkW10nLCAkaWQpCgkJCQkJKQoJCQkJKTsKCQkJfQoKCQkJ
ZWNobyBuLm4udHIoCgkJCQl0ZGEoCgkJCQkJc2VsZWN0X2J1dHRvbnMoKS4KCQkJCQkkdGhp
cy0+cGVybWxpbmtzX211bHRpZWRpdF9mb3JtKCRwYWdlLCAkc29ydCwgJGRpciwgJGNyaXQs
ICRzZWFyY2hfbWV0aG9kKQoJCQkJLCcgY29sc3Bhbj0iNCIgc3R5bGU9InRleHQtYWxpZ246
IHJpZ2h0OyBib3JkZXI6IG5vbmU7IicpCgkJCSkuCgoJCQluLmVuZFRhYmxlKCkuCgkJCW4u
JzwvZm9ybT4nLgoKCQkJbi4kdGhpcy0+bmF2X2Zvcm0oJGV2ZW50LCAkcGFnZSwgJG51bVBh
Z2VzLCAkc29ydCwgJGRpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKS4KCgkJCW4ucGFnZWJ5
X2Zvcm0oJGV2ZW50LCAkdGhpcy0+cHJlZignbGlzdF9wYWdlYnknKSk7CgkJfQoJfQoKCWZ1
bmN0aW9uIHBhZ2VyICgkdG90YWwsICRsaW1pdCwgJHBhZ2UpIHsKCQlpZiAoZnVuY3Rpb25f
ZXhpc3RzKCdwYWdlcicpKQoJCQlyZXR1cm4gcGFnZXIoJHRvdGFsLCAkbGltaXQsICRwYWdl
KTsKCgkJLy8gVGhpcyBpcyB0YWtlbiBmcm9tIHR4cGxpYl9taXNjLnBocCByMTU4OCBpdCBp
cyByZXF1aXJlZCBmb3IgNC4wLjMgY29tcGF0aWJpdGx5CgkJJG51bV9wYWdlcyA9IGNlaWwo
JHRvdGFsIC8gJGxpbWl0KTsKCQkkcGFnZSA9ICRwYWdlID8gKGludCkgJHBhZ2UgOiAxOwoJ
CSRwYWdlID0gbWluKG1heCgkcGFnZSwgMSksICRudW1fcGFnZXMpOwoJCSRvZmZzZXQgPSBt
YXgoKCRwYWdlIC0gMSkgKiAkbGltaXQsIDApOwoJCXJldHVybiBhcnJheSgkcGFnZSwgJG9m
ZnNldCwgJG51bV9wYWdlcyk7Cgl9CgoJZnVuY3Rpb24gbmF2X2Zvcm0gKCRldmVudCwgJHBh
Z2UsICRudW1QYWdlcywgJHNvcnQsICRkaXIsICRjcml0LCAkbWV0aG9kKSB7CgkJaWYgKGZ1
bmN0aW9uX2V4aXN0cygnbmF2X2Zvcm0nKSkKCQkJcmV0dXJuIG5hdl9mb3JtKCRldmVudCwg
JHBhZ2UsICRudW1QYWdlcywgJHNvcnQsICRkaXIsICRjcml0LCAkbWV0aG9kKTsKCgkJLy8g
VGhpcyBpcyBiYXNpY2FsbHkgc3RvbGVuIGZyb20gdGhlIDQuMC4zIHZlcnNpb24gb2YgaW5j
bHVkZXMvdHhwX2xpc3QucGhwCgkJLy8gLSBsaXN0X25hdl9mb3JtKCkgZm9yIDQuMC4zIGNv
bXBhdGliaXRseQoJCSRuYXZbXSA9ICgkcGFnZSA+IDEpCgkJCT8gUHJldk5leHRMaW5rKCRl
dmVudCwgJHBhZ2UtMSwgZ1R4dCgncHJldicpLCAncHJldicsICRzb3J0LCAkZGlyKSA6ICcn
OwoJCSRuYXZbXSA9IHNwLnNtYWxsKCRwYWdlLiAnLycuJG51bVBhZ2VzKS5zcDsKCQkkbmF2
W10gPSAoJHBhZ2UgIT0gJG51bVBhZ2VzKQoJCQk/IFByZXZOZXh0TGluaygkZXZlbnQsICRw
YWdlKzEsIGdUeHQoJ25leHQnKSwgJ25leHQnLCAkc29ydCwgJGRpcikgOiAnJzsKCQlyZXR1
cm4gKCRuYXYpCgkJCT8gZ3JhZihqb2luKCcnLCAkbmF2KSwgJyBhbGlnbj0iY2VudGVyIicp
IDogJyc7Cgl9CgoJZnVuY3Rpb24gcGVybWxpbmtzX211bHRpZWRpdF9mb3JtICgkcGFnZSwg
JHNvcnQsICRkaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCkgewoJCSRtZXRob2RzID0gYXJy
YXkoCgkJCSdkZWxldGUnID0+IGdUeHQoJ2RlbGV0ZScpLAoJCSk7CgoJCXJldHVybiBldmVu
dF9tdWx0aWVkaXRfZm9ybSgkdGhpcy0+cGFyZW50LT5ldmVudCwgJG1ldGhvZHMsICRwYWdl
LCAkc29ydCwgJGRpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKTsKCX0KCglmdW5jdGlvbiBw
ZXJtbGlua3NfY2hhbmdlX3BhZ2VieSAoKSB7CgkJJHRoaXMtPnNldF9wcmVmZXJlbmNlKCds
aXN0X3BhZ2VieScsIGdwcygncXR5JykpOwoJfQoKCWZ1bmN0aW9uIHBlcm1saW5rc19tdWx0
aV9lZGl0ICgpIHsKCQkkbWV0aG9kID0gZ3BzKCdlZGl0X21ldGhvZCcpCgkJCT8gZ3BzKCdl
ZGl0X21ldGhvZCcpIC8vIEZyb20gVHhwIDQuMC40IGFuZCBncmVhdGVyCgkJCTogZ3BzKCdt
ZXRob2QnKTsgLy8gVXAgdG8gVHhwIDQuMC4zCgoJCXN3aXRjaCAoJG1ldGhvZCkgewoJCQlj
YXNlICdkZWxldGUnOgoJCQkJZm9yZWFjaCAoZ3BzKCdzZWxlY3RlZCcpIGFzICRpZCkgewoJ
CQkJCQkJJGRlbGV0ZWRbXSA9ICR0aGlzLT5wYXJlbnQtPnJlbW92ZV9wZXJtbGluaygkaWQp
OwoJCQkJfQoJCQlicmVhazsKCQl9CgoJCSR0aGlzLT5wYXJlbnQtPm1lc3NhZ2UgPSAoaXNz
ZXQoJGRlbGV0ZWQpICYmIGlzX2FycmF5KCRkZWxldGVkKSAmJiBjb3VudCgkZGVsZXRlZCkp
CgkJCT8gbWVzc2VuZ2VyKCcnLCBqb2luKCcsICcsICRkZWxldGVkKSAsJ2RlbGV0ZWQnKQoJ
CQk6IG1lc3NlbmdlcignYW4gZXJyb3Igb2NjdXJyZWQnLCAnJywgJycpOwoJfQp9CgpnbG9i
YWwgJGdicF9wbDsKJGdicF9wbCA9IG5ldyBQZXJtYW5lbnRMaW5rcygnUGVybWFuZW50IExp
bmtzJywgJ3Blcm1saW5rcycsICdhZG1pbicpOwppZiAoQHR4cGludGVyZmFjZSA9PSAncHVi
bGljJykgewoJcmVnaXN0ZXJfY2FsbGJhY2soYXJyYXkoJiRnYnBfcGwsICdfZmVlZF9lbnRy
eScpLCAncnNzX2VudHJ5Jyk7CglyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJGdicF9wbCwg
J19mZWVkX2VudHJ5JyksICdhdG9tX2VudHJ5Jyk7CglyZWdpc3Rlcl9jYWxsYmFjayhhcnJh
eSgmJGdicF9wbCwgJ190ZXh0cGF0dGVybicpLCAndGV4dHBhdHRlcm4nKTsKCXJlZ2lzdGVy
X2NhbGxiYWNrKGFycmF5KCYkZ2JwX3BsLCAnX3RleHRwYXR0ZXJuX2VuZCcpLCAndGV4dHBh
dHRlcm5fZW5kJyk7CgoJZnVuY3Rpb24gZ2JwX2lmX3JlZ2V4ICgkYXR0cywgJHRoaW5nKSB7
CgkJZ2xvYmFsICRwcmV0ZXh0OwoJCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkJCSduYW1lJyA9
PiAnJywKCQkJJ3ZhbCcgID0+ICcnLAoJCSksJGF0dHMpKTsKCQkkbWF0Y2ggPSAoQCRwcmV0
ZXh0WyJwZXJtbGlua19yZWdleF97JG5hbWV9Il0gPT0gJHZhbCk7CgkJcmV0dXJuIHBhcnNl
KEV2YWxFbHNlKCR0aGluZywgJG1hdGNoKSk7Cgl9CgoJZnVuY3Rpb24gZ2JwX2lmX3RleHQg
KCRhdHRzLCAkdGhpbmcpIHsKCQlnbG9iYWwgJHByZXRleHQ7CgkJZXh0cmFjdChsQXR0cyhh
cnJheSgKCQkJJ25hbWUnID0+ICcnLAoJCQkndmFsJyAgPT4gJycsCgkJKSwkYXR0cykpOwoK
CQkkbWF0Y2ggPSBmYWxzZTsKCQlpZiAoIWVtcHR5KCRuYW1lKSkgewoJCQlpZiAoZW1wdHko
JHZhbCkpCgkJCQkkbWF0Y2ggPSAoaXNzZXQoJHByZXRleHRbInBlcm1saW5rX3RleHRfeyRu
YW1lfSJdKSk7CgkJCWVsc2UKCQkJCSRtYXRjaCA9IChAJHByZXRleHRbInBlcm1saW5rX3Rl
eHRfeyRuYW1lfSJdID09ICR2YWwpOwoJCX0KCQlyZXR1cm4gcGFyc2UoRXZhbEVsc2UoJHRo
aW5nLCAkbWF0Y2gpKTsKCX0KCglmdW5jdGlvbiBnYnBfdXNlX3BhZ2VsaW5rICgkYXR0cywg
JHRoaW5nID0gJycpIHsKCQlnbG9iYWwgJGdicF9wbDsKCQlleHRyYWN0KGxBdHRzKGFycmF5
KAoJCQkncnVsZScgPT4gJycsCgkJKSwkYXR0cykpOwoJCXJldHVybiAkZ2JwX3BsLT5fdGV4
dHBhdHRlcm5fZW5kX2NhbGxiYWNrKHBhcnNlKCR0aGluZyksICRydWxlKTsKCX0KCglmdW5j
dGlvbiBnYnBfZGlzYWJsZV9wZXJtbGlua3MgKCRhdHRzLCAkdGhpbmcgPSAnJykgewoJCWds
b2JhbCAkZ2JwX3BsOwoJCXJldHVybiAkZ2JwX3BsLT50b2dnbGVfcGVybWxpbmtfbW9kZSgn
cGFyc2UnLCAkdGhpbmcpOwoJfQp9CiI7czozOiJtZDUiO3M6MzI6IjE1MzJkNmJiMWJlMzlj
NGY5ZDE3NGY4M2ZkNTlkZDFlIjt9
