# gbp_permanent_links_jrw v0.14_jrw.01
# Custom permanent links rules
# Graeme Porteous, modified by Jeffrey Woldan
# http://rgbp.co.uk/projects/textpattern/gbp_permanent_links/

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YTo5OntzOjQ6Im5hbWUiO3M6MjM6ImdicF9wZXJtYW5lbnRfbGlua3NfanJ3IjtzOjc6InZl
cnNpb24iO3M6MTE6IjAuMTRfanJ3LjAxIjtzOjY6ImF1dGhvciI7czo0MzoiR3JhZW1lIFBv
cnRlb3VzLCBtb2RpZmllZCBieSBKZWZmcmV5IFdvbGRhbiI7czoxMDoiYXV0aG9yX3VyaSI7
czo1OToiaHR0cDovL3JnYnAuY28udWsvcHJvamVjdHMvdGV4dHBhdHRlcm4vZ2JwX3Blcm1h
bmVudF9saW5rcy8iO3M6MTE6ImRlc2NyaXB0aW9uIjtzOjI4OiJDdXN0b20gcGVybWFuZW50
IGxpbmtzIHJ1bGVzIjtzOjQ6InR5cGUiO3M6MToiMSI7czo0OiJoZWxwIjtzOjE1MToiaDEu
IGdicF9wZXJtYW5lbnRfbGlua3MuCgpUaGVyZSBpcyBubyBwbHVnaW4gZG9jdW1lbnRhdGlv
bi4gRm9yIGhlbHAgcGxlYXNlIHVzZSB0aGUgImZvcnVtIHRocmVhZCI6aHR0cDovL2ZvcnVt
LnRleHRwYXR0ZXJuLmNvbS92aWV3dG9waWMucGhwP2lkPTE4OTE4LiI7czo0OiJjb2RlIjtz
OjY3Nzg1OiIKLy8gQ29uc3RhbnRzCkBkZWZpbmUoJ2dicF9zYXZlJywgJ3NhdmUnKTsKQGRl
ZmluZSgnZ2JwX3Bvc3QnLCAncG9zdCcpOwpAZGVmaW5lKCdnYnBfc2VwYXJhdG9yJywgJyZ+
Jn4mJyk7CgovLyByZXF1aXJlX3BsdWdpbigpIHdpbGwgcmVzZXQgdGhlICR0eHBfY3VycmVu
dF9wbHVnaW4gZ2xvYmFsCmdsb2JhbCAkdHhwX2N1cnJlbnRfcGx1Z2luOwokZ2JwX2N1cnJl
bnRfcGx1Z2luID0gJHR4cF9jdXJyZW50X3BsdWdpbjsKcmVxdWlyZV9wbHVnaW4oJ2dicF9h
ZG1pbl9saWJyYXJ5Jyk7CiR0eHBfY3VycmVudF9wbHVnaW4gPSAkZ2JwX2N1cnJlbnRfcGx1
Z2luOwoKY2xhc3MgUGVybWFuZW50TGlua3MgZXh0ZW5kcyBHQlBQbHVnaW4KewoJdmFyICRw
ZXJtaXNzaW9ucyA9ICcxLDInOwoJdmFyICRwcmVmZXJlbmNlcyA9IGFycmF5KAoJCSdzaG93
X3ByZWZpeCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwLCAndHlwZScgPT4gJ3llc25vcmFkaW8n
KSwKCQknc2hvd19zdWZmaXgnID0+IGFycmF5KCd2YWx1ZScgPT4gMCwgJ3R5cGUnID0+ICd5
ZXNub3JhZGlvJyksCgkJJ29taXRfdHJhaWxpbmdfc2xhc2gnID0+IGFycmF5KCd2YWx1ZScg
PT4gMCAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJCSdyZWRpcmVjdF9tdF9zdHlsZV9s
aW5rcycgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyks
CgkJJ2NsZWFuX3BhZ2VfYXJjaGl2ZV9saW5rcycgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAxICwg
J3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2pvaW5fcHJldGV4dF90b19wYWdlbGlua3Mn
ID0+IGFycmF5KCd2YWx1ZScgPT4gMSAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJCSdj
aGVja19wcmV0ZXh0X2NhdGVnb3J5X2NvbnRleHQnID0+IGFycmF5KCd2YWx1ZScgPT4gMCAs
ICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJCSdjaGVja19wcmV0ZXh0X3NlY3Rpb25fY29u
dGV4dCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyks
CgkJJ2ZvcmNlX2xvd2VyY2FzZV91cmxzJyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlw
ZScgPT4gJ3llc25vcmFkaW8nKSwKCQknYXV0b21hdGljYWxseV9hcHBlbmRfdGl0bGUnID0+
IGFycmF5KCd2YWx1ZScgPT4gMSAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJCSdwZXJt
bGlua19yZWRpcmVjdF9odHRwX3N0YXR1cycgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAnMzAxJyAs
ICd0eXBlJyA9PiAndGV4dF9pbnB1dCcpLAoJCSd1cmxfcmVkaXJlY3RfaHR0cF9zdGF0dXMn
ID0+IGFycmF5KCd2YWx1ZScgPT4gJzMwMicgLCAndHlwZScgPT4gJ3RleHRfaW5wdXQnKSwK
CQkndGV4dF9hbmRfcmVnZXhfc2VnbWVudF9zY29yZXMnID0+IGFycmF5KCd2YWx1ZScgPT4g
JzAnICwgJ3R5cGUnID0+ICd0ZXh0X2lucHV0JyksCgkJJ2RlYnVnJyA9PiBhcnJheSgndmFs
dWUnID0+IDAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJKTsKCXZhciAkbWF0Y2hlZF9w
ZXJtbGluayA9IGFycmF5KCk7Cgl2YXIgJHBhcnRpYWxfbWF0Y2hlcyA9IGFycmF5KCk7Cgl2
YXIgJGNsZWF2ZXJfcGFydGlhbF9tYXRjaDsKCXZhciAkYnVmZmVyX2RlYnVnID0gYXJyYXko
KTsKCglmdW5jdGlvbiBwcmVsb2FkICgpIHsKCQluZXcgUGVybWFuZW50TGlua3NMaXN0VGFi
VmlldygnbGlzdCcsICdsaXN0JywgJHRoaXMpOwoJCW5ldyBQZXJtYW5lbnRMaW5rc0J1aWxk
VGFiVmlldygnYnVpbGQnLCAnYnVpbGQnLCAkdGhpcyk7CgkJbmV3IEdCUFByZWZlcmVuY2VU
YWJWaWV3KCR0aGlzKTsKCX0KCglmdW5jdGlvbiBtYWluICgpIHsKCQlyZXF1aXJlX3ByaXZz
KCR0aGlzLT5ldmVudCk7Cgl9CgoJZnVuY3Rpb24gZ2V0X2FsbF9wZXJtbGlua3MgKCRzb3J0
ID0gMCwgJGV4Y2x1ZGUgPSBhcnJheSgpKSB7CgkJc3RhdGljICRyczsKCQlpZiAoIWlzc2V0
KCRycykpCgkJCSRycyA9IHNhZmVfY29sdW1uKAoJCQkJIlJFUExBQ0UobmFtZSwgJ3skdGhp
cy0+cGx1Z2luX25hbWV9XycsICcnKSBBUyBpZCIsICd0eHBfcHJlZnMnLAoJCQkJImBldmVu
dGAgPSAneyR0aGlzLT5ldmVudH0nIEFORCBgbmFtZWAgUkVHRVhQICdeeyR0aGlzLT5wbHVn
aW5fbmFtZX1fLnsxM30kJyIKCQkJKTsKCgkJaWYgKEB0eHBpbnRlcmZhY2UgPT0gJ3B1Ymxp
YycpCgkJCSR0aGlzLT5kZWJ1ZygnTG9hZGluZyBwZXJtbGlua3MgZnJvbSBkYicpOwoJCSRp
ID0gMDsKCgkJJHBlcm1saW5rcyA9IGFycmF5KCk7CgkJZm9yZWFjaCAoJHJzIGFzICRpZCkg
ewoJCQkkcGwgPSAkdGhpcy0+Z2V0X3Blcm1saW5rKCRpZCk7CgoJCQlpZiAoY291bnQoJGV4
Y2x1ZGUpID4gMCkKCQkJCWZvcmVhY2ggKCRwbFsnY29tcG9uZW50cyddIGFzICRwbF9jKSB7
CgkJCQkJaWYgKGlzX2FycmF5KCRleGNsdWRlKSAmJiBpbl9hcnJheSgkcGxfY1sndHlwZSdd
LCAkZXhjbHVkZSkpCgkJCQkJCWNvbnRpbnVlIDI7CgkJCQkJaWYgKGlzX3N0cmluZygkZXhj
bHVkZSkgJiYgJHBsX2NbJ3R5cGUnXSA9PT0gJGV4Y2x1ZGUpCgkJCQkJCWNvbnRpbnVlIDI7
CgkJCQl9CgoJCQkkcGVybWxpbmtzWyRpZF0gPSAkcGw7CgoJCQlpZiAoJHNvcnQpCgkJCQkk
cHJlY2VkZW5jZVskaWRdID0gJHBlcm1saW5rc1skaWRdWydzZXR0aW5ncyddWydwbF9wcmVj
ZWRlbmNlJ107CgkJfQoKCQkvLyBJZiBtb3JlIHRoYW4gb25lIHBlcm1hbmVudCBsaW5rLCBz
b3J0IGJ5IHRoZWlyIHByZWNlZGVuY2UgdmFsdWUuCgkJaWYgKCRzb3J0ICYmIGNvdW50KCRw
ZXJtbGlua3MpID4gMSkKCQkJYXJyYXlfbXVsdGlzb3J0KCRwcmVjZWRlbmNlLCBTT1JUX0RF
U0MsICRwZXJtbGlua3MpOwoKCQlpZiAoQHR4cGludGVyZmFjZSA9PSAncHVibGljJykgewoJ
CQlmb3JlYWNoICgkcGVybWxpbmtzIGFzICRwbCkKCQkJCSR0aGlzLT5kZWJ1ZygkcGxbJ3Nl
dHRpbmdzJ11bJ3BsX3ByZWNlZGVuY2UnXS4nOiAnLiRwbFsnc2V0dGluZ3MnXVsncGxfbmFt
ZSddLicgKCcuJHBsWydzZXR0aW5ncyddWydwbF9wcmV2aWV3J10uJyknKTsKCQl9CgoJCXJl
dHVybiAkcGVybWxpbmtzOwoJfQoKCWZ1bmN0aW9uIGdldF9wZXJtbGluayAoJGlkKSB7CgkJ
JHBlcm1saW5rID0gJHRoaXMtPnByZWYoJGlkKTsKCQlyZXR1cm4gaXNfYXJyYXkoJHBlcm1s
aW5rKSA/ICRwZXJtbGluayA6IGFycmF5KCk7Cgl9CgoJZnVuY3Rpb24gcmVtb3ZlX3Blcm1s
aW5rICgkaWQpIHsKCQkkcGVybWxpbmsgPSAkdGhpcy0+Z2V0X3Blcm1saW5rKCRpZCk7CgkJ
c2FmZV9kZWxldGUoJ3R4cF9wcmVmcycsICJgZXZlbnRgID0gJ3skdGhpcy0+ZXZlbnR9JyBB
TkQgYG5hbWVgIExJS0UgJ3skdGhpcy0+cGx1Z2luX25hbWV9X3skaWR9JSciKTsKCQlyZXR1
cm4gJHBlcm1saW5rWydzZXR0aW5ncyddWydwbF9uYW1lJ107Cgl9CgoJZnVuY3Rpb24gX2Zl
ZWRfZW50cnkgKCkgewoJCXN0YXRpYyAkc2V0OwoJCWlmICghaXNzZXQoJHNldCkpIHsKCQkJ
Ly8gV2UncmUgaW4gYSBmZWVkIGZvcmNlIGRlYnVnZ2luZyBvZmYuCgkJCSR0aGlzLT5wcmVm
ZXJlbmNlc1snZGVidWcnXVsndmFsdWUnXSA9ICRHTE9CQUxTWydwcmVmcyddWyR0aGlzLT5w
bHVnaW5fbmFtZS4nX2RlYnVnJ10gPSAwOwoKCQkJJHRoaXMtPnNldF9wZXJtbGlua19tb2Rl
KHRydWUpOwoJCQkkc2V0ID0gdHJ1ZTsKCQl9Cgl9CgoJZnVuY3Rpb24gX3RleHRwYXR0ZXJu
ICgpIHsKCQlnbG9iYWwgJHBsdWdpbnNfdmVyLCAkcHJldGV4dCwgJHByZWZzLCAkcGx1Z2lu
X2NhbGxiYWNrOwoKCQkkdGhpcy0+ZGVidWcoJ1BsdWdpbjogJy4kdGhpcy0+cGx1Z2luX25h
bWUuJyAtICcuJHBsdWdpbnNfdmVyWyR0aGlzLT5wbHVnaW5fbmFtZV0pOwoJCSR0aGlzLT5k
ZWJ1ZygnRnVuY3Rpb246ICcuX19GVU5DVElPTl9fLicoKScpOwoKCQkvLyBVUkkKCQkkcmVx
ID0gJHByZXRleHRbJ3JlcSddOwoJCSRyZXEgPSBwcmVnX3JlcGxhY2UoJyVcP1teXC9dKyQl
JywgJycsICRyZXEpOwoJCSR0aGlzLT5kZWJ1ZygnUmVxdWVzdCBVUkk6ICcuJHJlcSk7CgkJ
JHVyaSA9IGV4cGxvZGUoJy8nLCB0cmltKCRyZXEsICcvJykpOwoKCQkvLyBUaGUgbnVtYmVy
IG9mIGNvbXBvbmVudHMgY29tZXMgaW4gdXNlZnVsIHdoZW4gZGV0ZXJtaW5pbmcgdGhlIGJl
c3QgcGFydGlhbCBtYXRjaC4KCQkkdXJpX2NvbXBvbmVudF9jb3VudCA9IGNvdW50KCR1cmkp
OwoKCQkvLyBQZXJtYW5lbnQgbGlua3MKCQkkcGVybWxpbmtzID0gJHRoaXMtPmdldF9hbGxf
cGVybWxpbmtzKDEpOwoKCQkvLyBGb3JjZSBUZXh0cGF0dGVybiBhbmQgdGFncyB0byB1c2Ug
bWVzc3kgVVJMcyAtIHRoZXNlIGFyZSBlYXNpZXIgdG8KCQkvLyBmaW5kIGluIHJlZ2V4CgkJ
JHRoaXMtPnNldF9wZXJtbGlua19tb2RlKCk7CgoJCWlmIChjb3VudCgkcGVybWxpbmtzKSkg
ewoKCQkJLy8gV2UgYWxzbyB3YW50IHRvIG1hdGNoIHRoZSBmcm9udCBwYWdlIG9mIHRoZSBz
aXRlIChmb3IgcGFnZSBudW1iZXJzIC8gZmVlZHMgZXRjLi4pLgoJCQkvLyBBZGQgYSBwZXJt
bGlua3MgcnVsZSB3aGljaCB3aWxsIGRvIHRoYXQuCgkJCSRwZXJtbGlua3NbJ2RlZmF1bHQn
XSA9IGFycmF5KAoJCQkJJ2NvbXBvbmVudHMnID0+IGFycmF5KCksCgkJCQknc2V0dGluZ3Mn
ID0+IGFycmF5KAoJCQkJCSdwbF9uYW1lJyA9PiAnZ2JwX3Blcm1hbmVudF9saW5rc19kZWZh
dWx0JywgJ3BsX3ByZWNlZGVuY2UnID0+ICcnLCAncGxfcHJldmlldycgPT4gJy8nLAoJCQkJ
CSdjb25fc2VjdGlvbicgPT4gJycsICdjb25fY2F0ZWdvcnknID0+ICcnLCAnZGVzX3NlY3Rp
b24nID0+ICcnLCAnZGVzX2NhdGVnb3J5JyA9PiAnJywKCQkJCQknZGVzX3Blcm1saW5rJyA9
PiAnJywgJ2Rlc19mZWVkJyA9PiAnJywgJ2Rlc19sb2NhdGlvbicgPT4gJycsICdkZXNfcGFn
ZScgPT4gJycKCQkJKSk7CgoJCQkvLyBFeHRlbmQgdGhlIHByZXRleHRfcmVwbGFjZW1lbnQg
c2NvcGUgb3V0c2lkZSB0aGUgZm9yZWFjaCBwZXJtbGluayBsb29wCgkJCSRwcmV0ZXh0X3Jl
cGxhY2VtZW50ID0gTlVMTDsKCgkJCWZvcmVhY2goJHBlcm1saW5rcyBhcyAkaWQgPT4gJHBs
KSB7CgkJCQkvLyBFeHRyYWN0IHRoZSBwZXJtbGluayBzZXR0aW5ncwoJCQkJJHBsX3NldHRp
bmdzID0gJHBsWydzZXR0aW5ncyddOwoJCQkJZXh0cmFjdCgkcGxfc2V0dGluZ3MpOwoKCQkJ
CSR0aGlzLT5kZWJ1ZygnUGVybWxpbmsgbmFtZTogJy4kcGxfbmFtZSk7CgkJCQkkdGhpcy0+
ZGVidWcoJ1Blcm1saW5rIGlkOiAnLiRpZCk7CgkJCQkkdGhpcy0+ZGVidWcoJ1ByZXZpZXc6
ICcuJHBsX3ByZXZpZXcpOwoKCQkJCSRwbF9jb21wb25lbnRzID0gJHBsWydjb21wb25lbnRz
J107CgoJCQkJLy8gVVJJIGNvbXBvbmVudHMKCQkJCSR1cmlfY29tcG9uZW50cyA9ICR1cmk7
CgoJCQkJJHRoaXMtPmRlYnVnKCdQTCBjb21wb25lbnQgY291bnQ6ICcuY291bnQoJHBsX2Nv
bXBvbmVudHMpKTsKCQkJCSR0aGlzLT5kZWJ1ZygnVVJMIGNvbXBvbmVudCBjb3VudDogJy5j
b3VudCgkdXJpX2NvbXBvbmVudHMpKTsKCgkJCQkkZGF0ZSA9IGZhbHNlOyAkdGl0bGVfcGFn
ZV9mZWVkID0gZmFsc2U7CgkJCQlmb3JlYWNoKCRwbF9jb21wb25lbnRzIGFzICRwbF9jKQoJ
CQkJCS8vIEFyZSB3ZSBleHBlY3RpbmcgYSBkYXRlIGNvbXBvbmVudD8gSWYgc28gdGhlIG51
bWJlciBvZiBwbCBhbmQgdXJpIGNvbXBvbmVudHMgd29uJ3QgbWF0Y2gKCQkJCQlpZiAoJHBs
X2NbJ3R5cGUnXSA9PSAnZGF0ZScpCgkJCQkJIAkkZGF0ZSA9IHRydWU7CgkJCQkJLy8gRG8g
d2UgaGF2ZSBlaXRoZXIgYSB0aXRsZSwgcGFnZSBvciBhIGZlZWQgY29tcG9uZW50PwoJCQkJ
CWVsc2UgaWYgKGluX2FycmF5KCRwbF9jWyd0eXBlJ10sIGFycmF5KCd0aXRsZScsICdwYWdl
JywgJ2ZlZWQnKSkpCgkJCQkJCSR0aXRsZV9wYWdlX2ZlZWQgPSB0cnVlOwoKCQkJCWlmICgh
JHRpdGxlX3BhZ2VfZmVlZCkKCQkJCQkvLyBJZiB0aGVyZSBpc24ndCBhIHRpdGxlLCBwYWdl
IG9yIGZlZWQgY29tcG9uZW50IHRoZW4gYXBwZW5kIGEgc3BlY2lhbCB0eXBlIGZvciBjbGVh
dmVyIHBhcnRpYWwgbWF0Y2hpbmcKCQkJCQkkcGxfY29tcG9uZW50c1tdID0gYXJyYXkoJ3R5
cGUnID0+ICd0aXRsZV9wYWdlX2ZlZWQnLCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4g
JycsICdyZWdleCcgPT4gJycsICd0ZXh0JyA9PiAnJyk7CgoJCQkJLy8gRXhpdCBlYXJseSBp
ZiB0aGVyZSBhcmUgbW9yZSBVUkwgY29tcG9uZW50cyB0aGFuIFBMIGNvbXBvbmVudHMsCgkJ
CQkvLyB0YWtpbmcgaW50byBhY2NvdW50IHdoZXRoZXIgdGhlcmUgaXMgYSBkYXRhIGNvbXBv
bmVudAoJCQkJaWYgKCEkdXJpX2NvbXBvbmVudHNbMF0gfHwgY291bnQoJHVyaV9jb21wb25l
bnRzKSA+IGNvdW50KCRwbF9jb21wb25lbnRzKSArICgkZGF0ZSA/IDIgOiAwKSkgewoJCQkJ
CSR0aGlzLT5kZWJ1ZygnTW9yZSBVUkwgY29tcG9uZW50cyB0aGFuIFBMIGNvbXBvbmVudHMn
KTsKCQkJCQljb250aW51ZTsKCQkJCX0KCgkJCQkvLyBSZXNldCBwcmV0ZXh0X3JlcGxhY2Vt
ZW50IGFzIHdlIGFyZSBhYm91dCB0byBzdGFydCBhbm90aGVyIGNvbXBhcmlzb24KCQkJCSRw
cmV0ZXh0X3JlcGxhY2VtZW50ID0gYXJyYXkoJ3Blcm1saW5rX2lkJyA9PiAkaWQpOwoKCQkJ
CS8vIFJlc2V0IHRoZSBhcnRpY2xlIGNvbnRleHQgc3RyaW5nCgkJCQkkY29udGV4dCA9IGFy
cmF5KCk7CgkJCQl1bnNldCgkY29udGV4dF9zdHIpOwoJCQkJaWYgKCFlbXB0eSgkZGVzX3Nl
Y3Rpb24pKQoJCQkJCSRjb250ZXh0W10gPSAiYFNlY3Rpb25gID0gJyRkZXNfc2VjdGlvbici
OwoJCQkJaWYgKCFlbXB0eSgkZGVzX2NhdGVnb3J5KSkKCQkJCQkkY29udGV4dFtdID0gIihg
Q2F0ZWdvcnkxYCA9ICckZGVzX2NhdGVnb3J5JyBPUiBgQ2F0ZWdvcnkyYCA9ICckZGVzX2Nh
dGVnb3J5JykiOwoJCQkJJGNvbnRleHRfc3RyID0gKGNvdW50KCRjb250ZXh0KSA+IDAgPyAn
YW5kICcuam9pbignIGFuZCAnLCAkY29udGV4dCkgOiAnJyk7CgoJCQkJLy8gQXNzdW1lIHRo
ZXJlIGlzIG5vIG1hdGNoCgkJCQkkcGFydGlhbF9tYXRjaCA9IGZhbHNlOwoJCQkJJGNsZWF2
ZXJfcGFydGlhbF9tYXRjaCA9IGZhbHNlOwoKCQkJCS8vIExvb3AgdGhyb3VnaCB0aGUgcGVy
bWxpbmsgY29tcG9uZW50cwoJCQkJZm9yZWFjaCAoJHBsX2NvbXBvbmVudHMgYXMgJHBsX2Nf
aW5kZXggPT4gJHBsX2MpIHsKCQkJCQkvLyBBc3N1bWUgdGhlcmUgaXMgbm8gbWF0Y2gKCQkJ
CQkkbWF0Y2ggPSBmYWxzZTsKCgkJCQkJLy8gQ2hlY2sgdG8gc2VlIGlmIHRoZXJlIGFyZSBz
dGlsbCBVUkkgY29tcG9uZW50cyB0byBiZSBjaGVja2VkLgoJCQkJCWlmIChjb3VudCgkdXJp
X2NvbXBvbmVudHMpKQoJCQkJCQkvLyBHZXQgdGhlIG5leHQgY29tcG9uZW50LgoJCQkJCQkk
dXJpX2MgPSBhcnJheV9zaGlmdCgkdXJpX2NvbXBvbmVudHMpOwoKCQkJCQllbHNlIGlmICgh
JHRpdGxlX3BhZ2VfZmVlZCAmJiBjb3VudCgkcGxfY29tcG9uZW50cykgLSAxID09ICR1cmlf
Y29tcG9uZW50X2NvdW50KSB7CgkJCQkJCS8vIElmIHdlIGFwcGVuZGVkIGEgdGl0bGVfcGFn
ZV9mZWVkIGNvbXBvbmVudCBlYXJsaWVyIGFuZCBwZXJtbGluayBhbmQgVVJJIGNvbXBvbmVu
dHMKCQkJCQkJLy8gY291bnRzIGFyZSBlcXVhbCwgd2UgbXVzdCBvZiBmaW5pc2hlZCBjaGVj
a2luZyB0aGlzIHBlcm1saW5rLCBhbmQgaXQgbWF0Y2hlcyBzbyBicmVhay4KCQkJCQkJJG1h
dGNoID0gdHJ1ZTsKCQkJCQkJYnJlYWs7CgoJCQkJCX0gZWxzZSB7CgkJCQkJCS8vIElmIHRo
ZXJlIGFyZSBubyBtb3JlIFVSSSBjb21wb25lbnRzIHRoZW4gd2UgaGF2ZSBhIHBhcnRpYWwg
bWF0Y2guCgkJCQkJCS8vIFN0b3JlIHRoZSBwYXJ0aWFsIG1hdGNoIGRhdGEgdW5sZXNzIHRo
ZXJlIGhhcyBiZWVuIGEgcHJlY2VkaW5nIHBlcm1saW5rIHdpdGggdGhlCgkJCQkJCS8vIHNh
bWUgbnVtYmVyIG9mIGNvbXBvbmVudHMsIGFzIHBlcm1saW5rIGhhdmUgYWxyZWFkeSBiZWVu
IHNvcnRlZCBieSBwcmVjZWRlbmNlLgoJCQkJCQlpZiAoIWFycmF5X2tleV9leGlzdHMoJHVy
aV9jb21wb25lbnRfY291bnQsICR0aGlzLT5wYXJ0aWFsX21hdGNoZXMpKQoJCQkJCQkJJHRo
aXMtPnBhcnRpYWxfbWF0Y2hlc1skdXJpX2NvbXBvbmVudF9jb3VudF0gPSAkcHJldGV4dF9y
ZXBsYWNlbWVudDsKCgkJCQkJCS8vIFVuc2V0IHByZXRleHRfcmVwbGFjZW1lbnQgYXMgY2hh
bmdlcyBjb3VsZCBvZiBiZWVuIG1hZGUgaW4gYSBwcmVjZWRpbmcgY29tcG9uZW50CgkJCQkJ
CXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50KTsKCgkJCQkJCS8vIEJyZWFrIGVhcmx5IGZv
cm0gdGhlIGZvcmVhY2ggcGVybWxpbmsgY29tcG9uZW50cyBsb29wLgoJCQkJCQkkcGFydGlh
bF9tYXRjaCA9IHRydWU7CgkJCQkJCWJyZWFrOwoJCQkJCX0KCgkJCQkJLy8gRXh0cmFjdCB0
aGUgcGVybWxpbmsgY29tcG9uZW50cy4KCQkJCQlleHRyYWN0KCRwbF9jKTsKCgkJCQkJLy8g
SWYgaXQncyBhIGRhdGUsIGdyYWIgYW5kIGNvbWJpbmUgdGhlIG5leHQgdHdvIFVSSSBjb21w
b25lbnRzLgoJCQkJCWlmICgkdHlwZSA9PSAnZGF0ZScpCgkJCQkJCSR1cmlfYyAuPSAnLycu
YXJyYXlfc2hpZnQoJHVyaV9jb21wb25lbnRzKS4nLycuYXJyYXlfc2hpZnQoJHVyaV9jb21w
b25lbnRzKTsKCgkJCQkJLy8gRGVjb2RlIHRoZSBVUkwKCQkJCQkkdXJpX2MgPSB1cmxkZWNv
ZGUoJHVyaV9jKTsKCgkJCQkJLy8gQWx3YXlzIGNoZWNrIHRoZSB0eXBlIHVubGVzcyB0aGUg
cHJlZml4IG9yIHN1ZmZpeCBhcmVuJ3QgdGhlcmUKCQkJCQkkY2hlY2tfdHlwZSA9IHRydWU7
CgoJCQkJCS8vIENoZWNrIHByZWZpeAoJCQkJCWlmICgkcHJlZml4ICYmICR0aGlzLT5wcmVm
KCdzaG93X3ByZWZpeCcpKSB7CgkJCQkJCSRzYW5pdGl6ZWRfcHJlZml4ID0gdXJsZGVjb2Rl
KCR0aGlzLT5lbmNvZGVfdXJsKCRwcmVmaXgpKTsKCQkJCQkJaWYgKCgkcG9zID0gc3RycG9z
KCR1cmlfYywgJHNhbml0aXplZF9wcmVmaXgpKSA9PT0gZmFsc2UgfHwgJHBvcyAhPSAwKSB7
CgkJCQkJCQkkY2hlY2tfdHlwZSA9IGZhbHNlOwoJCQkJCQkJJHRoaXMtPmRlYnVnKCdDYW5c
J3QgZmluZCBwcmVmaXg6ICcuJHByZWZpeCk7CgkJCQkJCX0gZWxzZQoJCQkJCQkJLy8gQ2hl
Y2sgcGFzc2VkLCByZW1vdmUgcHJlZml4IHJlYWR5IGZvciB0aGUgbmV4dCBjaGVjawoJCQkJ
CQkJJHVyaV9jID0gc3Vic3RyX3JlcGxhY2UoJHVyaV9jLCAnJywgMCwgc3RybGVuKCRzYW5p
dGl6ZWRfcHJlZml4KSk7CgkJCQkJfQoKCQkJCQkvLyBDaGVjayBzdWZmaXgKCQkJCQlpZiAo
JGNoZWNrX3R5cGUgJiYgJHN1ZmZpeCAmJiAkdGhpcy0+cHJlZignc2hvd19zdWZmaXgnKSkg
ewoJCQkJCQkkc2FuaXRpemVkX3N1ZmZpeCA9IHVybGRlY29kZSgkdGhpcy0+ZW5jb2RlX3Vy
bCgkc3VmZml4KSk7CgkJCQkJCWlmICgoJHBvcyA9IHN0cnJwb3MoJHVyaV9jLCAkc2FuaXRp
emVkX3N1ZmZpeCkpID09PSBmYWxzZSkgewoJCQkJCQkJJGNoZWNrX3R5cGUgPSBmYWxzZTsK
CQkJCQkJCSR0aGlzLT5kZWJ1ZygnQ2FuXCd0IGZpbmQgc3VmZml4OiAnLiRzdWZmaXgpOwoJ
CQkJCQl9IGVsc2UKCQkJCQkJCS8vIENoZWNrIHBhc3NlZCwgcmVtb3ZlIHN1ZmZpeCByZWFk
eSBmb3IgdGhlIG5leHQgY2hlY2sKCQkJCQkJCSR1cmlfYyA9IHN1YnN0cl9yZXBsYWNlKCR1
cmlfYywgJycsICRwb3MsIHN0cmxlbigkc2FuaXRpemVkX3N1ZmZpeCkpOwoJCQkJCX0KCgkJ
CQkJLy8gQm90aCB0aGUgcHJlZml4IGFuZCBzdWZmaXggc2V0dGluZ3MgaGF2ZSBwYXNzZWQK
CQkJCQlpZiAoJGNoZWNrX3R5cGUpIHsKCQkJCQkJJHRoaXMtPmRlYnVnKCdDaGVja2luZyBp
ZiAiJy4kdXJpX2MuJyIgaXMgb2YgdHlwZSAiJy4kdHlwZS4nIicpOwoJCQkJCQkkdXJpX2Mg
PSBkb1NsYXNoKCR1cmlfYyk7CgoJCQkJCQkvLwoJCQkJCQlpZiAoJHByZWZzWydwZXJtYWxp
bmtfdGl0bGVfZm9ybWF0J10pIHsKCQkJCQkJCSRtdF9zZWFyY2ggPSBhcnJheSgnL18vJywg
Jy9cLmh0bWwkLycpOwoJCQkJCQkJJG10X3JlcGxhY2UgPSBhcnJheSgnLScsICcnKTsKCQkJ
CQkJfSBlbHNlIHsKCQkJCQkJCSRtdF9zZWFyY2ggPSBhcnJheSgnLyg/Ol58XykoLikvZScs
ICcvXC5odG1sJC8nKTsKCQkJCQkJCSRtdF9yZXBsYWNlID0gYXJyYXkoInN0cnRvdXBwZXIo
J1xcMScpIiwgJycpOwoJCQkJCQl9CgkJCQkJCSRtdF91cmlfYyA9ICR0aGlzLT5wcmVmKCdy
ZWRpcmVjdF9tdF9zdHlsZV9saW5rcycpCgkJCQkJCQk/IHByZWdfcmVwbGFjZSgkbXRfc2Vh
cmNoLCAkbXRfcmVwbGFjZSwgJHVyaV9jKQoJCQkJCQkJOiAnJzsKCgkJCQkJCS8vIENvbXBh
cmUgYmFzZWQgb24gdHlwZQoJCQkJCQlzd2l0Y2ggKCR0eXBlKSB7CgkJCQkJCQljYXNlICdz
ZWN0aW9uJzoKCQkJCQkJCQlpZiAoJHJzID0gc2FmZV9yb3coJ25hbWUnLCAndHhwX3NlY3Rp
b24nLCAiKGBuYW1lYCBsaWtlICckdXJpX2MnIG9yIGBuYW1lYCBsaWtlICckbXRfdXJpX2Mn
KSBsaW1pdCAxIikpIHsKCQkJCQkJCQkJJHRoaXMtPmRlYnVnKCdTZWN0aW9uIG5hbWU6ICcu
JHJzWyduYW1lJ10pOwoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncyddID0gJHJz
WyduYW1lJ107CgkJCQkJCQkJCSRjb250ZXh0W10gPSAiYFNlY3Rpb25gID0gJ3skcnNbJ25h
bWUnXX0nIjsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVh
azsKCQkJCQkJCWNhc2UgJ2NhdGVnb3J5JzoKCQkJCQkJCQlpZiAoJHJzID0gc2FmZV9yb3co
J25hbWUnLCAndHhwX2NhdGVnb3J5JywgIihgbmFtZWAgbGlrZSAnJHVyaV9jJyBvciBgbmFt
ZWAgbGlrZSAnJG10X3VyaV9jJykgYW5kIGB0eXBlYCA9ICdhcnRpY2xlJyBsaW1pdCAxIikp
IHsKCQkJCQkJCQkJJHRoaXMtPmRlYnVnKCdDYXRlZ29yeSBuYW1lOiAnLiRyc1snbmFtZSdd
KTsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ2MnXSA9ICRyc1snbmFtZSddOwoJ
CQkJCQkJCQkkY29udGV4dFtdID0gIihgQ2F0ZWdvcnkxYCA9ICd7JHJzWyduYW1lJ119JyBP
UiBgQ2F0ZWdvcnkyYCA9ICckdXJpX2MnKSI7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJ
CQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICd0aXRsZSc6CgkJCQkJCQkJaWYg
KCRycyA9IHNhZmVfcm93KCd1cmxfdGl0bGUnLCAndGV4dHBhdHRlcm4nLCAiKGB1cmxfdGl0
bGVgIGxpa2UgJyR1cmlfYycgb3IgYHVybF90aXRsZWAgbGlrZSAnJG10X3VyaV9jJykgJGNv
bnRleHRfc3RyIGFuZCBgU3RhdHVzYCA+PSA0IGxpbWl0IDEiKSkgewoJCQkJCQkJCQkkdGhp
cy0+ZGVidWcoJ1VSTCBUaXRsZTogJy4kcnNbJ3VybF90aXRsZSddKTsKCQkJCQkJCQkJJG10
X3JlZGlyZWN0ID0gKCR1cmlfYyAhPSAkbXRfdXJpX2MpOwoJCQkJCQkJCQkkcHJldGV4dF9y
ZXBsYWNlbWVudFsndXJsX3RpdGxlJ10gPSAkcnNbJ3VybF90aXRsZSddOwoJCQkJCQkJCQkk
bWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnaWQn
OgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygnSUQsIFBvc3RlZCcsICd0ZXh0cGF0dGVy
bicsICJgSURgID0gJyR1cmlfYycgJGNvbnRleHRfc3RyIGFuZCBgU3RhdHVzYCA+PSA0IGxp
bWl0IDEiKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSA9ICRyc1sn
SUQnXTsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ1Bvc3RlZCddID0gJHJzWydQ
b3N0ZWQnXTsKCQkJCQkJCQkJJHByZXRleHRbJ251bVBhZ2VzJ10gPSAxOwoJCQkJCQkJCQkk
cHJldGV4dFsnaXNfYXJ0aWNsZV9saXN0J10gPSBmYWxzZTsKCQkJCQkJCQkJJG1hdGNoID0g
dHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ2F1dGhvcic6CgkJ
CQkJCQkJaWYgKCRhdXRob3IgPSBzYWZlX2ZpZWxkKCduYW1lJywgJ3R4cF91c2VycycsICJS
ZWFsTmFtZSBsaWtlICckdXJpX2MnIGxpbWl0IDEiKSkgewoJCQkJCQkJCQkkcHJldGV4dF9y
ZXBsYWNlbWVudFsnYXV0aG9yJ10gPSAkYXV0aG9yOwoJCQkJCQkJCQkkY29udGV4dFtdID0g
ImBBdXRob3JJRGAgPSAnJGF1dGhvciciOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJ
CQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnbG9naW4nOgoJCQkJCQkJCWlmICgk
YXV0aG9yID0gc2FmZV9maWVsZCgnbmFtZScsICd0eHBfdXNlcnMnLCAibmFtZSBsaWtlICck
dXJpX2MnIGxpbWl0IDEiKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYXV0
aG9yJ10gPSAkYXV0aG9yOwoJCQkJCQkJCQkkY29udGV4dFtdID0gImBBdXRob3JJRGAgPSAn
JGF1dGhvciciOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJy
ZWFrOwoJCQkJCQkJY2FzZSAnY3VzdG9tJzoKCQkJCQkJCQkkY3VzdG9tX29wdGlvbnMgPSBh
cnJheV92YWx1ZXMoYXJyYXlfbWFwKGFycmF5KCR0aGlzLCAiZW5jb2RlX3VybCIpLCBzYWZl
X2NvbHVtbigiY3VzdG9tXyRjdXN0b20iLCAndGV4dHBhdHRlcm4nLCAiY3VzdG9tXyRjdXN0
b20gIT0gJyciKSkpOwoJCQkJCQkJCWlmICgkdGhpcy0+cHJlZignZm9yY2VfbG93ZXJjYXNl
X3VybHMnKSkKCQkJCQkJCQkJJGN1c3RvbV9vcHRpb25zID0gYXJyYXlfbWFwKCJzdHJ0b2xv
d2VyIiwgJGN1c3RvbV9vcHRpb25zKTsKCQkJCQkJCQlpZiAoaW5fYXJyYXkoJHVyaV9jLCAk
Y3VzdG9tX29wdGlvbnMpKSB7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJ
CQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdkYXRlJzoKCQkJCQkJCQlpZiAocHJlZ19tYXRj
aCgnL15cZHs0fVwvXGR7Mn1cL1xkezJ9JC8nLCAkdXJpX2MpKSB7CgkJCQkJCQkJCSRwcmV0
ZXh0X3JlcGxhY2VtZW50WydkYXRlJ10gPSBzdHJfcmVwbGFjZSgnLycsICctJywgJHVyaV9j
KTsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJ
CQkJCWNhc2UgJ3llYXInOgoJCQkJCQkJCWlmIChwcmVnX21hdGNoKCcvXlxkezR9JC8nLCAk
dXJpX2MpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50Wyd5ZWFyJ10gPSAkdXJp
X2M7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJ
CQkJCQljYXNlICdtb250aCc6CgkJCQkJCQljYXNlICdkYXknOgoJCQkJCQkJCWlmIChwcmVn
X21hdGNoKCcvXlxkezJ9JC8nLCAkdXJpX2MpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxh
Y2VtZW50WyR0eXBlXSA9ICR1cmlfYzsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJ
CQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3BhZ2UnOgoJCQkJCQkJCWlmIChpc19u
dW1lcmljKCR1cmlfYykpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3BnJ10g
PSAkdXJpX2M7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJl
YWs7CgkJCQkJCQljYXNlICdmZWVkJzoKCQkJCQkJCQlpZiAoaW5fYXJyYXkoJHVyaV9jLCBh
cnJheSgncnNzJywgJ2F0b20nKSkpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRb
JHVyaV9jXSA9IDE7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJ
YnJlYWs7CgkJCQkJCQljYXNlICdzZWFyY2gnOgoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNl
bWVudFsncSddID0gJHVyaV9jOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJYnJl
YWs7CgkJCQkJCQljYXNlICd0ZXh0JzoKCQkJCQkJCQlpZiAoJHRoaXMtPmVuY29kZV91cmwo
JHRleHQpID09ICR1cmlfYykgewoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCQkk
cHJldGV4dF9yZXBsYWNlbWVudFsicGVybWxpbmtfdGV4dF97JG5hbWV9Il0gPSAkdXJpX2M7
CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdyZWdleCc6CgkJCQkJCQkJ
Ly8gQ2hlY2sgdG8gc2VlIGlmIHJlZ2V4IGlzIHZhbGlkIHdpdGhvdXQgb3V0cHV0dGluZyBl
cnJvciBtZXNzYWdlcy4KCQkJCQkJCQlvYl9zdGFydCgpOwoJCQkJCQkJCXByZWdfbWF0Y2go
JHJlZ2V4LCAkdXJpX2MsICRyZWdleF9tYXRjaGVzKTsKCQkJCQkJCQkkaXNfdmFsaWRfcmVn
ZXggPSAhKG9iX2dldF9jbGVhbigpKTsKCQkJCQkJCQlpZiAoJGlzX3ZhbGlkX3JlZ2V4ICYm
IEAkcmVnZXhfbWF0Y2hlc1swXSkgewoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJ
CQkkcHJldGV4dF9yZXBsYWNlbWVudFsicGVybWxpbmtfcmVnZXhfeyRuYW1lfSJdID0gJHJl
Z2V4X21hdGNoZXNbMF07CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCX0gLy8gc3dp
dGNoIHR5cGUgZW5kCgoJCQkJCQkvLyBVcGRhdGUgdGhlIGFydGljbGUgY29udGV4dCBzdHJp
bmcKCQkJCQkJJGNvbnRleHRfc3RyID0gKGNvdW50KCRjb250ZXh0KSA+IDAgPyAnYW5kICcu
am9pbignIGFuZCAnLCAkY29udGV4dCkgOiAnJyk7CgoJCQkJCQkkdGhpcy0+ZGVidWcoKCRt
YXRjaCA9PSB0cnVlKSA/ICdZRVMnIDogJ05PJyk7CgoJCQkJCQlpZiAoISRtYXRjaCAmJiAh
JGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkgewoJCQkJCQkJLy8gVGhlcmUgaGFzbid0IGJlZW4g
YSBtYXRjaCBvciBhIGNvbXBsZXRlIGNsZWF2ZXIgcGFydGlhbCBtYXRjaC4gTGV0cyB0cnkg
dG8gYmUgY2xlYXZlciBhbmQKCQkJCQkJCS8vIGNoZWNrIHRvIHNlZSBpZiB0aGlzIGNvbXBv
bmVudCBpcyBlaXRoZXIgYSB0aXRsZSwgcGFnZSBvciBhIGZlZWQuIFRoaXMgbWFrZXMgaXQg
bW9yZSBwcm9iYWJsZQoJCQkJCQkJLy8gYSBzdWNjZXNzZnVsIG1hdGNoIGZvciBhIGdpdmVu
IHBlcm1saW5rIHJ1bGUgb2NjdXJzLgoJCQkJCQkJJHRoaXMtPmRlYnVnKCdDaGVja2luZyBp
ZiAiJy4kdXJpX2MuJyIgaXMgb2YgdHlwZSAidGl0bGVfcGFnZV9mZWVkIicpOwoKCQkJCQkJ
CWlmICgkdHlwZSAhPSAndGl0bGUnICYmICR1cmxfdGl0bGUgPSBzYWZlX2ZpZWxkKCd1cmxf
dGl0bGUnLCAndGV4dHBhdHRlcm4nLCAiYHVybF90aXRsZWAgbGlrZSAnJHVyaV9jJyAkY29u
dGV4dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgbGltaXQgMSIpKSB7CgkJCQkJCQkJJHByZXRl
eHRfcmVwbGFjZW1lbnRbJ3VybF90aXRsZSddID0gJHVybF90aXRsZTsKCQkJCQkJCQkkcHJl
dGV4dFsnbnVtUGFnZXMnXSA9IDE7CgkJCQkJCQkJJHByZXRleHRbJ2lzX2FydGljbGVfbGlz
dCddID0gZmFsc2U7CgkJCQkJCQkJJGNsZWF2ZXJfcGFydGlhbF9tYXRjaCA9IHRydWU7CgkJ
CQkJCQl9IGVsc2UgaWYgKCR0aGlzLT5wcmVmKCdjbGVhbl9wYWdlX2FyY2hpdmVfbGlua3Mn
KSAmJiAkdHlwZSAhPSAncGFnZScgJiYgaXNfbnVtZXJpYygkdXJpX2MpKSB7CgkJCQkJCQkJ
JHByZXRleHRfcmVwbGFjZW1lbnRbJ3BnJ10gPSAkdXJpX2M7CgkJCQkJCQkJJGNsZWF2ZXJf
cGFydGlhbF9tYXRjaCA9IHRydWU7CgkJCQkJCQl9IGVsc2UgaWYgKCR0eXBlICE9ICdmZWVk
JyAmJiBpbl9hcnJheSgkdXJpX2MsIGFycmF5KCdyc3MnLCAnYXRvbScpKSkgewoJCQkJCQkJ
CSRwcmV0ZXh0X3JlcGxhY2VtZW50WyR1cmlfY10gPSAxOwoJCQkJCQkJCSRjbGVhdmVyX3Bh
cnRpYWxfbWF0Y2ggPSB0cnVlOwoJCQkJCQkJfQoKCQkJCQkJCSR0aGlzLT5kZWJ1ZygoJGNs
ZWF2ZXJfcGFydGlhbF9tYXRjaCA9PSB0cnVlKSA/ICdZRVMnIDogJ05PJyk7CgoJCQkJCQkJ
aWYgKCRjbGVhdmVyX3BhcnRpYWxfbWF0Y2gpIHsKCQkJCQkJCQkkdGhpcy0+Y2xlYXZlcl9w
YXJ0aWFsX21hdGNoID0gJHByZXRleHRfcmVwbGFjZW1lbnQ7CgoJCQkJCQkJCS8vIFVuc2V0
IHByZXRleHRfcmVwbGFjZW1lbnQgYXMgY2hhbmdlcyBjb3VsZCBvZiBiZWVuIG1hZGUgaW4g
YSBwcmVjZWRpbmcgY29tcG9uZW50CgkJCQkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1l
bnQpOwoKCQkJCQkJCQkkY2xlYXZlcl9wYXJ0aWFsX21hdGNoID0gdHJ1ZTsKCQkJCQkJCQlj
b250aW51ZSAyOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfSAvLyBjaGVjayB0eXBlIGVuZAoK
CQkJCQkvLyBCcmVhayBlYXJseSBpZiB0aGUgY29tcG9uZW50IGRvZXNuJ3QgbWF0Y2gsIGFz
IHRoZXJlIGlzIG5vIHBvaW50IGNvbnRpbnVpbmcKCQkJCQlpZiAoJG1hdGNoID09IGZhbHNl
KSB7CgkJCQkJCS8vIFVuc2V0IHByZXRleHRfcmVwbGFjZW1lbnQgYXMgY2hhbmdlcyBjb3Vs
ZCBvZiBiZWVuIG1hZGUgaW4gYSBwcmVjZWRpbmcgY29tcG9uZW50CgkJCQkJCXVuc2V0KCRw
cmV0ZXh0X3JlcGxhY2VtZW50KTsKCQkJCQkJYnJlYWs7CgkJCQkJfQoJCQkJfSAvLyBmb3Jl
YWNoIHBlcm1saW5rIGNvbXBvbmVudCBlbmQKCgkJCQlpZiAoIWlzc2V0KCRwcmV0ZXh0X3Jl
cGxhY2VtZW50WydpZCddKSkgewoJCQkJCWlmKGlzc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50
Wyd1cmxfdGl0bGUnXSkpIHsKCQkJCQkJaWYoaXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnRb
J3llYXInXSkpIHsKCQkJCQkJCSRkYXRlX3ZhbCA9ICRwcmV0ZXh0X3JlcGxhY2VtZW50Wyd5
ZWFyJ107CgkJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudFsnbW9udGgnXSkp
IHsKCQkJCQkJCQkkZGF0ZV92YWwgLj0gJy0nIC4gJHByZXRleHRfcmVwbGFjZW1lbnRbJ21v
bnRoJ107CgkJCQkJCQkJaWYoaXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ2RheSddKSkg
ewoJCQkJCQkJCQkkZGF0ZV92YWwgLj0gJy0nIC4gJHByZXRleHRfcmVwbGFjZW1lbnRbJ2Rh
eSddOwoJCQkJCQkJCX0KCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQlpZiAoJHJzID0gc2FmZV9y
b3coJ0lELCBQb3N0ZWQnLCAndGV4dHBhdHRlcm4nLCAiYHVybF90aXRsZWAgbGlrZSAnJHBy
ZXRleHRfcmVwbGFjZW1lbnRbdXJsX3RpdGxlXScgJGNvbnRleHRfc3RyIGFuZCBgUG9zdGVk
YCBsaWtlICckZGF0ZV92YWwlJyBhbmQgYFN0YXR1c2AgPj0gNCBvcmRlciBieSBgUG9zdGVk
YCBkZXNjIGxpbWl0IDEiKSkgewoJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10g
PSAkcnNbJ0lEJ107CgkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10gPSAk
cnNbJ1Bvc3RlZCddOwoJCQkJCQkJJHByZXRleHRbJ251bVBhZ2VzJ10gPSAxOwoJCQkJCQkJ
JHByZXRleHRbJ2lzX2FydGljbGVfbGlzdCddID0gZmFsc2U7CgkJCQkJCX0KCQkJCQl9CgkJ
CQl9CgoJCQkJaWYgKCRtYXRjaCB8fCAkcGFydGlhbF9tYXRjaCB8fCAkY2xlYXZlcl9wYXJ0
aWFsX21hdGNoKSB7CgkJCQkJLy8gRXh0cmFjdCB0aGUgc2V0dGluZ3MgZm9yIHRoaXMgcGVy
bWxpbmsKCQkJCQlAZXh0cmFjdCgkcGVybWxpbmtzWyRwcmV0ZXh0X3JlcGxhY2VtZW50Wydw
ZXJtbGlua19pZCddXVsnc2V0dGluZ3MnXSk7CgoJCQkJCS8vIENoZWNrIHRoZSBwZXJtbGlu
ayBzZWN0aW9uIGFuZCBjYXRlZ29yeSBjb25kaXRpb25zCgkJCQkJaWYgKCghZW1wdHkoJGNv
bl9zZWN0aW9uKSAmJiAkY29uX3NlY3Rpb24gIT0gQCRwcmV0ZXh0X3JlcGxhY2VtZW50Wydz
J10pIHx8CgkJCQkJKCFlbXB0eSgkY29uX2NhdGVnb3J5KSAmJiAkY29uX2NhdGVnb3J5ICE9
IEAkcHJldGV4dF9yZXBsYWNlbWVudFsnYyddKSkgewoJCQkJCQkkdGhpcy0+ZGVidWcoJ1Bl
cm1saW5rIGNvbmRpdGlvbnMgZmFpbGVkJyk7CgkJCQkJCWlmIChAJGNvbl9zZWN0aW9uKSAg
JHRoaXMtPmRlYnVnKCdjb25fc2VjdGlvbiA9ICcuICRjb25fc2VjdGlvbik7CgkJCQkJCWlm
IChAJGNvbl9jYXRlZ29yeSkgJHRoaXMtPmRlYnVnKCdjb25fY2F0ZWdvcnkgPSAnLiAkY29u
X2NhdGVnb3J5KTsKCgkJCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50KTsKCQkJCQl9
CgkJCQkJZWxzZSBpZiAoJG1hdGNoICYmIGlzc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50KSkK
CQkJCQkJJHRoaXMtPmRlYnVnKCdXZSBoYXZlIGEgbWF0Y2ghJyk7CgoJCQkJCWVsc2UgaWYg
KCRwYXJ0aWFsX21hdGNoICYmIGNvdW50KCR0aGlzLT5wYXJ0aWFsX21hdGNoZXMpKQoJCQkJ
CQkkdGhpcy0+ZGVidWcoJ1dlIGhhdmUgYSBcJ3BhcnRpYWwgbWF0Y2hcJycpOwoKCQkJCQll
bHNlIGlmICgkY2xlYXZlcl9wYXJ0aWFsX21hdGNoICYmIGlzc2V0KCRjbGVhdmVyX3BhcnRp
YWxfbWF0Y2gpKQoJCQkJCQkkdGhpcy0+ZGVidWcoJ1dlIGhhdmUgYSBcJ2NsZWF2ZXIgcGFy
dGlhbCBtYXRjaFwnJyk7CgoJCQkJCWVsc2UgewoJCQkJCQkkdGhpcy0+ZGVidWcoJ0Vycm9y
OiBDYW5cJ3QgZGV0ZXJtaW5lIHRoZSBjb3JyZWN0IHR5cGUgbWF0Y2gnKTsKCQkJCQkJLy8g
VGhpcyBwZXJtbGluayBoYXMgZmFpbGVkLCBjb250aW51ZSBleGVjdXRpb24gb2YgdGhlIGZv
cmVhY2ggcGVybWxpbmtzIGxvb3AKCQkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnQp
OwoJCQkJCX0KCQkJCX0KCgkJCQkvLyBXZSBoYXZlIGEgbWF0Y2gKCQkJCWlmIChAJHByZXRl
eHRfcmVwbGFjZW1lbnQpCgkJCQkJYnJlYWs7CgoJCQl9IC8vIGZvcmVhY2ggcGVybWxpbmtz
IGVuZAoKCQkJLy8gSWYgdGhlcmUgaXMgbm8gbWF0Y2ggcmVzdG9yZSB0aGUgbW9zdCBsaWtl
bHkgcGFydGlhbCBtYXRjaC4gU29ydGVkIGJ5IG51bWJlciBvZiBjb21wb25lbnRzIGFuZCB0
aGVuIHByZWNlZGVuY2UKCQkJaWYgKCFAJHByZXRleHRfcmVwbGFjZW1lbnQgJiYgY291bnQo
JHRoaXMtPnBhcnRpYWxfbWF0Y2hlcykpCgkJCQkkcHJldGV4dF9yZXBsYWNlbWVudCA9IGFy
cmF5X3NoaWZ0KGFycmF5X3NsaWNlKCR0aGlzLT5wYXJ0aWFsX21hdGNoZXMsIC0xKSk7CgkJ
CXVuc2V0KCR0aGlzLT5wYXJ0aWFsX21hdGNoZXMpOwoKCQkJLy8gUmVzdG9yZSB0aGUgY2xl
YXZlcl9wYXJ0aWFsX21hdGNoIGlmIHRoZXJlIGlzIG5vIG90aGVyIG1hdGNoZXMKCQkJaWYg
KCFAJHByZXRleHRfcmVwbGFjZW1lbnQgJiYgJHRoaXMtPmNsZWF2ZXJfcGFydGlhbF9tYXRj
aCkKCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50ID0gJHRoaXMtPmNsZWF2ZXJfcGFydGlhbF9t
YXRjaDsKCQkJdW5zZXQoJHRoaXMtPmNsZWF2ZXJfcGFydGlhbF9tYXRjaCk7CgoJCQkvLyBF
eHRyYWN0IHRoZSBzZXR0aW5ncyBmb3IgdGhpcyBwZXJtbGluawoJCQlAZXh0cmFjdCgkcGVy
bWxpbmtzWyRwcmV0ZXh0X3JlcGxhY2VtZW50WydwZXJtbGlua19pZCddXVsnc2V0dGluZ3Mn
XSk7CgoJCQkvLyBJZiBwcmV0ZXh0X3JlcGxhY2VtZW50IGlzIHN0aWxsIHNldCBoZXJlIHRo
ZW4gd2UgaGF2ZSBhIG1hdGNoCgkJCWlmIChAJHByZXRleHRfcmVwbGFjZW1lbnQpIHsKCQkJ
CSR0aGlzLT5kZWJ1ZygnUHJldGV4dCBSZXBsYWNlbWVudCAnLnByaW50X3IoJHByZXRleHRf
cmVwbGFjZW1lbnQsIDEpKTsKCgkJCQlpZiAoIWVtcHR5KCRkZXNfc2VjdGlvbikpCgkJCQkJ
JHByZXRleHRfcmVwbGFjZW1lbnRbJ3MnXSA9ICRkZXNfc2VjdGlvbjsKCQkJCWlmICghZW1w
dHkoJGRlc19jYXRlZ29yeSkpCgkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ2MnXSA9ICRk
ZXNfY2F0ZWdvcnk7CgkJCQlpZiAoIWVtcHR5KCRkZXNfZmVlZCkpCgkJCQkJJHByZXRleHRf
cmVwbGFjZW1lbnRbJGRlc19mZWVkXSA9IDE7CgoJCQkJaWYgKEAkcHJldGV4dF9yZXBsYWNl
bWVudFsnaWQnXSAmJiBAJHByZXRleHRfcmVwbGFjZW1lbnRbJ1Bvc3RlZCddKSB7CgkJCQkg
CWlmICgkbnAgPSBnZXROZXh0UHJldigkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSwgJHBy
ZXRleHRfcmVwbGFjZW1lbnRbJ1Bvc3RlZCddLCBAJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Mn
XSkpCgkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50ID0gYXJyYXlfbWVyZ2UoJHByZXRleHRf
cmVwbGFjZW1lbnQsICRucCk7CgkJCQl9CgkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVu
dFsnUG9zdGVkJ10pOwoKCQkJCS8vIElmIHRoZXJlIGlzIGEgbWF0Y2ggdGhlbiB3ZSBtb3N0
IHNldCB0aGUgaHR0cCBzdGF0dXMgY29ycmVjdGx5IGFzIHR4cCdzIHByZXRleHQgbWlnaHQg
c2V0IGl0IHRvIDQwNAoJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3N0YXR1cyddID0gJzIw
MCc7CgoJCQkJLy8gU3RvcmUgdGhlIG9yZ2luaWFsIEhUVFAgc3RhdHVzIGNvZGUKCQkJCS8v
IFdlIG1pZ2h0IG5lZWQgdG8gbG9nIHRoZSBwYWdlIGhpdCBpZiBpdCBlcXVhbHMgNDA0CgkJ
CQkkb3JnaW5pYWxfc3RhdHVzID0gJHByZXRleHRbJ3N0YXR1cyddOwoKCQkJCS8vIFR4cCBv
bmx5IGxvb2tzIGF0IHRoZSBtb250aCwgYnV0IGR1ZSB0byBob3cgd2UgcGhhc2UgdGhlIG1v
bnRoIHdlIGNhbiBtYW5pcHVsYXRlIHRoZSBzcWwgdG8gb3VyIG5lZWRzCgkJCQlpZiAoYXJy
YXlfa2V5X2V4aXN0cygnZGF0ZScsICRwcmV0ZXh0X3JlcGxhY2VtZW50KSkgewoJCQkJCSRw
cmV0ZXh0X3JlcGxhY2VtZW50Wydtb250aCddID0gJHByZXRleHRfcmVwbGFjZW1lbnRbJ2Rh
dGUnXTsKCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF0ZSddKTsKCQkJCX0g
ZWxzZSBpZiAoYXJyYXlfa2V5X2V4aXN0cygneWVhcicsICRwcmV0ZXh0X3JlcGxhY2VtZW50
KSB8fAoJCQkJYXJyYXlfa2V5X2V4aXN0cygnbW9udGgnLCAkcHJldGV4dF9yZXBsYWNlbWVu
dCkgfHwKCQkJCWFycmF5X2tleV9leGlzdHMoJ2RheScsICRwcmV0ZXh0X3JlcGxhY2VtZW50
KSkgewoJCQkJCSRtb250aCA9ICcnOwoJCQkJCSRtb250aCAuPSAoYXJyYXlfa2V5X2V4aXN0
cygneWVhcicsICRwcmV0ZXh0X3JlcGxhY2VtZW50KSkKCQkJCQkJPyAkcHJldGV4dF9yZXBs
YWNlbWVudFsneWVhciddLictJyA6ICdfX19fLSc7CgkJCQkJJG1vbnRoIC49IChhcnJheV9r
ZXlfZXhpc3RzKCdtb250aCcsICRwcmV0ZXh0X3JlcGxhY2VtZW50KSkKCQkJCQkJPyAkcHJl
dGV4dF9yZXBsYWNlbWVudFsnbW9udGgnXS4nLScgOiAnX18tJzsKCQkJCQkkbW9udGggLj0g
KGFycmF5X2tleV9leGlzdHMoJ2RheScsICRwcmV0ZXh0X3JlcGxhY2VtZW50KSkKCQkJCQkJ
PyAkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5J10uJyAnIDogJ19fICc7CgoJCQkJCSRwcmV0
ZXh0X3JlcGxhY2VtZW50Wydtb250aCddID0gJG1vbnRoOwoJCQkJCXVuc2V0KCRwcmV0ZXh0
X3JlcGxhY2VtZW50Wyd5ZWFyJ10pOwoJCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50
WydkYXknXSk7CgkJCQl9CgoJCQkJLy8gU2VjdGlvbiBuZWVkcyB0byBiZSBkZWZpbmVkIHNv
IHdlIGNhbiBhbHdheXMgZ2V0IGEgcGFnZSB0ZW1wbGF0ZS4KCQkJCWlmICghYXJyYXlfa2V5
X2V4aXN0cygncycsICRwcmV0ZXh0X3JlcGxhY2VtZW50KSkKCQkJCXsKCQkJCQlpZiAoIUAk
cHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSkKCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRb
J3MnXSA9ICdkZWZhdWx0JzsKCQkJCQllbHNlCgkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50
WydzJ10gPSBzYWZlX2ZpZWxkKCdTZWN0aW9uJywgJ3RleHRwYXR0ZXJuJywgJ0lEID0gJy4k
cHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSk7CgkJCQl9CgoJCQkJLy8gU2V0IHRoZSBjc3Mg
YW5kIHBhZ2UgdGVtcGxhdGUsIG90aGVyd2lzZSB3ZSBnZXQgYW4gdW5rbm93biBzZWN0aW9u
CgkJCQkkc2VjdGlvbl9zZXR0aW5ncyA9IHNhZmVfcm93KCdjc3MsIHBhZ2UnLCAndHhwX3Nl
Y3Rpb24nLCAibmFtZSA9ICd7JHByZXRleHRfcmVwbGFjZW1lbnRbJ3MnXX0nIGxpbWl0IDEi
KTsKCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydwYWdlJ10gPSAoQCRkZXNfcGFnZSkgPyAk
ZGVzX3BhZ2UgOiAkc2VjdGlvbl9zZXR0aW5nc1sncGFnZSddOwoJCQkJJHByZXRleHRfcmVw
bGFjZW1lbnRbJ2NzcyddICA9ICRzZWN0aW9uX3NldHRpbmdzWydjc3MnXTsKCgkJCQkkdGhp
cy0+bWF0Y2hlZF9wZXJtbGluayA9ICRwcmV0ZXh0X3JlcGxhY2VtZW50OwoKCQkJCWdsb2Jh
bCAkcGVybWxpbmtfbW9kZTsKCgkJCQlpZiAoaW5fYXJyYXkoJHByZWZzWydwZXJtbGlua19t
b2RlJ10sIGFycmF5KCdpZF90aXRsZScsICdzZWN0aW9uX2lkX3RpdGxlJykpICYmIEAkcHJl
dGV4dF9yZXBsYWNlbWVudFsncGcnXSAmJiAhQCRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCdd
KSB7CgkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10gPSAnJzsKCQkJCQkkcHJldGV4
dF9yZXBsYWNlbWVudFsnaXNfYXJ0aWNsZV9saXN0J10gPSB0cnVlOwoJCQkJfQoKCQkJCS8v
IE1lcmdlIHByZXRleHRfcmVwbGFjZW1lbnQgd2l0aCBwcmV0ZXh0CgkJCQkkcHJldGV4dCA9
IGFycmF5X21lcmdlKCRwcmV0ZXh0LCAkcHJldGV4dF9yZXBsYWNlbWVudCk7CgoJCQkJaWYg
KGlzX251bWVyaWMoQCRwcmV0ZXh0WydpZCddKSkgewoJCQkJCSRhID0gc2FmZV9yb3coJyos
IHVuaXhfdGltZXN0YW1wKFBvc3RlZCkgYXMgdVBvc3RlZCwgdW5peF90aW1lc3RhbXAoRXhw
aXJlcykgYXMgdUV4cGlyZXMsIHVuaXhfdGltZXN0YW1wKExhc3RNb2QpIGFzIHVMYXN0TW9k
JywgJ3RleHRwYXR0ZXJuJywgJ0lEPScuaW50dmFsKCRwcmV0ZXh0WydpZCddKS4nIGFuZCBT
dGF0dXMgPj0gNCcpOwoJCQkJCXBvcHVsYXRlQXJ0aWNsZURhdGEoJGEpOwoJCQkJfQoKCQkJ
CS8vIEV4cG9ydCByZXF1aXJlZCB2YWx1ZXMgdG8gdGhlIGdsb2JhbCBuYW1lc3BhY2UKCQkJ
CWZvcmVhY2ggKGFycmF5KCdpZCcsICdzJywgJ2MnLCAncGcnLCAnaXNfYXJ0aWNsZV9saXN0
JywgJ3ByZXZfaWQnLCAncHJldl90aXRsZScsICduZXh0X2lkJywgJ25leHRfdGl0bGUnLCAn
Y3NzJykgYXMgJGtleSkgewoJCQkJCWlmIChhcnJheV9rZXlfZXhpc3RzKCRrZXksICRwcmV0
ZXh0KSkKCQkJCQkJJEdMT0JBTFNbJGtleV0gPSAkcHJldGV4dFska2V5XTsKCQkJCX0KCgkJ
CQlpZiAoY291bnQoJHRoaXMtPm1hdGNoZWRfcGVybWxpbmspIHx8IEAkbXRfcmVkaXJlY3Qp
IHsKCQkJCQkkcGxfaW5kZXggPSAkcHJldGV4dFsncGVybWxpbmtfaWQnXTsKCQkJCQlpZiAo
IUAkbXRfcmVkaXJlY3QgfHwgISR0aGlzLT5wcmVmKCdyZWRpcmVjdF9tdF9zdHlsZV9saW5r
cycpKSB7CgkJCQkJCSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJHByZXRleHRbJ3Blcm1s
aW5rX2lkJ10pOwoJCQkJCQkkcGxfaW5kZXggPSBAJHBsWydzZXR0aW5ncyddWydkZXNfcGVy
bWxpbmsnXTsKCQkJCQl9CgoJCQkJCWlmIChAJHByZXRleHRbJ2lkJ10gJiYgJHBsX2luZGV4
KSB7CgkJCQkJCWlmIChjb3VudCgkdGhpcy0+Z2V0X3Blcm1saW5rKCRwbF9pbmRleCkpID4g
MCkgewoJCQkJCQkJb2JfY2xlYW4oKTsKCQkJCQkJCWdsb2JhbCAkc2l0ZXVybDsKCQkJCQkJ
CSRycyA9IHNhZmVfcm93KCcqLCBJRCBhcyB0aGlzaWQsIHVuaXhfdGltZXN0YW1wKFBvc3Rl
ZCkgYXMgcG9zdGVkJywgJ3RleHRwYXR0ZXJuJywgIklEID0gJ3skcHJldGV4dFsnaWQnXX0n
Iik7CgkJCQkJCQkkaG9zdCA9IHJ0cmltKHN0cl9yZXBsYWNlKHJ0cmltKGRvU3RyaXAoJHBy
ZXRleHRbJ3N1YnBhdGgnXSksICcvJyksICcnLCBodSksICcvJyk7CgkJCQkJCQkkdGhpcy0+
cmVkaXJlY3QoJGhvc3QuJHRoaXMtPl9wZXJtbGlua3VybCgkcnMsIFBFUk1MSU5LVVJMLCAk
cGxfaW5kZXgpLCAkdGhpcy0+cHJlZigncGVybWxpbmtfcmVkaXJlY3RfaHR0cF9zdGF0dXMn
KSk7CgkJCQkJCX0KCQkJCQl9IGVsc2UgaWYgKCR1cmwgPSBAJHBsWydzZXR0aW5ncyddWydk
ZXNfbG9jYXRpb24nXSkgewoJCQkJCQlvYl9jbGVhbigpOwoJCQkJCQkkdGhpcy0+cmVkaXJl
Y3QoJHVybCwgJHRoaXMtPnByZWYoJ3VybF9yZWRpcmVjdF9odHRwX3N0YXR1cycpKTsKCQkJ
CQl9CgkJCQl9CgoJCQkJaWYgKEAkcHJldGV4dFsncnNzJ10pIHsKCQkJCQlpZiAoQCRwcmV0
ZXh0WydzJ10pCgkJCQkJCSRfUE9TVFsnc2VjdGlvbiddID0gJHByZXRleHRbJ3MnXTsKCQkJ
CQlpZiAoQCRwcmV0ZXh0WydjJ10pCgkJCQkJCSRfUE9TVFsnY2F0ZWdvcnknXSA9ICRwcmV0
ZXh0WydjJ107CgkJCQkJb2JfY2xlYW4oKTsKCQkJCQlpbmNsdWRlIHR4cGF0aC4nL3B1Ymxp
c2gvcnNzLnBocCc7CgkJCQkJZXhpdChyc3MoKSk7CgkJCQl9CgoJCQkJaWYgKEAkcHJldGV4
dFsnYXRvbSddKSB7CgkJCQkJaWYgKEAkcHJldGV4dFsncyddKQoJCQkJCQkkX1BPU1RbJ3Nl
Y3Rpb24nXSA9ICRwcmV0ZXh0WydzJ107CgkJCQkJaWYgKEAkcHJldGV4dFsnYyddKQoJCQkJ
CQkkX1BPU1RbJ2NhdGVnb3J5J10gPSAkcHJldGV4dFsnYyddOwoJCQkJCW9iX2NsZWFuKCk7
CgkJCQkJaW5jbHVkZSB0eHBhdGguJy9wdWJsaXNoL2F0b20ucGhwJzsKCQkJCQlleGl0KGF0
b20oKSk7CgkJCQl9CgoJCQkJJHRoaXMtPmRlYnVnKCdQcmV0ZXh0ICcucHJpbnRfcigkcHJl
dGV4dCwgMSkpOwoJCQl9IGVsc2UgewoJCQkJJHRoaXMtPmRlYnVnKCdOTyBDSEFOR0VTIE1B
REUnKTsKCQkJfQoKCQkJLy8gTG9nIHRoaXMgcGFnZSBoaXQKCQkJaWYgKEAkb3JnaW5pYWxf
c3RhdHVzID09IDQwNCkKCQkJCWxvZ19oaXQoJHByZXRleHRbJ3N0YXR1cyddKTsKCgkJCS8v
IFN0YXJ0IG91dHB1dCBidWZmZXJpbmcgYW5kIHBzZXVkbyBjYWxsYmFjayB0byB0ZXh0cGF0
dGVybl9lbmQKCQkJb2Jfc3RhcnQoYXJyYXkoJiR0aGlzLCAnX3RleHRwYXR0ZXJuX2VuZF9j
YWxsYmFjaycpKTsKCgkJCS8vIFR4UCA0LjAuNSAocjI0MzYpIGludHJvZHVjZWQgdGhlIHRl
eHRwYXR0ZXJuX2VuZCBjYWxsYmFjayBtYWtpbmcgdGhlIGZvbGxvd2luZyByZWR1bmRhbnQK
CQkJJHZlcnNpb24gPSBhcnJheV9zdW0oYXJyYXlfbWFwKAoJCQkJY3JlYXRlX2Z1bmN0aW9u
KCckbGluZScsICdpZiAocHJlZ19tYXRjaChcJy9eXCQnLidMYXN0Q2hhbmdlZFJldmlzaW9u
OiAoXHcrKSBcJC9cJywgJGxpbmUsICRtYXRjaCkpIHJldHVybiAkbWF0Y2hbMV07JyksCgkJ
CQlAZmlsZSh0eHBhdGggLiAnL3B1Ymxpc2gucGhwJykKCQkJKSk7CgkJCWlmICgkdmVyc2lv
biA+PSAnMjQzNicpIHJldHVybjsKCgkJCS8vIFJlbW92ZSB0aGUgcGx1Z2luIGNhbGxiYWNr
cyB3aGljaCBoYXZlIGFscmVhZHkgYmVlbiBjYWxsZWQKCQkJZnVuY3Rpb24gZmlsdGVyX2Nh
bGxiYWNrcygkYykgewoJCQkJaWYgKCRjWydldmVudCddIT0ndGV4dHBhdHRlcm4nKSByZXR1
cm4gdHJ1ZTsKCQkJCWlmIChAJGNbJ2Z1bmN0aW9uJ11bMF0tPnBsdWdpbl9uYW1lID09ICdn
YnBfcGVybWFuZW50X2xpbmtzJyAmJgoJCQkJCQlAJGNbJ2Z1bmN0aW9uJ11bMV0gPT0gJ190
ZXh0cGF0dGVybicpCgkJCQl7CgkJCQkJJEdMT0JBTFNbJ2dicF9mb3VuZF9zZWxmJ10gPSB0
cnVlOwoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJCXJldHVybiBAJEdMT0JBTFNbJ2di
cF9mb3VuZF9zZWxmJ107CgkJCX0KCQkJJHBsdWdpbl9jYWxsYmFjayA9IGFycmF5X2ZpbHRl
cigkcGx1Z2luX2NhbGxiYWNrLCAnZmlsdGVyX2NhbGxiYWNrcycpOwoJCQl1bnNldCgkR0xP
QkFMU1snZ2JwX2ZvdW5kX3NlbGYnXSk7CgoJCQkvLyBSZS1jYWxsIHRleHRwYXR0ZXJuCgkJ
CXRleHRwYXR0ZXJuKCk7CgoJCQkvLyBDYWxsIGN1c3RvbSB0ZXh0cGF0dGVybl9lbmQgY2Fs
bGJhY2sKCQkJJHRoaXMtPl90ZXh0cGF0dGVybl9lbmQoKTsKCgkJCS8vIHRleHRwYXR0ZXJu
KCkgaGFzIHJ1biwga2lsbCB0aGUgY29ubmVjdGlvbgoJCQlkaWUoKTsKCQl9CgoJfSAvLyBm
dW5jdGlvbiBfdGV4dHBhdHRlcm4gZW5kCgoJZnVuY3Rpb24gX3RleHRwYXR0ZXJuX2VuZCAo
KSB7CgkJLy8gUmVkaXJlY3QgdG8gYSA0MDQgaWYgdGhlIHBhZ2UgbnVtYmVyIGlzIGdyZWF0
ZXIgdGhhbiB0aGUgbWF4IG51bWJlciBvZiBwYWdlcwoJCS8vIEhhcyB0byBiZSBhZnRlciB0
ZXh0cGF0dGVybigpIGFzICR0aGlzcGFnZSBpcyBzZXQgZHVyaW5nIDx0eHA6YXJ0aWNsZSAv
PgoJCWdsb2JhbCAkdGhpc3BhZ2UsICRwcmV0ZXh0OwoJCWlmICgoQCRwcmV0ZXh0WydwZydd
ICYmIGlzc2V0KCR0aGlzcGFnZSkpICYmCgkJKCR0aGlzcGFnZVsnbnVtUGFnZXMnXSA8ICRw
cmV0ZXh0WydwZyddKSkgewoJCQlvYl9lbmRfY2xlYW4oKTsKCQkJdHhwX2RpZShnVHh0KCc0
MDRfbm90X2ZvdW5kJyksICc0MDQnKTsKCQl9CgoJCS8vIFN0b3Agb3V0cHV0IGJ1ZmZlcmlu
ZywgdGhpcyBzZW5kcyB0aGUgYnVmZmVyIHRvIF90ZXh0cGF0dGVybl9lbmRfY2FsbGJhY2so
KQoJCXdoaWxlIChAb2JfZW5kX2ZsdXNoKCkpOwoKCX0gLy8gZnVuY3Rpb24gX3RleHRwYXR0
ZXJuX2VuZCBlbmQKCglmdW5jdGlvbiBfdGV4dHBhdHRlcm5fZW5kX2NhbGxiYWNrICgkaHRt
bCwgJG92ZXJyaWRlID0gJycpIHsKCQlnbG9iYWwgJHByZXRleHQsICRwcm9kdWN0aW9uX3N0
YXR1czsKCgkJaWYgKCRvdmVycmlkZSkgJHByZXRleHRbJ3Blcm1saW5rX292ZXJyaWRlJ10g
PSAkb3ZlcnJpZGU7CgkJJGh0bWwgPSBwcmVnX3JlcGxhY2VfY2FsbGJhY2soCgkJCSclaHJl
Zj0iKCcuaHUuJ3xcPykoW14iXSopIiUnLAoJCQlhcnJheSgmJHRoaXMsICdfcGFnZWxpbmt1
cmwnKSwKCQkJJGh0bWwKCQkpOwoJCXVuc2V0KCRwcmV0ZXh0WydwZXJtbGlua19vdmVycmlk
ZSddKTsKCgkJaWYgKCR0aGlzLT5wcmVmKCdkZWJ1ZycpICYmIGluX2FycmF5KCRwcm9kdWN0
aW9uX3N0YXR1cywgYXJyYXkoJ2RlYnVnJywgJ3Rlc3RpbmcnKSkpIHsKCQkJJGRlYnVnID0g
am9pbihuLCAkdGhpcy0+YnVmZmVyX2RlYnVnKTsKCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1ZyA9
IGFycmF5KCk7CgkJCWlmICgkZGVidWcpCgkJCQkkaHRtbCA9IGNvbW1lbnQobi4kZGVidWcu
bikgLiAkaHRtbDsKCQl9CgoJCXJldHVybiAkaHRtbDsKCX0gLy8gZnVuY3Rpb24gX3RleHRw
YXR0ZXJuX2VuZF9jYWxsYmFjayBlbmQKCglmdW5jdGlvbiBjaGVja19wZXJtbGlua19jb25k
aXRpb25zICgkcGwsICRhcnRpY2xlX2FycmF5KSB7CgkJaWYgKGVtcHR5KCRhcnRpY2xlX2Fy
cmF5WydzZWN0aW9uJ10pKSAkYXJ0aWNsZV9hcnJheVsnc2VjdGlvbiddID0gQCRhcnRpY2xl
X2FycmF5WydTZWN0aW9uJ107CgkJaWYgKGVtcHR5KCRhcnRpY2xlX2FycmF5WydjYXRlZ29y
eTEnXSkpICRhcnRpY2xlX2FycmF5WydjYXRlZ29yeTEnXSA9IEAkYXJ0aWNsZV9hcnJheVsn
Q2F0ZWdvcnkxJ107CgkJaWYgKGVtcHR5KCRhcnRpY2xlX2FycmF5WydjYXRlZ29yeTInXSkp
ICRhcnRpY2xlX2FycmF5WydjYXRlZ29yeTInXSA9IEAkYXJ0aWNsZV9hcnJheVsnQ2F0ZWdv
cnkyJ107CgoJCWlmIChAJHBsWydzZXR0aW5ncyddWydjb25fY2F0ZWdvcnknXSAmJiAoJHBs
WydzZXR0aW5ncyddWydjb25fY2F0ZWdvcnknXSAhPSAkYXJ0aWNsZV9hcnJheVsnY2F0ZWdv
cnkxJ10gfHwgJHBsWydzZXR0aW5ncyddWydjb25fY2F0ZWdvcnknXSAhPSAkYXJ0aWNsZV9h
cnJheVsnY2F0ZWdvcnkyJ10pKQoJCQlyZXR1cm4gZmFsc2U7CgkJaWYgKEAkcGxbJ3NldHRp
bmdzJ11bJ2Nvbl9zZWN0aW9uJ10gJiYgJHBsWydzZXR0aW5ncyddWydjb25fc2VjdGlvbidd
ICE9ICRhcnRpY2xlX2FycmF5WydzZWN0aW9uJ10pCgkJCXJldHVybiBmYWxzZTsKCgkJcmV0
dXJuIHRydWU7Cgl9CgoJZnVuY3Rpb24gX3Blcm1saW5rdXJsICgkYXJ0aWNsZV9hcnJheSwg
JHR5cGUgPSBQRVJNTElOS1VSTCwgJHBsX2luZGV4ID0gTlVMTCkgewoJCWdsb2JhbCAkcHJl
dGV4dCwgJHByZWZzLCAkcHJvZHVjdGlvbl9zdGF0dXM7CgoJCWlmICgkdHlwZSA9PSBQQUdF
TElOS1VSTCkKCQkJcmV0dXJuICR0aGlzLT50b2dnbGVfY3VzdG9tX3VybF9mdW5jKCdwYWdl
bGlua3VybCcsICRhcnRpY2xlX2FycmF5KTsKCgkJaWYgKGVtcHR5KCRhcnRpY2xlX2FycmF5
KSkgcmV0dXJuOwoKCQlpZiAoJHBsX2luZGV4KQoJCQkkcGwgPSAkdGhpcy0+Z2V0X3Blcm1s
aW5rKCRwbF9pbmRleCk7CgkJZWxzZSB7CgkJCS8vIEdldCB0aGUgbWF0Y2hlZCBwcmV0ZXh0
IHJlcGxhY2VtZW50IGFycmF5LgoJCQkkbWF0Y2hlZCA9IChjb3VudCgkdGhpcy0+bWF0Y2hl
ZF9wZXJtbGluaykpCgkJCT8gJHRoaXMtPm1hdGNoZWRfcGVybWxpbmsKCQkJOiBAYXJyYXlf
c2hpZnQoYXJyYXlfc2xpY2UoJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcywgLTEpKTsKCgkJCWlm
ICghaXNzZXQoJHBsKSAmJiAkbWF0Y2hlZCAmJiBhcnJheV9rZXlfZXhpc3RzKCdpZCcsICRt
YXRjaGVkKSkgewoJCQkJLy8gVGhlIHBlcm1saW5rIGlkIGlzIHN0b3JlZCBpbiB0aGUgcHJl
dGV4dCByZXBsYWNlbWVudCBhcnJheSwgc28gd2UgY2FuIGZpbmQgdGhlIHBlcm1saW5rLgoJ
CQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkbWF0Y2hlZFsncGVybWxpbmtfaWQnXSk7
CgkJCQlmb3JlYWNoICgkcGxbJ2NvbXBvbmVudHMnXSBhcyAkcGxfYykKCQkJCQlpZiAoaW5f
YXJyYXkoJHBsX2NbJ3R5cGUnXSwgYXJyYXkoJ2ZlZWQnLCAncGFnZScpKSB8fCAhJHRoaXMt
PmNoZWNrX3Blcm1saW5rX2NvbmRpdGlvbnMoJHBsLCAkYXJ0aWNsZV9hcnJheSkpIHsKCQkJ
CQkJdW5zZXQoJHBsKTsKCQkJCQkJYnJlYWs7CgkJCQkJfQoJCQl9CgoJCQlpZiAoIWlzc2V0
KCRwbCkpIHsKCQkJCS8vIFdlIGhhdmUgbm8gcGVybWxpbmsgaWQgc28gZ3JhYiB0aGUgcGVy
bWxpbmsgd2l0aCB0aGUgaGlnaGVzdCBwcmVjZWRlbmNlLgoJCQkJJHBlcm1saW5rcyA9ICR0
aGlzLT5nZXRfYWxsX3Blcm1saW5rcygxLCBhcnJheSgnZmVlZCcsICdwYWdlJykpOwoJCQkJ
Zm9yZWFjaCAoJHBlcm1saW5rcyBhcyAka2V5ID0+ICRwbCkKCQkJCQlpZiAoISR0aGlzLT5j
aGVja19wZXJtbGlua19jb25kaXRpb25zKCRwbCwgJGFydGljbGVfYXJyYXkpKQoJCQkJCQl1
bnNldCgkcGVybWxpbmtzWyRrZXldKTsKCQkJCSRwbCA9IGFycmF5X3NoaWZ0KCRwZXJtbGlu
a3MpOwoJCQl9CgkJfQoKCQkkdXJpID0gJyc7CgoJCWlmIChpc19hcnJheSgkcGwpICYmIGFy
cmF5X2tleV9leGlzdHMoJ2NvbXBvbmVudHMnLCAkcGwpKSB7CgkJCWV4dHJhY3QoJGFydGlj
bGVfYXJyYXkpOwoKCQkJaWYgKCFpc3NldCgkdGl0bGUpKSAkdGl0bGUgPSAkVGl0bGU7CgkJ
CWlmIChlbXB0eSgkdXJsX3RpdGxlKSkgJHVybF90aXRsZSA9IHN0cmlwU3BhY2UoJHRpdGxl
KTsKCQkJaWYgKGVtcHR5KCRzZWN0aW9uKSkgJHNlY3Rpb24gPSAkU2VjdGlvbjsKCQkJaWYg
KGVtcHR5KCRwb3N0ZWQpKSAkcG9zdGVkID0gJFBvc3RlZDsKCQkJaWYgKGVtcHR5KCRhdXRo
b3JpZCkpICRhdXRob3JpZCA9IEAkQXV0aG9ySUQ7CgkJCWlmIChlbXB0eSgkY2F0ZWdvcnkx
KSkgJGNhdGVnb3J5MSA9IEAkQ2F0ZWdvcnkxOwoJCQlpZiAoZW1wdHkoJGNhdGVnb3J5Mikp
ICRjYXRlZ29yeTIgPSBAJENhdGVnb3J5MjsKCQkJaWYgKGVtcHR5KCR0aGlzaWQpKSAkdGhp
c2lkID0gJElEOwoKCQkJJHBsX2NvbXBvbmVudHMgPSAkcGxbJ2NvbXBvbmVudHMnXTsKCgkJ
CS8vIENoZWNrIHRvIHNlZSBpZiB0aGVyZSBpcyBhIHRpdGxlIGNvbXBvbmVudC4KCQkJJHRp
dGxlID0gZmFsc2U7CgkJCWZvcmVhY2goJHBsX2NvbXBvbmVudHMgYXMgJHBsX2MpCgkJCQlp
ZiAoJHBsX2NbJ3R5cGUnXSA9PSAndGl0bGUnIHx8ICRwbF9jWyd0eXBlJ10gPT0gJ2lkJykK
CQkJCQkkdGl0bGUgPSB0cnVlOwoKCQkJLy8gSWYgdGhlcmUgaXNuJ3QgYSB0aXRsZSBjb21w
b25lbnQgdGhlbiB3ZSBuZWVkIHRvIGFwcGVuZCBvbmUgdG8gdGhlIGVuZCBvZiB0aGUgVVJJ
CgkJCWlmICghJHRpdGxlICYmICR0aGlzLT5wcmVmKCdhdXRvbWF0aWNhbGx5X2FwcGVuZF90
aXRsZScpKQoJCQkJJHBsX2NvbXBvbmVudHNbXSA9IGFycmF5KCd0eXBlJyA9PiAndGl0bGUn
LCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4gJycsICdyZWdleCcgPT4gJycsICd0ZXh0
JyA9PiAnJyk7CgoJCQkkdXJpID0gcnRyaW0oZG9TdHJpcChAJHByZXRleHRbJ3N1YnBhdGgn
XSksICcvJyk7CgkJCWZvcmVhY2ggKCRwbF9jb21wb25lbnRzIGFzICRwbF9jKSB7CgkJCQkk
dXJpIC49ICcvJzsKCgkJCQkkdHlwZSA9ICRwbF9jWyd0eXBlJ107CgkJCQlzd2l0Y2ggKCR0
eXBlKSB7CgkJCQkJY2FzZSAnY2F0ZWdvcnknOgoJCQkJCQlpZiAoIUAkcGxfY1snY2F0ZWdv
cnknXSkgJHBsX2NbJ2NhdGVnb3J5J10gPSAxOwoJCQkJCQkkcHJpbWFyeSA9ICdjYXRlZ29y
eScuICRwbF9jWydjYXRlZ29yeSddOwoJCQkJCQkkc2Vjb25kYXJ5ID0gJ2NhdGVnb3J5Jy4g
KDMtKGludCkkcGxfY1snY2F0ZWdvcnknXSk7CgkJCQkJCSRjaGVja19jb250ZXh0ID0gKCR0
aGlzLT5wcmVmKCdqb2luX3ByZXRleHRfdG9fcGFnZWxpbmtzJykgJiYgJHRoaXMtPnByZWYo
J2NoZWNrX3ByZXRleHRfY2F0ZWdvcnlfY29udGV4dCcpKTsKCQkJCQkJaWYgKCEkY2hlY2tf
Y29udGV4dCB8fCAkJHByaW1hcnkgPT0gJHByZXRleHRbJ2MnXSkKCQkJCQkJCSR1cmlfYyA9
ICQkcHJpbWFyeTsKCQkJCQkJZWxzZSBpZiAoISRjaGVja19jb250ZXh0IHx8ICQkc2Vjb25k
YXJ5ID09ICRwcmV0ZXh0WydjJ10pCgkJCQkJCQkkdXJpX2MgPSAkJHNlY29uZGFyeTsKCQkJ
CQkJZWxzZSBpZiAoJHRoaXMtPnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rp
b25fc3RhdHVzLCBhcnJheSgnZGVidWcnLCAndGVzdGluZycpKSkKCQkJCQkJCSR1cmlfYyA9
ICctLUlOVkFMSURfQ0FURUdPUlktLSc7CgkJCQkJCWVsc2UgewoJCQkJCQkJdW5zZXQoJHVy
aSk7CgkJCQkJCQlicmVhayAyOwoJCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAnc2Vj
dGlvbic6CgkJCQkJCSRjaGVja19jb250ZXh0ID0gKCR0aGlzLT5wcmVmKCdqb2luX3ByZXRl
eHRfdG9fcGFnZWxpbmtzJykgJiYgJHRoaXMtPnByZWYoJ2NoZWNrX3ByZXRleHRfc2VjdGlv
bl9jb250ZXh0JykpOwoJCQkJCQlpZiAoISRjaGVja19jb250ZXh0IHx8ICRzZWN0aW9uID09
ICRwcmV0ZXh0WydzJ10pCgkJCQkJCQkkdXJpX2MgPSAkc2VjdGlvbjsKCQkJCQkJZWxzZSB7
CgkJCQkJCQl1bnNldCgkdXJpKTsKCQkJCQkJCWJyZWFrIDI7CgkJCQkJCX0KCQkJCQlicmVh
azsKCQkJCQljYXNlICd0aXRsZSc6ICR1cmlfYyA9ICR1cmxfdGl0bGU7IGJyZWFrOwoJCQkJ
CWNhc2UgJ2lkJzogJHVyaV9jID0gJHRoaXNpZDsgYnJlYWs7CgkJCQkJY2FzZSAnYXV0aG9y
JzogJHVyaV9jID0gc2FmZV9maWVsZCgnUmVhbE5hbWUnLCAndHhwX3VzZXJzJywgIm5hbWUg
bGlrZSAneyRhdXRob3JpZH0nIik7IGJyZWFrOwoJCQkJCWNhc2UgJ2xvZ2luJzogJHVyaV9j
ID0gJGF1dGhvcmlkOyBicmVhazsKCQkJCQljYXNlICdkYXRlJzogJHVyaV9jID0gZXhwbG9k
ZSgnLycsIGRhdGUoJ1kvbS9kJywgJHBvc3RlZCkpOyBicmVhazsKCQkJCQljYXNlICd5ZWFy
JzogJHVyaV9jID0gZGF0ZSgnWScsICRwb3N0ZWQpOyBicmVhazsKCQkJCQljYXNlICdtb250
aCc6ICR1cmlfYyA9IGRhdGUoJ20nLCAkcG9zdGVkKTsgYnJlYWs7CgkJCQkJY2FzZSAnZGF5
JzogJHVyaV9jID0gZGF0ZSgnZCcsICRwb3N0ZWQpOyBicmVhazsKCQkJCQljYXNlICdjdXN0
b20nOgoJCQkJCQlpZiAoJHVyaV9jID0gQCRhcnRpY2xlX2FycmF5WyRwcmVmc1siY3VzdG9t
X3skcGxfY1snY3VzdG9tJ119X3NldCJdXSk7CgkJCQkJCWVsc2UgaWYgKCR1cmlfYyA9IEAk
YXJ0aWNsZV9hcnJheVsiY3VzdG9tX3skcGxfY1snY3VzdG9tJ119Il0pOwoJCQkJCQllbHNl
IGlmICgkdGhpcy0+cHJlZignZGVidWcnKSAmJiBpbl9hcnJheSgkcHJvZHVjdGlvbl9zdGF0
dXMsIGFycmF5KCdkZWJ1ZycsICd0ZXN0aW5nJykpKQoJCQkJCQkJJHVyaV9jID0gJy0tVU5T
RVRfQ1VTVE9NX0ZJRUxELS0nOwoJCQkJCQllbHNlIHsKCQkJCQkJCXVuc2V0KCR1cmkpOwoJ
CQkJCQkJYnJlYWsgMjsKCQkJCQkJfQoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3RleHQnOiAk
dXJpX2MgPSAkcGxfY1sndGV4dCddOyBicmVhazsKCQkJCQljYXNlICdyZWdleCc6CgkJCQkJ
CS8vIENoZWNrIHRvIHNlZSBpZiByZWdleCBpcyB2YWxpZCB3aXRob3V0IG91dHB1dHRpbmcg
ZXJyb3IgbWVzc2FnZXMuCgkJCQkJCW9iX3N0YXJ0KCk7CgkJCQkJCXByZWdfbWF0Y2goJHBs
X2NbJ3JlZ2V4J10sICRwbF9jWydyZWdleCddLCAkcmVnZXhfbWF0Y2hlcyk7CgkJCQkJCSRp
c192YWxpZF9yZWdleCA9ICEob2JfZ2V0X2NsZWFuKCkpOwoJCQkJCQlpZiAoJGlzX3ZhbGlk
X3JlZ2V4KSB7CgkJCQkJCQkka2V5ID0gInBlcm1saW5rX3JlZ2V4X3skcGxfY1snbmFtZSdd
fSI7CgkJCQkJCQkkdXJpX2MgPSAoYXJyYXlfa2V5X2V4aXN0cygka2V5LCAkcHJldGV4dCkp
ID8gJHByZXRleHRbJGtleV0gOiAkcmVnZXhfbWF0Y2hlc1swXTsKCQkJCQkJfSBlbHNlIGlm
ICgkdGhpcy0+cHJlZignZGVidWcnKSkKCQkJCQkJCSR1cmlfYyA9ICctLUlOVkFMSURfUkVH
RVgtLSc7CgkJCQkJYnJlYWs7CgkJCQl9CgoJCQkJaWYgKGVtcHR5KCR1cmlfYykpCgkJCQkJ
aWYgKCR0aGlzLT5wcmVmKCdkZWJ1ZycpICYmIGluX2FycmF5KCRwcm9kdWN0aW9uX3N0YXR1
cywgYXJyYXkoJ2RlYnVnJywgJ3Rlc3RpbmcnKSkpCgkJCQkJCSR1cmlfYyA9ICctLVBFUk1M
SU5LX0ZPUk1BVF9FUlJPUi0tJzsKCQkJCQllbHNlIHsKCQkJCQkJdW5zZXQoJHVyaSk7CgkJ
CQkJCWJyZWFrOwoJCQkJCX0KCgkJCQlpZiAoQCRwbF9jWydwcmVmaXgnXSkKCQkJCQkkdXJp
IC49ICR0aGlzLT5lbmNvZGVfdXJsKCRwbF9jWydwcmVmaXgnXSk7CgoJCQkJaWYgKGlzX2Fy
cmF5KCR1cmlfYykpIHsKCQkJCQlmb3JlYWNoICgkdXJpX2MgYXMgJHVyaV9jMikKCQkJCQkJ
JHVyaSAuPSAkdGhpcy0+ZW5jb2RlX3VybCgkdXJpX2MyKSAuICcvJzsKCQkJCQkkdXJpID0g
cnRyaW0oJHVyaSwgJy8nKTsKCQkJCX0gZWxzZQoJCQkJCSR1cmkgLj0gJHRoaXMtPmVuY29k
ZV91cmwoJHVyaV9jKTsKCgkJCQlpZiAoQCRwbF9jWydzdWZmaXgnXSkKCQkJCQkkdXJpIC49
ICR0aGlzLT5lbmNvZGVfdXJsKCRwbF9jWydzdWZmaXgnXSk7CgoJCQkJdW5zZXQoJHVyaV9j
KTsKCQkJfQoKCQkJaWYgKGlzc2V0KCR1cmkpKQoJCQkJJHVyaSAuPSAnLyc7CgkJfQoKCQlp
ZiAoJHVyaV9lbXB0eSA9IGVtcHR5KCR1cmkpKSB7CgkJCS8vIEl0IGlzIHBvc3NpYmxlIHRo
ZSB1cmkgaXMgc3RpbGwgZW1wdHkgaWYgdGhlcmUgaXMgbm8gbWF0Y2ggb3IgaWYgd2UncmUg
dXNpbmcKCQkJLy8gc3RyaWN0IG1hdGNoaW5nIGlmIHNvIHRyeSB0aGUgZGVmYXVsdCBwZXJt
bGluayBtb2RlLgoJCQkkdXJpID0gJHRoaXMtPnRvZ2dsZV9wZXJtbGlua19tb2RlKCdwZXJt
bGlua3VybCcsICRhcnRpY2xlX2FycmF5KTsKCQl9CgoJCWlmICgkdGhpcy0+cHJlZignb21p
dF90cmFpbGluZ19zbGFzaCcpKQoJCQkkdXJpID0gcnRyaW0oJHVyaSwgJy8nKTsKCgkJaWYg
KCEkdXJpX2VtcHR5ICYmIGluX2FycmF5KHR4cGF0aC4nL3B1Ymxpc2gvcnNzLnBocCcsIGdl
dF9pbmNsdWRlZF9maWxlcygpKSB8fCBpbl9hcnJheSh0eHBhdGguJy9wdWJsaXNoL2F0b20u
cGhwJywgZ2V0X2luY2x1ZGVkX2ZpbGVzKCkpIHx8IHR4cGludGVyZmFjZSA9PSAnYWRtaW4n
KSB7CgkJCSRob3N0ID0gcnRyaW0oc3RyX3JlcGxhY2UocnRyaW0oZG9TdHJpcChAJHByZXRl
eHRbJ3N1YnBhdGgnXSksICcvJyksICcnLCBodSksICcvJyk7CgkJCSR1cmkgPSAkaG9zdCAu
ICR1cmk7CgkJfQoKCQlyZXR1cm4gKCR0aGlzLT5wcmVmKCdmb3JjZV9sb3dlcmNhc2VfdXJs
cycpKSA/IHN0cnRvbG93ZXIoJHVyaSkgOiAkdXJpOwoJfQoKCWZ1bmN0aW9uIF9wYWdlbGlu
a3VybCAoJHBhcnRzKSB7CgkJZXh0cmFjdChsQXR0cyhhcnJheSgKCQkJJ3BhdGgnCQk9PiAn
aW5kZXgucGhwJywKCQkJJ3F1ZXJ5JwkJPT4gJycsCgkJCSdmcmFnbWVudCcJPT4gJycsCgkJ
KSwgcGFyc2VfdXJsKGh0bWxfZW50aXR5X2RlY29kZShzdHJfcmVwbGFjZSgnJiMzODsnLCAn
JicsICRwYXJ0c1syXSkpKSkpOwoKCQkvLyBUaWR5IHVwIGxpbmtzIGJhY2sgdG8gdGhlIHNp
dGUgaG9tZXBhZ2UKCQlpZiAoJHBhdGggPT0gJ2luZGV4LnBocCcgJiYgZW1wdHkoJHF1ZXJ5
KSkKCQkJcmV0dXJuICdocmVmPSInIC5odS4gJyInOwoKCQkvLyBGaXggbWF0Y2hlcyBsaWtl
IGhyZWY9Ij9zPWZvbyIKCQllbHNlIGlmICgkcGF0aCAmJiBlbXB0eSgkcXVlcnkpICYmICRw
YXJ0c1sxXSA9PSAnPycpIHsKCQkJJHF1ZXJ5ID0gJHBhdGg7CgkJCSRwYXRoID0gJ2luZGV4
LnBocCc7CgkJfQoKCQkvLyBDaGVjayB0byBzZWUgaWYgdGhlcmUgaXMgcXVlcnkgdG8gd29y
ayB3aXRoLgoJCWVsc2UgaWYgKGVtcHR5KCRxdWVyeSkgfHwgJHBhdGggIT0gJ2luZGV4LnBo
cCcgfHwgc3RycG9zKCRxdWVyeSwgJy8nKSA9PT0gdHJ1ZSkKCQkJcmV0dXJuICRwYXJ0c1sw
XTsKCgkJLy8gJyZhbXA7JyB3aWxsIGJyZWFrIHBhcnNlX3N0cigpIGlmIHRoZXkgYXJlIGZv
dW5kIGluIGEgcXVlcnkgc3RyaW5nCgkJJHF1ZXJ5ID0gc3RyX3JlcGxhY2UoJyZhbXA7Jywg
JyYnLCAkcXVlcnkpOwoKCQlpZiAoJGZyYWdtZW50KQoJCQkkZnJhZ21lbnQgPSAnIycuJGZy
YWdtZW50OwoKCQlnbG9iYWwgJHByZXRleHQ7CgkJcGFyc2Vfc3RyKCRxdWVyeSwgJHF1ZXJ5
X3BhcnQpOwoJCWlmICghYXJyYXlfa2V5X2V4aXN0cygncGcnLCAkcXVlcnlfcGFydCkpCgkJ
CSRxdWVyeV9wYXJ0WydwZyddID0gMDsKCQlpZiAoIWFycmF5X2tleV9leGlzdHMoJ2lkJywg
JHF1ZXJ5X3BhcnQpKQoJCQkkcXVlcnlfcGFydFsnaWQnXSA9IDA7CgkJaWYgKCFhcnJheV9r
ZXlfZXhpc3RzKCdyc3MnLCAkcXVlcnlfcGFydCkpCgkJCSRxdWVyeV9wYXJ0Wydyc3MnXSA9
IDA7CgkJaWYgKCFhcnJheV9rZXlfZXhpc3RzKCdhdG9tJywgJHF1ZXJ5X3BhcnQpKQoJCQkk
cXVlcnlfcGFydFsnYXRvbSddID0gMDsKCQlpZiAoJHRoaXMtPnByZWYoJ2pvaW5fcHJldGV4
dF90b19wYWdlbGlua3MnKSkKCQkJZXh0cmFjdChhcnJheV9tZXJnZSgkcHJldGV4dCwgJHF1
ZXJ5X3BhcnQpKTsKCQllbHNlCgkJCWV4dHJhY3QoJHF1ZXJ5X3BhcnQpOwoKCQkvLyBXZSBo
YXZlIGEgaWQsIHBhc3MgdG8gcGVybWxpbmt1cmwoKQoJCWlmICgkaWQpIHsKCQkJaWYgKEAk
cyA9PSAnZmlsZV9kb3dubG9hZCcpIHsKCQkJCSR0aXRsZSA9ICh2ZXJzaW9uX2NvbXBhcmUo
JGRidmVyc2lvbiwgJzQuMicsICc+PScpKSA/IE5VTEwgOiBzYWZlX2ZpZWxkKCdmaWxlbmFt
ZScsICd0eHBfZmlsZScsICJpZCA9ICd7JGlkfSciKTsKCQkJCSR1cmwgPSAkdGhpcy0+dG9n
Z2xlX3Blcm1saW5rX21vZGUoJ2ZpbGVkb3dubG9hZHVybCcsIGFycmF5KCRpZCwgJHRpdGxl
KSwgdHJ1ZSk7CgkJCX0gZWxzZSB7CgkJCQkkcnMgPSBzYWZlX3JvdygnKiwgSUQgYXMgdGhp
c2lkLCB1bml4X3RpbWVzdGFtcChQb3N0ZWQpIGFzIHBvc3RlZCcsICd0ZXh0cGF0dGVybics
ICJJRCA9ICd7JGlkfSciKTsKCQkJCSR1cmwgPSAkdGhpcy0+X3Blcm1saW5rdXJsKCRycywg
UEVSTUxJTktVUkwpIC4gJGZyYWdtZW50OwoJCQl9CgkJCXJldHVybiAnaHJlZj0iJy4gJHVy
bCAuJyInOwoJCX0KCgkJaWYgKEAkcyA9PSAnZGVmYXVsdCcpCgkJCXVuc2V0KCRzKTsKCgkJ
Ly8gU29tZSBUeFAgdGFncywgZS5nLiA8dHhwOmZlZWRfbGluayAvPiB1c2UgJ3NlY3Rpb24n
IG9yICdjYXRlZ29yeScgaW5jb25zaXN0ZW50CgkJLy8gd2l0aCBtb3N0IG90aGVyIHRhZ3Mu
IFByb2Nlc3MgdGhlc2Ugbm93IHNvIHdlIG9ubHkgaGF2ZSB0byBjaGVjayAkcyBhbmQgJGMu
CgkJaWYgKEAkc2VjdGlvbiAmJiAhJHMpCgkJCSRzID0gJHNlY3Rpb247CgkJaWYgKEAkY2F0
ZWdvcnkgJiYgISRjKQoJCQkkYyA9ICRjYXRlZ29yeTsKCgkJLy8gRGVidWdnaW5nIGZvciBi
dWZmZXJzCgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3VybDogJy5zdHJfcmVwbGFjZSgn
JmFtcDsnLCAnJicsICRwYXJ0c1sxXS4kcGFydHNbMl0pOwoJCSR0aGlzLT5idWZmZXJfZGVi
dWdbXSA9ICdwYXRoOiAnLiRwYXRoOwoJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdxdWVy
eTogJy4kcXVlcnk7CgkJaWYgKCRmcmFnbWVudCkgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0g
J2ZyYWdtZW50OiAnLiRmcmFnbWVudDsKCgkJaWYgKEAkaWQpICR0aGlzLT5idWZmZXJfZGVi
dWdbXSA9ICdpZDogJy4kaWQ7CgkJaWYgKEAkcykgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0g
J3M6ICcuJHM7CgkJaWYgKEAkYykgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ2M6ICcuJGM7
CgkJaWYgKEAkcnNzKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncnNzOiAnLiRyc3M7CgkJ
aWYgKEAkYXRvbSkgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ2F0b206ICcuJGF0b207CgkJ
aWYgKEAkcGcpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdwZzogJy4kcGc7CgkJaWYgKEAk
cSkgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3E6ICcuJHE7CgoJCWlmIChAJHByZXRleHRb
J3Blcm1saW5rX292ZXJyaWRlJ10pIHsKCQkJJG92ZXJyaWRlX2lkcyA9IGV4cGxvZGUoJywn
LCAkcHJldGV4dFsncGVybWxpbmtfb3ZlcnJpZGUnXSk7CgkJCWZvcmVhY2ggKCRvdmVycmlk
ZV9pZHMgYXMgJG92ZXJyaWRlX2lkKSB7CgkJCQkkcGwgPSAkdGhpcy0+Z2V0X3Blcm1saW5r
KCRvdmVycmlkZV9pZCk7CgkJCQlpZiAoY291bnQoJHBsKSA+IDApICRwZXJtbGlua3NbXSA9
ICRwbDsKCQkJfQoJCX0KCgkJaWYgKGVtcHR5KCRwZXJtbGlua3MpKSB7CgkJCSRwZXJtbGlu
a3MgPSAkdGhpcy0+Z2V0X2FsbF9wZXJtbGlua3MoMSk7CgoJCQkkcGVybWxpbmtzWydnYnBf
cGVybWFuZW50X2xpbmtzX2RlZmF1bHQnXSA9IGFycmF5KAoJCQkJJ2NvbXBvbmVudHMnID0+
IGFycmF5KAoJCQkJCWFycmF5KCd0eXBlJyA9PiAndGV4dCcsICd0ZXh0JyA9PiBzdHJ0b2xv
d2VyKHVybGVuY29kZShnVHh0KCdjYXRlZ29yeScpKSkpLAoJCQkJCWFycmF5KCd0eXBlJyA9
PiAnY2F0ZWdvcnknKSwKCQkJCSksCgkJCQknc2V0dGluZ3MnID0+IGFycmF5KAoJCQkJCSdw
bF9uYW1lJyA9PiAnZ2JwX3Blcm1hbmVudF9saW5rc19kZWZhdWx0JywgJ3BsX3ByZWNlZGVu
Y2UnID0+ICcnLCAncGxfcHJldmlldycgPT4gJycsCgkJCQkJJ2Nvbl9zZWN0aW9uJyA9PiAn
JywgJ2Nvbl9jYXRlZ29yeScgPT4gJycsICdkZXNfc2VjdGlvbicgPT4gJycsICdkZXNfY2F0
ZWdvcnknID0+ICcnLAoJCQkJCSdkZXNfcGVybWxpbmsnID0+ICcnLCAnZGVzX2ZlZWQnID0+
ICcnLCAnZGVzX2xvY2F0aW9uJyA9PiAnJywKCQkJKSk7CgkJfQoKCQkkY3VycmVudF9zZWdt
ZW50cyA9IGV4cGxvZGUoJy8nLCBsdHJpbSgkcHJldGV4dFsncmVxdWVzdF91cmknXSwgJy8n
KSk7CgoJCSRoaWdoZXN0X21hdGNoX2NvdW50ID0gbnVsbDsKCQlmb3JlYWNoICgkcGVybWxp
bmtzIGFzICRrZXkgPT4gJHBsKSB7CgkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdUZXN0
aW5nIHBlcm1saW5rOiAnLiAkcGxbJ3NldHRpbmdzJ11bJ3BsX25hbWUnXSAuJyAtICcuICRr
ZXk7CgkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdQcmV2aWV3OiAnLiAkcGxbJ3NldHRp
bmdzJ11bJ3BsX3ByZXZpZXcnXTsKCQkJJG91dCA9IGFycmF5KCk7ICRrZXlzID0gYXJyYXko
KTsgJG1hdGNoX2NvdW50ID0gMDsKCQkJZm9yZWFjaCAoJHBsWydjb21wb25lbnRzJ10gYXMg
JGkgPT4gJHBsX2MpIHsKCQkJCXN3aXRjaCAoJHBsX2NbJ3R5cGUnXSkgewoJCQkJCWNhc2Ug
J3RleHQnOgoJCQkJCQkkb3V0W10gPSAkcGxfY1sndGV4dCddOwoJCQkJCWJyZWFrOwoJCQkJ
CWNhc2UgJ3JlZ2V4JzoKCQkJCQkJJG91dFtdID0gJHByZXRleHRbJ3Blcm1saW5rX3JlZ2V4
XycuJHBsX2NbJ25hbWUnXV07CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAnc2VjdGlvbic6CgkJ
CQkJCWlmIChAJHMpICRvdXRbXSA9ICRzOwoJCQkJCQllbHNlIGJyZWFrIDI7CgkJCQkJYnJl
YWs7CgkJCQkJY2FzZSAnY2F0ZWdvcnknOgoJCQkJCQlpZiAoQCRjKSAkb3V0W10gPSAkYzsK
CQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ2ZlZWQnOgoJCQkJ
CQlpZiAoQCRyc3MpICRrZXlzW10gPSAkb3V0W10gPSAncnNzJzsKCQkJCQkJZWxzZSBpZiAo
QCRhdG9tKSAka2V5c1tdID0gJG91dFtdID0gJ2F0b20nOwoJCQkJCQllbHNlIGJyZWFrIDI7
CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAnc2VhcmNoJzoKCQkJCQkJaWYgKEAkcSkgJG91dFtd
ID0gJHE7CgkJCQkJCWVsc2UgYnJlYWsgMjsKCQkJCQlicmVhazsKCQkJCQljYXNlICdwYWdl
JzoKCQkJCQkJaWYgKEAkcGcpIHsKCQkJCQkJCSRvdXRbXSA9ICRwZzsKCQkJCQkJCSRrZXlz
W10gPSAncGcnOwoJCQkJCQl9CgkJCQkJCWVsc2UgYnJlYWsgMjsKCQkJCQlicmVhazsKCQkJ
CQlkZWZhdWx0OiBicmVhayAyOwoJCQkJfQoJCQkJaWYgKGluX2FycmF5KCRwbF9jWyd0eXBl
J10sIGFycmF5KCd0ZXh0JywgJ3JlZ2V4JykpKSB7CgkJCQkJaWYgKCRjdXJyZW50X3NlZ21l
bnRzWyRpXSA9PSBlbmQoJG91dCkgJiYgc3RybGVuKGVuZCgkb3V0KSkgPiAwKQoJCQkJCQkk
bWF0Y2hfY291bnQgKz0gJHRoaXMtPnByZWYoJ3RleHRfYW5kX3JlZ2V4X3NlZ21lbnRfc2Nv
cmVzJyk7CgkJCQl9CgkJCQllbHNlaWYgKCFpbl9hcnJheSgkcGxfY1sndHlwZSddLCBhcnJh
eSgndGl0bGUnLCAnaWQnKSkpCgkJCQkJJG1hdGNoX2NvdW50Kys7CgkJCQllbHNlIGJyZWFr
OwoJCQl9CgoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnTWF0Y2ggY291bnQ6ICcuICRt
YXRjaF9jb3VudDsKCgkJCS8vIFRvZG86IFN0b3JlIGFjY29yZGluZyB0byB0aGUgcHJlY2Vk
ZW5jZSB2YWx1ZQoJCQlpZiAoY291bnQoJG91dCkgPiAwICYmICgkbWF0Y2hfY291bnQgPiAk
aGlnaGVzdF9tYXRjaF9jb3VudCB8fCAhaXNzZXQoJGhpZ2hlc3RfbWF0Y2hfY291bnQpKSAm
JgoJCQkhKCRrZXkgPT0gJ2dicF9wZXJtYW5lbnRfbGlua3NfZGVmYXVsdCcgJiYgISRtYXRj
aF9jb3VudCkpIHsKCQkJCWV4dHJhY3QoJHBsWydzZXR0aW5ncyddKTsKCQkJCWlmICgoZW1w
dHkoJHMpICYmIGVtcHR5KCRjKSkgfHwKCQkJCShlbXB0eSgkY29uX3NlY3Rpb24pIHx8IEAk
cyA9PSAkY29uX3NlY3Rpb24pIHx8CgkJCQkoZW1wdHkoJGNvbl9jYXRlZ29yeSkgfHwgQCRj
ID09ICRjb25fY2F0ZWdvcnkpKSB7CgkJCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ05l
dyBoaWdoZXN0IG1hdGNoISAnLiBpbXBsb2RlKCcvJywgJG91dCk7CgkJCQkJJGhpZ2hlc3Rf
bWF0Y2hfY291bnQgPSAkbWF0Y2hfY291bnQ7CgkJCQkJJG1hdGNoID0gJG91dDsKCQkJCQkk
bWF0Y2hfa2V5cyA9ICRrZXlzOwoJCQkJfQoJCQl9CgkJfQoKCQlpZiAoZW1wdHkoJG1hdGNo
KSAmJiAoIShAJHBnICYmICR0aGlzLT5wcmVmKCdjbGVhbl9wYWdlX2FyY2hpdmVfbGlua3Mn
KSkgfHwgKEAkcGcgJiYgQCRxKSkpIHsKCQkJZ2xvYmFsICRwcmVmcywgJHByZXRleHQsICRw
ZXJtbGlua19tb2RlOwoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnTm8gbWF0Y2gnOwoJ
CQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnLS0tLSc7CgkJCSRwcmV0ZXh0WydwZXJtbGlu
a19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICRwcmVmc1sncGVybWxpbmtfbW9kZSddOwoJ
CQkkdXJsID0gcGFnZWxpbmt1cmwoJHF1ZXJ5X3BhcnQpOwoJCQkkcHJldGV4dFsncGVybWxp
bmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAnbWVzc3knOwoJCQlyZXR1cm4gJ2hyZWY9
IicuICR1cmwgLiciJzsKCQl9CgoJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdtYXRjaDog
Jy4gICAgICBzZXJpYWxpemUoJG1hdGNoKTsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAn
bWF0Y2hfa2V5czogJy4gc2VyaWFsaXplKCRtYXRjaF9rZXlzKTsKCgkJJHVybCA9ICcvJy5q
b2luKCcvJywgJG1hdGNoKTsKCQkkdXJsID0gcnRyaW0oaHUsICcvJykucnRyaW0oJHVybCwg
Jy8nKS4nLyc7CgoJCWlmICgkcnNzICYmICFpbl9hcnJheSgncnNzJywgJG1hdGNoX2tleXMp
KQoJCQkkdXJsIC49ICdyc3MnOwoJCWVsc2UgaWYgKCRhdG9tICYmICFpbl9hcnJheSgnYXRv
bScsICRtYXRjaF9rZXlzKSkKCQkJJHVybCAuPSAnYXRvbSc7CgkJZWxzZSBpZiAoJHBnICYm
ICFpbl9hcnJheSgncGcnLCAkbWF0Y2hfa2V5cykpIHsKCQkJaWYgKCR0aGlzLT5wcmVmKCdj
bGVhbl9wYWdlX2FyY2hpdmVfbGlua3MnKSkKCQkJCSR1cmwgLj0gJHBnOwoJCQllbHNlIHsK
CQkJCSR1cmwgLj0gJz9wZz0nLiAkcGc7CgkJCQkkb21pdF90cmFpbGluZ19zbGFzaCA9IHRy
dWU7CgkJCX0KCQl9CgoJCSR1cmwgPSBydHJpbSgkdXJsLCAnLycpIC4gJy8nOwoKCQlpZiAo
QCRvbWl0X3RyYWlsaW5nX3NsYXNoIHx8ICR0aGlzLT5wcmVmKCdvbWl0X3RyYWlsaW5nX3Ns
YXNoJykpCgkJCSR1cmwgPSBydHJpbSgkdXJsLCAnLycpOwoKCQkkdGhpcy0+YnVmZmVyX2Rl
YnVnW10gPSAkdXJsOwoJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICctLS0tJzsKCgkJaWYg
KCRwYXRoID09ICdpbmRleC5waHAnICYmICR1cmwgIT0gaHUpCgkJCXJldHVybiAnaHJlZj0i
Jy4gJHVybCAuICRmcmFnbWVudCAuJyInOwoKCQkvKgoJCTEgPSBpbmRleCwgdGV4dHBhdHRl
cm4vY3NzLCBOVUxMICg9aW5kZXgpCgkJMiA9IGlkLCBzLCBzZWN0aW9uLCBjLCBjYXRlZ29y
eSwgcnNzLCBhdG9tLCBwZywgcSwgKG4sIHAsIG1vbnRoLCBhdXRob3IpCgkJKi8KCgkJcmV0
dXJuICgkdGhpcy0+cHJlZignZm9yY2VfbG93ZXJjYXNlX3VybHMnKSkgPyBzdHJ0b2xvd2Vy
KCRwYXJ0c1swXSkgOiAkcGFydHNbMF07Cgl9CgoJZnVuY3Rpb24gc2V0X3Blcm1saW5rX21v
ZGUgKCRyZXNldF9mdW5jdGlvbiA9IGZhbHNlKSB7CgkJZ2xvYmFsICRwcmVmcywgJHByZXRl
eHQsICRwZXJtbGlua19tb2RlOwoJCSRwcmVmc1snY3VzdG9tX3VybF9mdW5jJ10gPSBhcnJh
eSgmJHRoaXMsICdfcGVybWxpbmt1cmwnKTsKCgkJaWYgKCEkcmVzZXRfZnVuY3Rpb24pCgkJ
CSRwcmV0ZXh0WydwZXJtbGlua19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICdtZXNzeSc7
CgkJZWxzZQoJCQkkcHJldGV4dFsncGVybWxpbmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUg
PSAkcHJlZnNbJ3Blcm1saW5rX21vZGUnXTsKCX0KCglmdW5jdGlvbiByZXNldF9wZXJtbGlu
a19tb2RlICgpIHsKCQlnbG9iYWwgJHByZWZzLCAkcHJldGV4dCwgJHBlcm1saW5rX21vZGU7
CgkJdW5zZXQoJHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXSk7CgkJJHByZXRleHRbJ3Blcm1s
aW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJHByZWZzWydwZXJtbGlua19tb2RlJ107
Cgl9CgoJZnVuY3Rpb24gdG9nZ2xlX2N1c3RvbV91cmxfZnVuYyAoJGZ1bmMsICRhdHRzID0g
TlVMTCwgJHRvb2dsZV9wZXJtbGlua19tb2RlID0gZmFsc2UsICRleHBhbmRfYXJndW1lbnRz
ID0gZmFsc2UpIHsKCQlnbG9iYWwgJHByZWZzLCAkcHJldGV4dDsKCgkJaWYgKCR0b29nbGVf
cGVybWxpbmtfbW9kZSkgewoJCQlnbG9iYWwgJHBlcm1saW5rX21vZGU7CgkJCSRfcGVybWxp
bmtfbW9kZSA9ICRwZXJtbGlua19tb2RlOwoJCX0KCgkJJF9jYWxsX3VzZXJfZnVuYyA9IEAk
cHJlZnNbJ2N1c3RvbV91cmxfZnVuYyddOwoKCQl1bnNldCgkcHJlZnNbJ2N1c3RvbV91cmxf
ZnVuYyddKTsKCQlpZiAoJHRvb2dsZV9wZXJtbGlua19tb2RlKQoJCQkkcHJldGV4dFsncGVy
bWxpbmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAkcHJlZnNbJ3Blcm1saW5rX21vZGUn
XTsKCgkJaWYgKGlzX2NhbGxhYmxlKCRmdW5jKSkgewoJCQlpZiAoaXNfYXJyYXkoJGF0dHMp
IGFuZCAkZXhwYW5kX2FyZ3VtZW50cykKCQkJCSRycyA9IGNhbGxfdXNlcl9mdW5jX2FycmF5
KCRmdW5jLCAkYXR0cyk7CgkJCWVsc2UKCQkJCSRycyA9IGNhbGxfdXNlcl9mdW5jKCRmdW5j
LCAkYXR0cyk7CgkJfQoKCQkkcHJlZnNbJ2N1c3RvbV91cmxfZnVuYyddID0gJF9jYWxsX3Vz
ZXJfZnVuYzsKCgkJaWYgKCR0b29nbGVfcGVybWxpbmtfbW9kZSkKCQkJJHByZXRleHRbJ3Bl
cm1saW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJF9wZXJtbGlua19tb2RlOwoKCQly
ZXR1cm4gJHJzOwoJfQoKCWZ1bmN0aW9uIHRvZ2dsZV9wZXJtbGlua19tb2RlICgkZnVuYywg
JGF0dHMgPSBOVUxMLCAkZXhwYW5kX2FyZ3VtZW50cyA9IGZhbHNlKSB7CgkJcmV0dXJuICR0
aGlzLT50b2dnbGVfY3VzdG9tX3VybF9mdW5jKCRmdW5jLCAkYXR0cywgdHJ1ZSwgJGV4cGFu
ZF9hcmd1bWVudHMpOwoJfQoKCWZ1bmN0aW9uIGVuY29kZV91cmwgKCR0ZXh0KSB7CgkJcmV0
dXJuIHVybGVuY29kZSh0cmltKGR1bWJEb3duKHVybGRlY29kZSgkdGV4dCkpKSk7Cgl9CgoJ
ZnVuY3Rpb24gZGVidWcgKCkgewoJCWlmICgkdGhpcy0+cHJlZignZGVidWcnKSkgewoJCQln
bG9iYWwgJHByb2R1Y3Rpb25fc3RhdHVzOwoJCQkkYSA9IGZ1bmNfZ2V0X2FyZ3MoKTsKCgkJ
CWlmIChAdHhwaW50ZXJmYWNlID09ICdhZG1pbicpCgkJCQlmb3JlYWNoICgkYSBhcyAkdGhp
bmcpCgkJCQkJZG1wKCR0aGluZyk7CgoJCQlpZiAoQHR4cGludGVyZmFjZSA9PSAncHVibGlj
JyAmJiBpbl9hcnJheSgkcHJvZHVjdGlvbl9zdGF0dXMsIGFycmF5KCdkZWJ1ZycsICd0ZXN0
aW5nJykpKQoJCQkJZm9yZWFjaCAoJGEgYXMgJHRoaW5nKQoJCQkJCWVjaG8gY29tbWVudChp
c19zY2FsYXIoJHRoaW5nKSA/IHN0cnZhbCgkdGhpbmcpIDogdmFyX2V4cG9ydCgkdGhpbmcs
IHRydWUpKSxuOwoJCX0KCX0KfQoKY2xhc3MgUGVybWFuZW50TGlua3NCdWlsZFRhYlZpZXcg
ZXh0ZW5kcyBHQlBBZG1pblRhYlZpZXcKewoJdmFyICRwZXJtaXNzaW9ucyA9ICcxLDInOwoJ
ZnVuY3Rpb24gcHJlbG9hZCAoKSB7CgkJcmVnaXN0ZXJfY2FsbGJhY2soYXJyYXkoJiR0aGlz
LCAncG9zdF9zYXZlX3Blcm1saW5rJyksICR0aGlzLT5wYXJlbnQtPmV2ZW50LCBnYnBfc2F2
ZSwgMSk7CgkJcmVnaXN0ZXJfY2FsbGJhY2soYXJyYXkoJiR0aGlzLCAncG9zdF9zYXZlX3Bl
cm1saW5rJyksICR0aGlzLT5wYXJlbnQtPmV2ZW50LCBnYnBfcG9zdCwgMSk7Cgl9CgoJZnVu
Y3Rpb24gbWFpbiAoKSB7CgkJZ2xvYmFsICRwcmVmczsKCQlleHRyYWN0KGdwc2EoYXJyYXko
J3N0ZXAnLCBnYnBfaWQpKSk7CgoJCS8vIFdpdGggaGF2ZSBhbiBJRCwgZWl0aGVyIHRoZSBw
ZXJtbGluayBoYXMganVzdCBiZWVuIHNhdmVkIG9yIHRoZSB1c2VyIHdhbnRzIHRvIGVkaXQg
aXQKCQlpZiAoJGlkKSB7CgkJCS8vIE5ld2x5IHNhdmVkIG9yIGJlZW5pbmcgZWRpdGVkLCBl
aXRoZXIgd2F5IHdlJ3JlIGVkaXRpbmcgYSBwZXJtbGluawoJCQkkc3RlcCA9IGdicF9zYXZl
OwoKCQkJLy8gVXNlIHRoZSBJRCB0byBncmFiIHRoZSBwZXJtbGluayBkYXRhIChjb21wb25l
bnRzICYgc2V0dGluZ3MpCgkJCSRwZXJtbGluayA9ICR0aGlzLT5wYXJlbnQtPmdldF9wZXJt
bGluaygkaWQpOwoJCQkkY29tcG9uZW50cyA9ICR0aGlzLT5waHBBcnJheVRvSnNBcnJheSgn
Y29tcG9uZW50cycsICRwZXJtbGlua1snY29tcG9uZW50cyddKTsKCQkJJHNldHRpbmdzID0g
JHBlcm1saW5rWydzZXR0aW5ncyddOwoJCX0gZWxzZSB7CgkJCS8vIENyZWF0aW5nIGEgbmV3
IElEIGFuZCBwZXJtbGluay4KCQkJJHN0ZXAgPSBnYnBfcG9zdDsKCQkJJGlkID0gdW5pcWlk
KCcnKTsKCgkJCS8vIFNldCB0aGUgZGVmYXVsdCBzZXQgb2YgY29tcG9uZW50cyBkZXBlbmRp
bmcgb24gd2hldGhlciB0aGVyZSBpcyBwYXJlbnQgcGVybWxpbmsKCQkJJGNvbXBvbmVudHMg
PSAkdGhpcy0+cGhwQXJyYXlUb0pzQXJyYXkoJ2NvbXBvbmVudHMnLCBhcnJheSgKCQkJCWFy
cmF5KCd0eXBlJyA9PiAnc2VjdGlvbicsICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAn
JywgJ3JlZ2V4JyA9PiAnJywgJ3RleHQnID0+ICcnKSwKCQkJCWFycmF5KCd0eXBlJyA9PiAn
Y2F0ZWdvcnknLCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4gJycsICdyZWdleCcgPT4g
JycsICd0ZXh0JyA9PiAnJywgJ2NhdGVnb3J5JyA9PiAnMScpLAoJCQkJYXJyYXkoJ3R5cGUn
ID0+ICd0aXRsZScsICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywgJ3JlZ2V4JyA9
PiAnJywgJ3RleHQnID0+ICcnKSwKCQkJKSk7CgoJCQkkc2V0dGluZ3MgPSBhcnJheSgKCQkJ
CSdwbF9uYW1lJyA9PiAnVW50aXRsZWQnLCAncGxfcHJlY2VkZW5jZScgPT4gJzAnLAoJCQkJ
J2Nvbl9zZWN0aW9uJyA9PiAnJywgJ2Nvbl9jYXRlZ29yeScgPT4gJycsCgkJCQknZGVzX3Nl
Y3Rpb24nID0+ICcnLCAnZGVzX2NhdGVnb3J5JyA9PiAnJywgJ2Rlc19wYWdlJyA9PiAnJywK
CQkJCSdkZXNfcGVybWxpbmsnID0+ICcnLCAnZGVzX2ZlZWQnID0+ICcnLCAnZGVzX2xvY2F0
aW9uJyA9PiAnJywKCQkJKTsKCQl9CgoJCS8vIEV4dHJhY3Qgc2V0dGluZ3MgLSB0aGlzIHdp
bGwgYmUgdXNlZnVsIHdoZW4gY3JlYXRpbmcgdGhlIHVzZXIgaW50ZXJmYWNlCgkJZXh0cmFj
dCgkc2V0dGluZ3MpOwoKCQkvLyBQSFAgJiBKYXZhc2NyaXB0IGNvbnN0YW50czsKCQkkc2Vw
YXJhdG9yID0gZ2JwX3NlcGFyYXRvcjsKCQkkY29tcG9uZW50c19kaXYgPSAncGVybWxpbmtf
Y29tcG9uZW50c191aSc7CgkJJGNvbXBvbmVudHNfZm9ybSA9ICdwZXJtbGlua19jb21wb25l
bnRzJzsKCQkkc2V0dGluZ3NfZm9ybSA9ICdwZXJtbGlua19zZXR0aW5ncyc7CgkJJHNob3df
cHJlZml4ID0gJHRoaXMtPnByZWYoJ3Nob3dfcHJlZml4Jyk7CgkJJHNob3dfc3VmZml4ID0g
JHRoaXMtPnByZWYoJ3Nob3dfc3VmZml4Jyk7CgoJCS8vIEEgbGl0dGxlIGNyZWRpdCBoZXJl
IGFuZCB0aGVyZSBkb2Vzbid0IGh1cnQKCQkkb3V0W10gPSAiPCEtLSB7JHRoaXMtPnBhcmVu
dC0+cGx1Z2luX25hbWV9IGJ5IEdyYWVtZSBQb3J0ZW91cyAtLT4iOwoKCQkvLyBUaGUgSmF2
YXNjcmlwdAokb3V0W10gPSA8PDxIVE1MCgk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlw
dCIgbGFuZ3VhZ2U9ImphdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04Ij4KCS8vIDwhW0NEQVRB
WwoKCS8vIEdsb2JhbCB2YXJpYWJsZXMKdmFyIHskY29tcG9uZW50c30vLyBjb21wb25lbnRz
IGFycmF5IGZvciBhbGwgdGhlIGRhdGEKCgl2YXIgX2N1cnJlbnQgPSAwOyAvLyBJbmRleCBv
ZiB0aGUgY29tcG9uZW50cyBhcnJheSwgb2YgdGhlIGN1cnJlbnRseSBzZWxlY3RlZCBjb21w
b25lbnQKCXZhciBjX3ZhbHMgPSBuZXcgQXJyYXkoJ3R5cGUnLCAnY3VzdG9tJywgJ2NhdGVn
b3J5JywgJ25hbWUnLCAncHJlZml4JywgJ3N1ZmZpeCcsICdyZWdleCcsICd0ZXh0Jyk7CgoJ
d2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uKCkgewoJCWNvbXBvbmVudF9yZWZyZXNoX2FsbCgp
OwoJCWNvbXBvbmVudF9zd2l0Y2goY29tcG9uZW50KF9jdXJyZW50KSk7Cgl9CgoJZnVuY3Rp
b24gY29tcG9uZW50X2FkZCAoKSB7CgkJLy8gQ3JlYXRlIGRhdGEgc2V0CgkJdmFyIGRhdGEg
PSBuZXcgQXJyYXkoKTsKCQlmb3IgKGtleSBpbiBjX3ZhbHMpIHsKCQkJZGF0YVtjX3ZhbHNb
a2V5XV0gPSAnJzsKCQl9CgoJCS8vIEFkZCBkYXRhCgkJY29tcG9uZW50cy5wdXNoKGRhdGEp
OwoKCQkvLyBSZXNldCBjb21wb25lbnQgdHlwZSBsaXN0CgkJZm9ybSgneyRjb21wb25lbnRz
X2Zvcm19JykudHlwZS52YWx1ZSA9ICcnOwoKCQkvLyBTd2l0Y2ggdG8gdGhlIG5ldyBjb21w
b25lbnQKCQlfY3VycmVudCA9IGNvbXBvbmVudHMubGVuZ3RoIC0gMTsKCgkJLy8gUmVmcmVz
aCBVSQoJCWNvbXBvbmVudF9yZWZyZXNoX2FsbCgpOwoJCWNvbXBvbmVudF91cGRhdGUoKTsK
CX0KCglmdW5jdGlvbiBjb21wb25lbnRfcmVmcmVzaCAoZWxlbWVudCkgewoJCXZhciBjID0g
Y29tcG9uZW50c1tlbGVtZW50LmlkXTsKCgkJLy8gQ1NTCgkJaWYgKF9jdXJyZW50ID09IGVs
ZW1lbnQuaWQpCgkJCWVsZW1lbnQuc3R5bGVbJ2JhY2tncm91bmRDb2xvciddID0gJ3JnYigy
NDksIDIwNiwgNzMpJzsKCQllbHNlCgkJCWVsZW1lbnQuc3R5bGVbJ2JhY2tncm91bmRDb2xv
ciddID0gJ3JnYigyNTUsIDI1NCwgMjExKSc7CgkJZWxlbWVudC5zdHlsZVsnY29sb3InXSA9
ICdyZ2IoMCwgMCwgMCknOwoJCWVsZW1lbnQuc3R5bGVbJ2ZvbnRGYW1pbHknXSA9ICdBcmlh
bCc7CgkJZWxlbWVudC5zdHlsZVsnZm9udFdlaWdodCddID0gJ2JvbGQnOwoJCWVsZW1lbnQu
c3R5bGVbJ3ZlcnRpY2FsQWxpZ24nXSA9ICdtaWRkbGUnOwoJCWVsZW1lbnQuc3R5bGVbJ3Rl
eHRBbGlnbiddID0gJ2NlbnRlcic7CgkJZWxlbWVudC5zdHlsZVsnbGluZUhlaWdodCddID0g
JzEuNWVtJzsKCQllbGVtZW50LnN0eWxlWydoZWlnaHQnXSA9ICcxLjVlbSc7CgkJZWxlbWVu
dC5zdHlsZVsncGFkZGluZyddID0gJzAgNXB4JzsKCQllbGVtZW50LnN0eWxlWydtYXJnaW5S
aWdodCddID0gJzVweCc7CgkJZWxlbWVudC5zdHlsZVsnY3NzRmxvYXQnXSA9ICdsZWZ0JzsK
CQllbGVtZW50LnN0eWxlWydkaXNwbGF5J10gPSAnaW5saW5lJzsKCgkJLy8gUmVtb3ZlIGFs
bCBjaGlsZCBub2RlcwoJCXdoaWxlIChlbGVtZW50Lmhhc0NoaWxkTm9kZXMoKSkgeyBlbGVt
ZW50LnJlbW92ZUNoaWxkKGVsZW1lbnQuZmlyc3RDaGlsZCk7IH0KCgkJLy8gQ3JlYXRlIHRo
ZSB2aXNpYmxlIHN0cmluZyByZXByZXNlbnRpbmcgdGhpcyBjb21wb25lbnQKCQlzd2l0Y2gg
KGNbJ3R5cGUnXSkgewoJCQljYXNlICcnIDoKCQkJCXN0cmluZyA9ICcvJzsKCQkJCWJyZWFr
OwoJCQljYXNlICdyZWdleCcgOgoJCQljYXNlICd0ZXh0JyA6CgkJCQlzdHJpbmcgPSBjW2Nb
J3R5cGUnXV0gKyAnIC8nOwoJCQkJYnJlYWs7CgkJCWNhc2UgJ2RhdGUnIDoKCQkJCXN0cmlu
ZyA9IGNbJ3R5cGUnXSArICcgLyc7CgkJCQlicmVhazsKCQkJY2FzZSAnY3VzdG9tJyA6CgkJ
CQlzdHJpbmcgPSBjWydwcmVmaXgnXSArICdjdXN0b21fJyArIGNbJ2N1c3RvbSddICsgY1sn
c3VmZml4J10gKyAnIC8nOwoJCQkJYnJlYWs7CgkJCWRlZmF1bHQgOgoJCQkJc3RyaW5nID0g
Y1sncHJlZml4J10gKyBjWyd0eXBlJ10gKyBjWydzdWZmaXgnXSArICcgLyc7CgkJCWJyZWFr
OwoJCX0KCgkJLy8gU2V0IHRoZSB2aXNpYmxlIHN0cmluZwoJCWVsZW1lbnQuYXBwZW5kQ2hp
bGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoc3RyaW5nKSk7CgoJCXJldHVybiBlbGVtZW50
OwoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVudF9yZWZyZXNoX2FsbCAoKSB7CgkJLy8gUmVtb3Zl
IGFsbCBjaGlsZCBub2RlcwoJCXdoaWxlIChwZXJtbGlua19kaXYoKS5oYXNDaGlsZE5vZGVz
KCkpIHsgcGVybWxpbmtfZGl2KCkucmVtb3ZlQ2hpbGQocGVybWxpbmtfZGl2KCkuZmlyc3RD
aGlsZCk7IH0KCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBjb21wb25lbnRzLmxlbmd0aDsgaSsr
KSB7CgkJCXZhciBjID0gY29tcG9uZW50c1tpXTsKCgkJCS8vIENyZWF0ZSB0aGUgbmV3IGNv
bXBvbmVudAoJCQl2YXIgbmV3X2NvbXBvbmVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQo
J2RpdicpOwoKCQkJLy8gU2V0IHRoZSBpZCBpbnRlcmdlciBmb3IgdGhpcyBjb21wb25lbnQK
CQkJbmV3X2NvbXBvbmVudC5pZCA9IGk7CgoJCQkvLyBKYXZhc2NyaXB0LCBvbm1vdXNldXAg
c2V0dGluZwoJCQluZXdfY29tcG9uZW50LnNldEF0dHJpYnV0ZSgnb25tb3VzZWRvd24nLCAn
Y29tcG9uZW50X3N3aXRjaCh0aGlzKTsnKTsKCQkJbmV3X2NvbXBvbmVudC5vbm1vdXNlZG93
biA9IGZ1bmN0aW9uKCkgeyBjb21wb25lbnRfc3dpdGNoKHRoaXMpOyB9OwoKCQkJLy8gUmVm
cmVzaCB0aGUgbG9vayBvZiB0aGUgY29tcG9uZW50CgkJCW5ld19jb21wb25lbnQgPSBjb21w
b25lbnRfcmVmcmVzaChuZXdfY29tcG9uZW50KTsKCgkJCS8vIEFuZCBhZGQgdGhlIG5ldyBj
b21wb25lbnQgdG8gdGhlIHVpCgkJCXBlcm1saW5rX2RpdigpLmFwcGVuZENoaWxkKG5ld19j
b21wb25lbnQpOwoJCX0KCX0KCglmdW5jdGlvbiBjb21wb25lbnRfcmVtb3ZlICgpIHsKCQlp
ZiAoY29tcG9uZW50cy5sZW5ndGggPiAxKSB7CgkJCWNvbXBvbmVudHMuc3BsaWNlKF9jdXJy
ZW50LCAxKTsKCgkJCWlmIChfY3VycmVudCA+PSBjb21wb25lbnRzLmxlbmd0aCkKCQkJCV9j
dXJyZW50ID0gY29tcG9uZW50cy5sZW5ndGggLSAxOwoKCQkJY29tcG9uZW50X3JlZnJlc2hf
YWxsKCk7CgkJfQoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVudF9zd2l0Y2ggKGVsZW1lbnQpIHsK
CQkvLyBVcGRhdGUgY3VycmVudCBpbmRleAoJCV9jdXJyZW50ID0gZWxlbWVudC5pZDsKCgkJ
Ly8gUmVmcmVzaCBVSQoJCWNvbXBvbmVudF9yZWZyZXNoX2FsbCgpOwoKCQkvLyBTZXQgZm9y
bSBpbnB1dCB2YWx1ZXMKCQl2YXIgYyA9IGNvbXBvbmVudHNbX2N1cnJlbnRdOwoJCWZvciAo
a2V5IGluIGNfdmFscykgewoJCQl2YXIgayA9IGNfdmFsc1trZXldOwoJCQl2YXIgZSA9IGZv
cm0oJ3skY29tcG9uZW50c19mb3JtfScpLmVsZW1lbnRzLm5hbWVkSXRlbShrKTsKCgkJCWlm
IChjW2tdKSBlLnZhbHVlID0gY1trXTsKCQkJZWxzZSBlLnZhbHVlID0gJyc7CgkJfQoKCQkv
LyBIaWRlIHVubmVlZGVkIGZvcm0gaW5wdXRzCgkJY29tcG9uZW50X3VwZGF0ZSgpOwoJfQoK
CWZ1bmN0aW9uIGNvbXBvbmVudF91cGRhdGUgKGVsZW1lbnQpIHsKCQkvLyBTdG9yZSB0aGUg
ZGF0YSBpbiBmb3JtIGlucHV0cywgYW5kIGhpZGUgYWxsIGZvcm0gaW5wdXRzCgkJdmFyIGMg
PSBuZXcgQXJyYXkoKQoJCWZvciAoa2V5IGluIGNfdmFscykgewoJCQl2YXIgayA9IGNfdmFs
c1trZXldOwoJCQl2YXIgZSA9IGZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLmVsZW1lbnRz
Lm5hbWVkSXRlbShrKTsKCgkJCWNba10gPSBlLnZhbHVlOwoKCQkJZS5wYXJlbnROb2RlLnN0
eWxlWydkaXNwbGF5J10gPSAnbm9uZSc7CgkJfQoKCQkvLyBSZXNob3cgdHlwZSBvcHRpb24g
bGlzdAoJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLnR5cGUucGFyZW50Tm9kZS5zdHls
ZVsnZGlzcGxheSddID0gJyc7CgoJCS8vIFNldCBvdGhlciBmb3JtIGlucHV0cyB0byB0aGUg
Y29ycmVjdCB2aXNpYmlsaXR5IHN0YXRlLCBkZXBlbmRlbnQgb24gdHlwZQoJCXN3aXRjaCAo
Y1sndHlwZSddKSB7CgkJCWNhc2UgJycgOgoJCQljYXNlICdkYXRlJyA6IGJyZWFrOwoJCQlj
YXNlICdyZWdleCcgOgoJCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19JykubmFtZS5wYXJl
bnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJCWZvcm0oJ3skY29tcG9uZW50c19m
b3JtfScpLnJlZ2V4LnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQlicmVh
azsKCQkJY2FzZSAndGV4dCcgOgoJCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19JykubmFt
ZS5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJCWZvcm0oJ3skY29tcG9u
ZW50c19mb3JtfScpLnRleHQucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJ
CWJyZWFrOwoJCQljYXNlICdjdXN0b20nIDoKCQkJCWZvcm0oJ3skY29tcG9uZW50c19mb3Jt
fScpLmN1c3RvbS5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJCWRpc3Bs
YXlfZml4ZXMoKTsKCQkJYnJlYWs7CgkJCWNhc2UgJ2NhdGVnb3J5JyA6CgkJCQlmb3JtKCd7
JGNvbXBvbmVudHNfZm9ybX0nKS5jYXRlZ29yeS5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5
J10gPSAnJzsKCQkJCWRpc3BsYXlfZml4ZXMoKTsKCQkJYnJlYWs7CgkJCWRlZmF1bHQgOgoJ
CQkJZGlzcGxheV9maXhlcygpOwoJCQlicmVhazsKCQl9CgoJCS8vIFNhdmUgZGF0YQoJCWNv
bXBvbmVudHNbX2N1cnJlbnRdID0gYzsKCgkJLy8gUmVmcmVzaCBjb21wb25lbnQgdG8gcmVm
bGVjdCBuZXcgZGF0YQoJCWNvbXBvbmVudF9yZWZyZXNoKGNvbXBvbmVudChfY3VycmVudCkp
OwoKCQkvLyBSZS1mb2N1cyB0aGUgYWN0aXZlIGZvcm0gaW5wdXQKCQlpZiAoZWxlbWVudCkK
CQkJZWxlbWVudC5mb2N1cygpOwoJfQoKCWZ1bmN0aW9uIGRpc3BsYXlfZml4ZXMgKCkgewoJ
CWlmICgneyRzaG93X3ByZWZpeH0nKQoJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5w
cmVmaXgucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJaWYgKCd7JHNob3df
c3VmZml4fScpCgkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLnN1ZmZpeC5wYXJlbnRO
b2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCX0KCglmdW5jdGlvbiBjb21wb25lbnRfbGVm
dCAoKSB7CgkJaWYgKGNvbXBvbmVudHMubGVuZ3RoID4gMSAmJiBfY3VycmVudCA+IDApIHsK
CQkJLy8gU3RvcmUgY3VycmVudCBjb21wb25lbnQKCQkJdmFyIGMgPSBjb21wb25lbnRzW19j
dXJyZW50XTsKCgkJCS8vIFJlbW92ZSBjdXJyZW50IGNvbXBvbmVudAoJCQljb21wb25lbnRz
LnNwbGljZShfY3VycmVudCwgMSk7CgoJCQkvLyBVcGRhdGUgY3VycmVudCBpbmRleAoJCQlf
Y3VycmVudC0tOwoKCQkJLy8gUmUtYWRkIGN1cnJlbnQgY29tcG9uZW50CgkJCWNvbXBvbmVu
dHMuc3BsaWNlKF9jdXJyZW50LCAwLCBjKTsKCgkJCS8vIFJlZnJlc2ggVUkKCQkJY29tcG9u
ZW50X3JlZnJlc2hfYWxsKCk7CgkJfQoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVudF9yaWdodCAo
KSB7CgkJaWYgKF9jdXJyZW50IDwgY29tcG9uZW50cy5sZW5ndGggLSAxKSB7CgkJCS8vIFN0
b3JlIGN1cnJlbnQgY29tcG9uZW50CgkJCXZhciBjID0gY29tcG9uZW50c1tfY3VycmVudF07
CgoJCQkvLyBSZW1vdmUgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50cy5zcGxpY2Uo
X2N1cnJlbnQsIDEpOwoKCQkJLy8gVXBkYXRlIGN1cnJlbnQgaW5kZXgKCQkJX2N1cnJlbnQr
KzsKCgkJCS8vIFJlLWFkZCBjdXJyZW50IGNvbXBvbmVudAoJCQljb21wb25lbnRzLnNwbGlj
ZShfY3VycmVudCwgMCwgYyk7CgoJCQkvLyBSZWZyZXNoIFVJCgkJCWNvbXBvbmVudF9yZWZy
ZXNoX2FsbCgpOwoJCX0KCX0KCglmdW5jdGlvbiBzYXZlIChmb3JtKSB7CgkJdmFyIGMgPSAn
JzsgdmFyIGlzX3Blcm1saW5rID0gZmFsc2U7IHZhciBoYXNfcGFnZV9vcl9zZWFyY2ggPSBm
YWxzZTsKCQlmb3IgKHZhciBpID0gMDsgaSA8IGNvbXBvbmVudHMubGVuZ3RoOyBpKyspIHsK
CQkJaWYgKGNvbXBvbmVudHNbaV1bJ3R5cGUnXSA9PSAndGl0bGUnIHx8IGNvbXBvbmVudHNb
aV1bJ3R5cGUnXSA9PSAnaWQnKQoJCQkJaXNfcGVybWxpbmsgPSB0cnVlOwoJCQlpZiAoY29t
cG9uZW50c1tpXVsndHlwZSddID09ICdwYWdlJyB8fCBjb21wb25lbnRzW2ldWyd0eXBlJ10g
PT0gJ2ZlZWQnIHx8IGNvbXBvbmVudHNbaV1bJ3R5cGUnXSA9PSAnc2VhcmNoJykKCQkJCWhh
c19wYWdlX2ZlZWRfc2VhcmNoID0gdHJ1ZTsKCQkJYyA9IGMgKyBqc0FycmF5VG9QaHBBcnJh
eShjb21wb25lbnRzW2ldKSArICd7JHNlcGFyYXRvcn0nOwoJCX0KCgkJaWYgKGlzX3Blcm1s
aW5rICYmIGhhc19wYWdlX29yX3NlYXJjaCkKCQkJYWxlcnQoIllvdXIgcGVybWFuZW50IGxp
bmsgY2FuJ3QgY29udGFpbiBlaXRoZXIgYSAncGFnZScsICdmZWVkJyBvciBhICdzZWFyY2gn
IGNvbXBvbmVudCB3aXRoICd0aXRsZScgb3IgJ2lkJyBjb21wb25lbnRzLiIpOwoKCQllbHNl
IGlmIChpc19wZXJtbGluayAmJiAoZm9ybS5wbF9uYW1lLnZhbHVlID09ICcnIHx8IGZvcm0u
cGxfbmFtZS52YWx1ZSA9PSAnVW50aXRsZWQnKSkgewoJCQlkb2N1bWVudC5nZXRFbGVtZW50
QnlJZCgnc2V0dGluZ3MnKS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCWZvcm0ucGxfbmFt
ZS5zdHlsZVsnYm9yZGVyJ10gPSAnM3B4IHNvbGlkIHJnYigyMjEsIDAsIDApJzsKCQkJZm9y
bS5wbF9wcmVjZWRlbmNlLnN0eWxlWydib3JkZXInXSA9ICcnOwoJCQlhbGVydCgnUGxlYXNl
IGVudGVyIGEgbmFtZSBmb3IgdGhpcyBwZXJtYW5lbnQgbGluayBydWxlLicpOwoJCX0gZWxz
ZSBpZiAoZm9ybS5wbF9wcmVjZWRlbmNlLnZhbHVlID09ICcnKSB7CgkJCWRvY3VtZW50Lmdl
dEVsZW1lbnRCeUlkKCdzZXR0aW5ncycpLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJZm9y
bS5wbF9wcmVjZWRlbmNlLnN0eWxlWydib3JkZXInXSA9ICczcHggc29saWQgcmdiKDIyMSwg
MCwgMCknOwoJCQlmb3JtLnBsX25hbWUuc3R5bGVbJ2JvcmRlciddID0gJyc7CgkJCWFsZXJ0
KCdQbGVhc2UgZW50ZXIgYSBwcmVjZWRlbmNlIHZhbHVlIGZvciB0aGlzIHBlcm1hbmVudCBs
aW5rIHJ1bGUuJyk7CgkJfSBlbHNlIHsKCQkJZm9ybS5jb21wb25lbnRzLnZhbHVlID0gYzsK
CQkJaWYgKHBlcm1saW5rX2RpdigpLnRleHRDb250ZW50KQoJCQkJZm9ybS5wbF9wcmV2aWV3
LnZhbHVlID0gcGVybWxpbmtfZGl2KCkudGV4dENvbnRlbnQ7CgkJCWVsc2UgaWYgKHBlcm1s
aW5rX2RpdigpLmlubmVyVGV4dCkKCQkJCWZvcm0ucGxfcHJldmlldy52YWx1ZSA9IHBlcm1s
aW5rX2RpdigpLmlubmVyVGV4dDsKCQkJcmV0dXJuIHRydWU7CgkJfQoKCQlyZXR1cm4gZmFs
c2U7Cgl9CgoJZnVuY3Rpb24ganNBcnJheVRvUGhwQXJyYXkgKGFycmF5KSB7CgkJLy8gaHR0
cDovL2Zhcm0udHVjb3dzLmNvbS9ibG9nL19hcmNoaXZlcy8yMDA1LzUvMzAvODk1OTAxLmh0
bWwKCQl2YXIgYXJyYXlfcGhwID0gIiI7CgkJdmFyIHRvdGFsID0gMDsKCQlmb3IgKHZhciBr
ZXkgaW4gYXJyYXkpIHsKCQkJKysgdG90YWw7CgkJCWFycmF5X3BocCA9IGFycmF5X3BocCAr
ICJzOiIgKwoJCQkJU3RyaW5nKGtleSkubGVuZ3RoICsgIjpcIiIgKyBTdHJpbmcoa2V5KSAr
ICJcIjtzOiIgKwoJCQkJU3RyaW5nKGFycmF5W2tleV0pLmxlbmd0aCArICI6XCIiICsgU3Ry
aW5nKGFycmF5W2tleV0pICsgIlwiOyI7CgkJfQoJCWFycmF5X3BocCA9ICJhOiIgKyB0b3Rh
bCArICI6eyIgKyBhcnJheV9waHAgKyAifSI7CgkJcmV0dXJuIGFycmF5X3BocDsKCX0KCglm
dW5jdGlvbiBwZXJtbGlua19kaXYgKCkgewoJCS8vIFJldHVybiB0aGUgcGVybWxpbmsgcnVs
ZSBlbGVtZW50CgkJcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd7JGNvbXBvbmVu
dHNfZGl2fScpOwoJfQoKCWZ1bmN0aW9uIGZvcm0gKG5hbWUpIHsKCQlpZiAoIW5hbWUpCgkJ
CW5hbWUgPSAneyRjb21wb25lbnRzX2Zvcm19JwoJCS8vIFJldHVybiB0aGUgZm9ybSBlbGVt
ZW50IHdpdGggbmFtZQoJCXJldHVybiBkb2N1bWVudC5mb3Jtcy5uYW1lZEl0ZW0obmFtZSk7
Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50IChpbmRleCkgewoJCS8vIFJldHVybiBjb21wb25l
bnQgd2l0aCBpbmRleAoJCXJldHVybiBwZXJtbGlua19kaXYoKS5jaGlsZE5vZGVzW2luZGV4
XTsKCX0KCgkvLyBdXT4KCTwvc2NyaXB0PgpIVE1MOwoKCQkvLyAtLS0gUnVsZSAtLS0gLy8K
CgkJJG91dFtdID0gaGVkKCdQZXJtYW5lbnQgbGluayBydWxlJywgMik7CgkJJG91dFtdID0g
JzxkaXYgaWQ9IicuJGNvbXBvbmVudHNfZGl2LiciIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9y
OiByZ2IoMjMwLCAyMzAsIDIzMCk7IHdpZHRoOiBhdXRvOyBoZWlnaHQ6IDEuNWVtOyBtYXJn
aW46IDEwcHggMDsgcGFkZGluZzogNXB4OyI+PC9kaXY+JzsKCQkkb3V0W10gPSBncmFmCgkJ
CSgKCQkJJHRoaXMtPmZJbnB1dCgnYnV0dG9uJywgJ2NvbXBvbmVudF9hZGQnLCAnQWRkIGNv
bXBvbmVudCcsIGFycmF5KCdjbGljaycgPT4gJ2NvbXBvbmVudF9hZGQoKTsnKSkubi4KCQkJ
JHRoaXMtPmZJbnB1dCgnYnV0dG9uJywgJ2NvbXBvbmVudF9yZW1vdmUnLCAnUmVtb3ZlIGNv
bXBvbmVudCcsIGFycmF5KCdjbGljaycgPT4gJ2NvbXBvbmVudF9yZW1vdmUoKTsnKSkubi4K
CQkJJHRoaXMtPmZJbnB1dCgnYnV0dG9uJywgJ2NvbXBvbmVudF9sZWZ0JywgJ01vdmUgbGVm
dCcsIGFycmF5KCdjbGljaycgPT4gJ2NvbXBvbmVudF9sZWZ0KCk7JykpLm4uCgkJCSR0aGlz
LT5mSW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfcmlnaHQnLCAnTW92ZSByaWdodCcsIGFy
cmF5KCdjbGljaycgPT4gJ2NvbXBvbmVudF9yaWdodCgpOycpKQoJCQkpOwoKCQkvLyAtLS0g
Q29tcG9uZW50IGZvcm0gLS0tIC8vCgoJCSRvdXRbXSA9ICc8Zm9ybSBhY3Rpb249ImluZGV4
LnBocCIgbmFtZT0iJy4kY29tcG9uZW50c19mb3JtLiciIG9uc3VibWl0PSJyZXR1cm4gZmFs
c2U7Ij4nOwoKCQkvLyAtLS0gQ29tcG9uZW50IHR5cGUgLS0tIC8vCgoJCSRjb21wb25lbnRf
dHlwZXMgPSBhcnJheSAoCgkJCSdzZWN0aW9uJyA9PiAnU2VjdGlvbicsICdjYXRlZ29yeScg
PT4gJ0NhdGVnb3J5JywKCQkJJ3RpdGxlJyA9PiAnVGl0bGUnLCAnaWQnID0+ICdJRCcsCgkJ
CSdkYXRlJyA9PiAnRGF0ZSAoeXl5eS9tbS9kZCknLCAneWVhcicgPT4gJ1llYXInLAoJCQkn
bW9udGgnID0+ICdNb250aCcsICdkYXknID0+ICdEYXknLAoJCQknYXV0aG9yJyA9PiAnQXV0
aG9yIChSZWFsIG5hbWUpJywgJ2xvZ2luJyA9PiAnQXV0aG9yIChMb2dpbiknLAoJCQknY3Vz
dG9tJyA9PiAnQ3VzdG9tIEZpZWxkJywgJ3BhZ2UnID0+ICdQYWdlIE51bWJlcicsCgkJCSdm
ZWVkJyA9PiAnRmVlZCcsICdzZWFyY2gnID0+ICdTZWFyY2ggcmVxdWVzdCcsCgkJCSd0ZXh0
JyA9PiAnUGxhaW4gVGV4dCcsICdyZWdleCcgPT4gJ1JlZ3VsYXIgRXhwcmVzc2lvbicKCQkp
OwoJCSRvdXRbXSA9IGdyYWYoJHRoaXMtPmZTZWxlY3QoJ3R5cGUnLCAkY29tcG9uZW50X3R5
cGVzLCAnJywgMSwgJ0NvbXBvbmVudCB0eXBlJywgJyBvbmNoYW5nZT0iY29tcG9uZW50X3Vw
ZGF0ZSgpOyInKSk7CgoJCS8vIC0tLSBDb21wb25lbnQgZGF0YSAtLS0gLy8KCgkJLy8gR3Jh
YiB0aGUgY3VzdG9tIGZpZWxkIHRpdGxlcwoJCSRjdXN0b21fZmllbGRzID0gYXJyYXkoKTsK
CQlmb3IgKCRpID0gMTsgJGkgPD0gMTA7ICRpKyspIHsKCQkJaWYgKCR2ID0gJHByZWZzWyJj
dXN0b21feyRpfV9zZXQiXSkKCQkJCSRjdXN0b21fZmllbGRzWyRpXSA9ICR2OwoJCX0KCgkJ
JG91dFtdID0gZ3JhZiAoCgkJCSR0aGlzLT5mU2VsZWN0KCdjdXN0b20nLCAkY3VzdG9tX2Zp
ZWxkcywgJycsIDAsICdDdXN0b20nLCAnIG9uY2hhbmdlPSJjb21wb25lbnRfdXBkYXRlKHRo
aXMpOyInKS5uLgoJCQkkdGhpcy0+ZlNlbGVjdCgnY2F0ZWdvcnknLCBhcnJheSgnMScgPT4g
J0NhdGVnb3J5IDEnLCAnMicgPT4gJ0NhdGVnb3J5IDInKSwgJycsIDAsICdQcmltYXJ5IENh
dGVnb3J5JywgJyBvbmNoYW5nZT0iY29tcG9uZW50X3VwZGF0ZSh0aGlzKTsiJykubi4KCQkJ
JHRoaXMtPmZJbnB1dCgndGV4dCcsICduYW1lJywgJycsIGFycmF5KCdrZXl1cCcgPT4gJ2Nv
bXBvbmVudF91cGRhdGUodGhpcyk7JyksICdOYW1lJykubi4KCQkJJHRoaXMtPmZJbnB1dCgn
dGV4dCcsICdwcmVmaXgnLCAnJywgYXJyYXkoJ2tleXVwJyA9PiAnY29tcG9uZW50X3VwZGF0
ZSh0aGlzKTsnKSwgJ1ByZWZpeCcpLm4uCgkJCSR0aGlzLT5mSW5wdXQoJ3RleHQnLCAncmVn
ZXgnLCAnJywgYXJyYXkoJ2tleXVwJyA9PiAnY29tcG9uZW50X3VwZGF0ZSh0aGlzKTsnKSwg
J1JlZ3VsYXIgRXhwcmVzc2lvbicpLm4uCgkJCSR0aGlzLT5mSW5wdXQoJ3RleHQnLCAnc3Vm
Zml4JywgJycsIGFycmF5KCdrZXl1cCcgPT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7Jyks
ICdTdWZmaXgnKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3RleHQnLCAnJywgYXJy
YXkoJ2tleXVwJyA9PiAnY29tcG9uZW50X3VwZGF0ZSh0aGlzKTsnKSwgJ1RleHQnKQoJCSk7
CgkJJGhyID0gJzxociBzdHlsZT0iYm9yZGVyOiAwOyBoZWlnaHQ6IDFweDsgYmFja2dyb3Vu
ZC1jb2xvcjogcmdiKDIwMCwgMjAwLCAyMDApOyBjb2xvcjogcmdiKDIwMCwgMjAwLCAyMDAp
OyBtYXJnaW4tYm90dG9tOiAxMHB4OyIgLz4nOwoJCSRvdXRbXSA9ICRocjsKCQkkb3V0W10g
PSAnPC9mb3JtPic7CgoJCS8vIC0tLSBTZXR0aW5ncyBmb3JtIC0tLSAvLwoKCQkkb3V0W10g
PSAnPGZvcm0gYWN0aW9uPSJpbmRleC5waHAiIG1ldGhvZD0icG9zdCIgbmFtZT0iJy4kc2V0
dGluZ3NfZm9ybS4nIiBvbnN1Ym1pdD0icmV0dXJuIHNhdmUodGhpcyk7Ij4nOwoKCQkvLyAt
LS0gU2V0dGluZ3MgLS0tIC8vCgoJCSRvdXRbXSA9IGhlZCgnPGEgaHJlZj0iIyIgb25jbGlj
az0idG9nZ2xlRGlzcGxheShcJ3NldHRpbmdzXCcpOyByZXR1cm4gZmFsc2U7Ij5TZXR0aW5n
czwvYT4nLCAyKTsKCQkkb3V0W10gPSAnPGRpdiBpZD0ic2V0dGluZ3MiPic7CgkJJG91dFtd
ID0gZ3JhZigkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3BsX25hbWUnLCAkcGxfbmFtZSwgTlVM
TCwgJ05hbWUnKSk7CgkJJG91dFtdID0gZ3JhZigkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3Bs
X3ByZWNlZGVuY2UnLCAkcGxfcHJlY2VkZW5jZSwgTlVMTCwgJ1ByZWNlZGVuY2UnKSk7CgkJ
JG91dFtdID0gJzwvZGl2Pic7CgkJJG91dFtdID0gJGhyOwoKCQkvLyAtLS0gQ29uZGl0aW9u
cyAtLS0gLy8KCgkJJG91dFtdID0gaGVkKCc8YSBocmVmPSIjIiBvbmNsaWNrPSJ0b2dnbGVE
aXNwbGF5KFwnY29uZGl0aW9uc1wnKTsgcmV0dXJuIGZhbHNlOyI+Q29uZGl0aW9uczwvYT4n
LCAyKTsKCQkkb3V0W10gPSAnPGRpdiBpZD0iY29uZGl0aW9ucyIgc3R5bGU9ImRpc3BsYXk6
bm9uZSI+JzsKCQkkb3V0W10gPSBncmFmKHN0cm9uZygnT25seSB1c2UgdGhpcyBwZXJtYW5l
bnQgbGluayBpZiB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXBwbHkuLi4nKSk7CgoJCS8v
IEdlbmVyYXRlIGEgc2VjdGlvbnMgYXJyYXkgKG5hbWU9PnRpdGxlKQoJCSRzZWN0aW9ucyA9
IGFycmF5KCk7CgkJJHJzID0gc2FmZV9yb3dzKCduYW1lLCB0aXRsZScsICd0eHBfc2VjdGlv
bicsICJuYW1lICE9ICdkZWZhdWx0JyBvcmRlciBieSBuYW1lIik7CgkJZm9yZWFjaCAoJHJz
IGFzICRzZWMpIHsKCQkJJHNlY3Rpb25zWyRzZWNbJ25hbWUnXV0gPSAkc2VjWyd0aXRsZSdd
OwoJCX0KCgkJLy8gR2VuZXJhdGUgYSBjYXRlZ29yaWVzIGFycmF5IChuYW1lPT50aXRsZSkK
CQkkY2F0ZWdvcmllcyA9IGFycmF5KCk7CgkJJHJzID0gc2FmZV9yb3dzKCduYW1lLCB0aXRs
ZScsICd0eHBfY2F0ZWdvcnknLCAidHlwZSA9ICdhcnRpY2xlJyBhbmQgbmFtZSAhPSAncm9v
dCcgb3JkZXIgYnkgbmFtZSIpOwoJCWZvcmVhY2ggKCRycyBhcyAkc2VjKSB7CgkJCSRjYXRl
Z29yaWVzWyRzZWNbJ25hbWUnXV0gPSAkc2VjWyd0aXRsZSddOwoJCX0KCgkJJG91dFtdID0g
Z3JhZiAoCgkJCSR0aGlzLT5mU2VsZWN0KCdjb25fc2VjdGlvbicsICRzZWN0aW9ucywgJGNv
bl9zZWN0aW9uLCAxLCAnV2l0aGluIHNlY3Rpb24nKS5uLgoJCQkkdGhpcy0+ZlNlbGVjdCgn
Y29uX2NhdGVnb3J5JywgJGNhdGVnb3JpZXMsICRjb25fY2F0ZWdvcnksIDEsICdXaXRoaW4g
Y2F0ZWdvcnknKQoJCSk7CgkJJG91dFtdID0gJzwvZGl2Pic7CgkJJG91dFtdID0gJGhyOwoK
CQkvLyAtLS0gRGVzdGluYXRpb24gLS0tIC8vCgoJCSRvdXRbXSA9IGhlZCgnPGEgaHJlZj0i
IyIgb25jbGljaz0idG9nZ2xlRGlzcGxheShcJ2Rlc3RpbmF0aW9uXCcpOyByZXR1cm4gZmFs
c2U7Ij5EZXN0aW5hdGlvbjwvYT4nLCAyKTsKCQkkb3V0W10gPSAnPGRpdiBpZD0iZGVzdGlu
YXRpb24iIHN0eWxlPSJkaXNwbGF5Om5vbmUiPic7CgkJJG91dFtdID0gZ3JhZihzdHJvbmco
J0ZvcndhcmQgdGhpcyBwZXJtYW5lbnQgbGluayB0by4uLicpKTsKCQkkb3V0W10gPSBncmFm
ICgKCQkJJHRoaXMtPmZTZWxlY3QoJ2Rlc19zZWN0aW9uJywgJHNlY3Rpb25zLCAkZGVzX3Nl
Y3Rpb24sIDEsICdTZWN0aW9uJykubi4KCQkJJHRoaXMtPmZTZWxlY3QoJ2Rlc19jYXRlZ29y
eScsICRjYXRlZ29yaWVzLCAkZGVzX2NhdGVnb3J5LCAxLCAnQ2F0ZWdvcnknKQoJCSk7CgkJ
JG91dFtdID0gZ3JhZigkdGhpcy0+ZlNlbGVjdCgnZGVzX3BhZ2UnLCBzYWZlX2NvbHVtbign
bmFtZScsICd0eHBfcGFnZScsICIxIiksIEAkZGVzX3BhZ2UsIDEsICdQYWdlJykpOwoJCSRv
dXRbXSA9IGdyYWYoJHRoaXMtPmZCb3hlcygnZGVzX2ZlZWQnLCBhcnJheSgncnNzJywgJ2F0
b20nLCAnJyksICRkZXNfZmVlZCwgTlVMTCwgYXJyYXkoJ1JTUyBmZWVkJywgJ0F0b20gZmVl
ZCcsICdOZWl0aGVyJykpKTsKCQkkb3V0W10gPSBncmFmKHN0cm9uZygnUmVkaXJlY3QgdGhp
cyBwZXJtYW5lbnQgbGluayB0by4uLicpKTsKCQkvLyBHZW5lcmF0ZSBhIHBlcm1saW5rcyBh
cnJheQoJCSRwZXJtbGlua3MgPSAkdGhpcy0+cGFyZW50LT5nZXRfYWxsX3Blcm1saW5rcygx
KTsKCQlmb3JlYWNoICgkcGVybWxpbmtzIGFzICRrZXkgPT4gJHBsKSB7CgkJCSRwZXJtbGlu
a3NbJGtleV0gPSAkcGxbJ3NldHRpbmdzJ11bJ3BsX25hbWUnXTsKCQl9CgkJdW5zZXQoJHBl
cm1saW5rc1skaWRdKTsKCQkkb3V0W10gPSBncmFmKCR0aGlzLT5mU2VsZWN0KCdkZXNfcGVy
bWxpbmsnLCAkcGVybWxpbmtzLCBAJGRlc19wZXJtbGluaywgMSwgJ1Blcm1hbmVudCBsaW5r
JykpOwoJCSRvdXRbXSA9IGdyYWYoJHRoaXMtPmZJbnB1dCgndGV4dCcsICdkZXNfbG9jYXRp
b24nLCAkZGVzX2xvY2F0aW9uLCBOVUxMLCAnSFRUUCBsb2NhdGlvbicpKTsKCQkkb3V0W10g
PSAnPC9kaXY+JzsKCQkkb3V0W10gPSAkaHI7CgoJCS8vIFNhdmUgYnV0dG9uCgkJJG91dFtd
ID0gZklucHV0KCdzdWJtaXQnLCAnJywgJ1NhdmUgcGVybWFuZW50IGxpbmsnKTsKCgkJLy8g
RXh0cmEgZm9ybSBpbnB1dHMgd2hpY2ggZ2V0IGZpbGxlZCBvbiBzdWJtaXQKCQkkb3V0W10g
PSBoSW5wdXQoJ2NvbXBvbmVudHMnLCAnJyk7CgkJJG91dFtdID0gaElucHV0KCdwbF9wcmV2
aWV3JywgJycpOwoJCS8vIEV2ZW50IGFuZCB0YWIgZm9ybSBpbnB1dHMKCQkkb3V0W10gPSAk
dGhpcy0+Zm9ybV9pbnB1dHMoKTsKCQkvLyBTdGVwIGFuZCBJRCBmb3JtIGlucHV0cwoJCSRv
dXRbXSA9IHNJbnB1dCgkc3RlcCk7CgkJJG91dFtdID0gaElucHV0KGdicF9pZCwgJGlkKTsK
CgkJJG91dFtdID0gJzwvZm9ybT4nOwoKCQkvLyBMZXRzIGVjaG8gZXZlcnl0aGluZyBvdXQu
IFlhaCEKCQllY2hvIGpvaW4obiwgJG91dCk7Cgl9CgoJZnVuY3Rpb24gZkxhYmVsICgkbGFi
ZWwsICRjb250ZW50cyA9ICcnLCAkbGFiZWxfcmlnaHQgPSBmYWxzZSkgewoJCS8vIDxsYWJl
bD4gdGhlIGNvbnRlbnRzIHdpdGggdGhlIG5hbWUgJGxhYmxlCgkJJGNvbnRlbnRzID0gKCRs
YWJlbF9yaWdodCkKCQk/ICRjb250ZW50cy4kbGFiZWwKCQk6ICRsYWJlbC4oJGNvbnRlbnRz
ID8gJzogJy4kY29udGVudHMgOiAnJyk7CgkJcmV0dXJuIHRhZygkY29udGVudHMsICdsYWJl
bCcpOwoJfQoKCWZ1bmN0aW9uIGZCb3hlcyAoJG5hbWUgPSAnJywgJHZhbHVlID0gJycsICRj
aGVja2VkX3ZhbHVlID0gJycsICRvbiA9IGFycmF5KCksICRsYWJlbCA9ICcnKSB7CgkJJG91
dCA9IGFycmF5KCk7CgkJaWYgKGlzX2FycmF5KCR2YWx1ZSkpIHsKCQkJJGkgPSAwOwoJCQlm
b3JlYWNoICgkdmFsdWUgYXMgJHZhbCkgewoJCQkJJG8gPSAnPGlucHV0IHR5cGU9InJhZGlv
IiBuYW1lPSInLiRuYW1lLiciIHZhbHVlPSInLiR2YWwuJyInOwoJCQkJJG8gLj0gKCRjaGVj
a2VkX3ZhbHVlID09ICR2YWwpID8gJyBjaGVja2VkPSJjaGVja2VkIicgOiAnJzsKCQkJCWlm
IChpc19hcnJheSgkb24pKSBmb3JlYWNoKCRvbiBhcyAkayA9PiAkdikKCQkJCQkkbyAuPSAo
JG9uKSA/ICcgb24nLiRrLic9IicuJHYuJyInIDogJyc7CgkJCQkkbyAuPSAnIC8+JzsKCQkJ
CSRvdXRbXSA9ICR0aGlzLT5mTGFiZWwoJGxhYmVsWyRpKytdLCAkbywgdHJ1ZSk7CgkJCX0K
CQl9IGVsc2UgewoJCQkkbyA9ICc8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9IicuJG5h
bWUuJyIgdmFsdWU9IicuJHZhbHVlLiciJzsKCQkJJG8gLj0gKCRjaGVja2VkX3ZhbHVlID09
ICR2YWx1ZSkgPyAnIGNoZWNrZWQ9ImNoZWNrZWQiJyA6ICcnOwoJCQlpZiAoaXNfYXJyYXko
JG9uKSkgZm9yZWFjaCgkb24gYXMgJGsgPT4gJHYpCgkJCQkkbyAuPSAoJG9uKSA/ICcgb24n
LiRrLic9IicuJHYuJyInIDogJyc7CgkJCSRvIC49ICcgLz4nOwoJCQkkb3V0W10gPSAkdGhp
cy0+ZkxhYmVsKCRsYWJlbCwgJG8sIHRydWUpOwoJCX0KCgkJcmV0dXJuIGpvaW4oJycsICRv
dXQpOwoJfQoKCWZ1bmN0aW9uIGZJbnB1dCAoJHR5cGUsICRuYW1lID0gJycsICR2YWx1ZSA9
ICcnLCAkb24gPSBhcnJheSgpLCAkbGFiZWwgPSAnJykgewoJCWlmICgkdHlwZSA9PSAncmFk
aW8nIHx8ICR0eXBlID09ICdjaGVja2JveCcpCgkJCXJldHVybiAkdGhpcy0+ZkJveGVzKCRu
YW1lLCAkdmFsdWUsICRvbiwgJGxhYmVsKTsKCgkJJG8gPSAnPGlucHV0IHR5cGU9IicuJHR5
cGUuJyIgbmFtZT0iJy4kbmFtZS4nIiB2YWx1ZT0iJy4kdmFsdWUuJyInOwoJCWlmIChpc19h
cnJheSgkb24pKSBmb3JlYWNoKCRvbiBhcyAkayA9PiAkdikKCQkJJG8gLj0gKCRvbikgPyAn
IG9uJy4kay4nPSInLiR2LiciJyA6ICcnOwoJCSRvIC49ICcgLz4nOwoJCXJldHVybiAoJGxh
YmVsKSA/ICR0aGlzLT5mTGFiZWwoJGxhYmVsLCAkbykgOiAkbzsKCX0KCglmdW5jdGlvbiBm
U2VsZWN0ICgkbmFtZSA9ICcnLCAkYXJyYXkgPSAnJywgJHZhbHVlID0gJycsICRibGFua19m
aXJzdCA9ICcnLCAkbGFiZWwgPSAnJywgJG9uX3N1Ym1pdCA9ICcnKSB7CgkJJG8gPSBzZWxl
Y3RJbnB1dCgkbmFtZSwgJGFycmF5LCAkdmFsdWUsICRibGFua19maXJzdCwgJG9uX3N1Ym1p
dCk7CgkJcmV0dXJuICgkbGFiZWwgPyAkdGhpcy0+ZkxhYmVsKCRsYWJlbCwgJG8pIDogJG8p
OwoJfQoKCWZ1bmN0aW9uIHBvc3Rfc2F2ZV9wZXJtbGluayAoKSB7CgkJLy8gVGhlIGZ1bmN0
aW9uIHBvc3RzIG9yIHNhdmVzIGEgcGVybWFuZW50IGxpbmsgdG8gdHhwX3ByZWZzCgoJCWV4
dHJhY3QoZ3BzYShhcnJheSgnc3RlcCcsIGdicF9pZCkpKTsKCgkJLy8gR3JhYiB0aGUgdXNl
ciBkZWZpbmVkIHNldHRpbmdzIGZyb20gdGhlIGZvcm0gUE9TVCBkYXRhCgkJJHNldHRpbmdz
ID0gZ3BzYShhcnJheSgKCQkJJ3BsX25hbWUnLCAncGxfcHJlY2VkZW5jZScsICdwbF9wcmV2
aWV3JywKCQkJJ2Nvbl9zZWN0aW9uJywgJ2Nvbl9jYXRlZ29yeScsCgkJCSdkZXNfc2VjdGlv
bicsICdkZXNfY2F0ZWdvcnknLCAnZGVzX3BhZ2UnLAoJCQknZGVzX3Blcm1saW5rJywgJ2Rl
c19mZWVkJywgJ2Rlc19sb2NhdGlvbicsCgkJKSk7CgoJCS8vIFJlbW92ZSBzcGFjZXMgZnJv
bSB0aGUgcGVybWFuZW50IGxpbmsgcHJldmlldwoJCSRzZXR0aW5nc1sncGxfcHJldmlldydd
ID0gcHJlZ19yZXBsYWNlKCclXHMrL1xzKiUnLCAnLycsICRzZXR0aW5nc1sncGxfcHJldmll
dyddKTsKCgkJLy8gRXhwbG9kZSB0aGUgc2VwYXJhdGVkIHN0cmluZyBvZiBzZXJpYWxpemUg
Y29tcG9uZW50cyAtIHRoaXMgd2FzIG1hZGUgYnkgSmF2YVNjcmlwdC4KCQkkc2VyaWFsaXpl
X2NvbXBvbmVudHMgPSBleHBsb2RlKGdicF9zZXBhcmF0b3IsIHJ0cmltKGdwcygnY29tcG9u
ZW50cycpLCBnYnBfc2VwYXJhdG9yKSk7CgoJCS8vIFVuc2VyaWFsaXplIHRoZSBjb21wb25l
bnRzCgkJJGNvbXBvbmVudHMgPSBhcnJheSgpOwoJCWZvcmVhY2ggKCRzZXJpYWxpemVfY29t
cG9uZW50cyBhcyAkYykKCQkJJGNvbXBvbmVudHNbXSA9IHVuc2VyaWFsaXplKHN0cmlwc2xh
c2hlcygkYykpOwoKCQkvLyBDb21wbGV0ZSB0aGUgcGVybWFuZW50IGxpbmsgYXJyYXkgLSB0
aGlzIGlzIGV4YWN0bHkgd2hhdCBuZWVkcyB0byBiZSBzdG9yZWQgaW4gdGhlIGRiCgkJJHBl
cm1saW5rID0gYXJyYXkoJ3NldHRpbmdzJyA9PiAkc2V0dGluZ3MsICdjb21wb25lbnRzJyA9
PiAkY29tcG9uZW50cyk7CgoJCS8vIFNhdmUgaXQKCQkkdGhpcy0+c2V0X3ByZWZlcmVuY2Uo
JGlkLCAkcGVybWxpbmssICdnYnBfc2VyaWFsaXplZCcpOwoKCQkkdGhpcy0+cGFyZW50LT5t
ZXNzYWdlID0gbWVzc2VuZ2VyKCcnLCAkc2V0dGluZ3NbJ3BsX25hbWUnXSwgJ3NhdmVkJyk7
Cgl9CgoJZnVuY3Rpb24gcGhwQXJyYXlUb0pzQXJyYXkgKCRuYW1lLCAkYXJyYXkpIHsKCQkv
LyBGcm9tIFBIUC5uZXQKCQlpZiAoaXNfYXJyYXkoJGFycmF5KSkgewoJCQkkcmVzdWx0ID0g
JG5hbWUuJyA9IG5ldyBBcnJheSgpOycubjsKCQkJZm9yZWFjaCAoJGFycmF5IGFzICRrZXkg
PT4gJHZhbHVlKQoJCQkJJHJlc3VsdCAuPSAkdGhpcy0+cGhwQXJyYXlUb0pzQXJyYXkoJG5h
bWUuJ1tcJycuJGtleS4nXCddJywkdmFsdWUsJycpLm47CgkJfSBlbHNlIHsKCQkJJHJlc3Vs
dCA9ICRuYW1lLicgPSBcJycuJGFycmF5LidcJzsnOwoJCX0KCQlyZXR1cm4gJHJlc3VsdDsK
CX0KfQoKY2xhc3MgUGVybWFuZW50TGlua3NMaXN0VGFiVmlldyBleHRlbmRzIEdCUEFkbWlu
VGFiVmlldwp7Cgl2YXIgJHBlcm1pc3Npb25zID0gJzEsMic7CglmdW5jdGlvbiBwcmVsb2Fk
ICgpIHsKCQlyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJHRoaXMsICR0aGlzLT5wYXJlbnQt
PmV2ZW50LidfbXVsdGlfZWRpdCcpLCAkdGhpcy0+cGFyZW50LT5ldmVudCwgJHRoaXMtPnBh
cmVudC0+ZXZlbnQuJ19tdWx0aV9lZGl0JywgMSk7CgkJcmVnaXN0ZXJfY2FsbGJhY2soYXJy
YXkoJiR0aGlzLCAkdGhpcy0+cGFyZW50LT5ldmVudC4nX2NoYW5nZV9wYWdlYnknKSwgJHRo
aXMtPnBhcmVudC0+ZXZlbnQsICR0aGlzLT5wYXJlbnQtPmV2ZW50LidfY2hhbmdlX3BhZ2Vi
eScsIDEpOwoJfQoKCWZ1bmN0aW9uIG1haW4gKCkgewoJCWV4dHJhY3QoZ3BzYShhcnJheSgn
cGFnZScsICdzb3J0JywgJ2RpcicsICdjcml0JywgJ3NlYXJjaF9tZXRob2QnKSkpOwoKCQkk
ZXZlbnQgPSAkdGhpcy0+cGFyZW50LT5ldmVudDsKCgkJJHBlcm1saW5rcyA9ICR0aGlzLT5w
YXJlbnQtPmdldF9hbGxfcGVybWxpbmtzKCk7CgkJJHRvdGFsID0gY291bnQoJHBlcm1saW5r
cyk7CgoJCWlmICgkdG90YWwgPCAxKSB7CgkJCWVjaG8gZ3JhZignWW91IGhhdmVuXCd0IGNy
ZWF0ZWQgYW55IGN1c3RvbSBwZXJtYW5lbnQgbGlua3MgcnVsZXMgeWV0LicsICcgc3R5bGU9
InRleHQtYWxpZ246IGNlbnRlcjsiJykuCgkJCQkgZ3JhZignPGEgaHJlZj0iJy4kdGhpcy0+
dXJsKGFycmF5KGdicF90YWIgPT4gJ2J1aWxkJyksIHRydWUpLiciPkNsaWNrIGhlcmU8L2E+
IHRvIGFkZCBvbmUuJywgJyBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyInKTsKCQkJcmV0
dXJuOwoJCX0KCgkJJGxpbWl0ID0gbWF4KCR0aGlzLT5wcmVmKCdsaXN0X3BhZ2VieScpLCAx
NSk7CgoJCWxpc3QoJHBhZ2UsICRvZmZzZXQsICRudW1QYWdlcykgPSAkdGhpcy0+cGFnZXIo
JHRvdGFsLCAkbGltaXQsICRwYWdlKTsKCgkJaWYgKGVtcHR5KCRzb3J0KSkKCQkJJHNvcnQg
PSAncGxfcHJlY2VkZW5jZSc7CgoJCWlmIChlbXB0eSgkZGlyKSkKCQkJJGRpciA9ICdkZXNj
JzsKCgkJJGRpciA9ICgkZGlyID09ICdkZXNjJykgPyAnZGVzYycgOiAnYXNjJzsKCgkJLy8g
U29ydCB0aGUgcGVybWxpbmtzIHZpYSB0aGUgc2VsZWN0ZWQgY29sdW1uIGFuZCB0aGVuIHRo
ZWlyIG5hbWVzLgoJCWZvcmVhY2ggKCRwZXJtbGlua3MgYXMgJGlkID0+ICRwZXJtbGluaykg
ewoJCQkkc29ydF9rZXlzWyRpZF0gPSAkcGVybWxpbmtbJ3NldHRpbmdzJ11bJHNvcnRdOwoJ
CQkkbmFtZVskaWRdID0gJHBlcm1saW5rWydzZXR0aW5ncyddWydwbF9uYW1lJ107CgkJfQoJ
CWFycmF5X211bHRpc29ydCgkc29ydF9rZXlzLCAoKCRkaXIgPT0gJ2Rlc2MnKSA/IFNPUlRf
REVTQyA6IFNPUlRfQVNDKSwgJG5hbWUsIFNPUlRfQVNDLCAkcGVybWxpbmtzKTsKCgkJJHN3
aXRjaF9kaXIgPSAoJGRpciA9PSAnZGVzYycpID8gJ2FzYycgOiAnZGVzYyc7CgoJCSRwZXJt
bGlua3MgPSBhcnJheV9zbGljZSgkcGVybWxpbmtzLCAkb2Zmc2V0LCAkbGltaXQpOwoKCQlp
ZiAoY291bnQoJHBlcm1saW5rcykpIHsKCQkJZWNobyBuLm4uJzxmb3JtIG5hbWU9Imxvbmdm
b3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iaW5kZXgucGhwIiBvbnN1Ym1pdD0icmV0dXJu
IHZlcmlmeShcJycuZ1R4dCgnYXJlX3lvdV9zdXJlJykuJ1wnKSI+Jy4KCgkJCQluLnN0YXJ0
VGFibGUoJ2xpc3QnKS4KCQkJCW4udHIoCgkJCQkJbi5jb2x1bW5faGVhZCgnbmFtZScsICdw
bF9uYW1lJywgJGV2ZW50LCB0cnVlLCAkc3dpdGNoX2RpciwgJGNyaXQsICRzZWFyY2hfbWV0
aG9kKS4KCQkJCQloQ2VsbCgpLgoJCQkJCWNvbHVtbl9oZWFkKCdwcmV2aWV3JywgJ3BsX3By
ZXZpZXcnLCAkZXZlbnQsIHRydWUsICRzd2l0Y2hfZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRo
b2QpLgoJCQkJCWNvbHVtbl9oZWFkKCdwcmVjZWRlbmNlJywgJ3BsX3ByZWNlZGVuY2UnLCAk
ZXZlbnQsIHRydWUsICRzd2l0Y2hfZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2QpLgoJCQkJ
CWhDZWxsKCkKCQkJCSk7CgoJCQlpbmNsdWRlX29uY2UgdHhwYXRoLicvcHVibGlzaC90YWdo
YW5kbGVycy5waHAnOwoKCQkJZm9yZWFjaCAoJHBlcm1saW5rcyBhcyAkaWQgPT4gJHBlcm1s
aW5rKSB7CgkJCQlleHRyYWN0KCRwZXJtbGlua1snc2V0dGluZ3MnXSk7CgoJCQkJJG1hbmFn
ZSA9IG4uJzx1bCcuKHZlcnNpb25fY29tcGFyZSgkR0xPQkFMU1sndGhpc3ZlcnNpb24nXSwg
JzQuMC4zJywgJzw9JykgPyAnIHN0eWxlPSJtYXJnaW46MDtwYWRkaW5nOjA7bGlzdC1zdHls
ZS10eXBlOm5vbmU7Ij4nIDogJz4nKS4KCQkJCQkJbi50Lic8bGk+Jy5ocmVmKGdUeHQoJ2Vk
aXQnKSwgJHRoaXMtPnVybChhcnJheShnYnBfdGFiID0+ICdidWlsZCcsIGdicF9pZCA9PiAk
aWQpLCB0cnVlKSkuJzwvbGk+Jy4KCQkJCQkJbi4nPC91bD4nOwoKCQkJCWVjaG8gbi5uLnRy
KAoKCQkJCQl0ZCgKCQkJCQkJaHJlZigkcGxfbmFtZSwgJHRoaXMtPnVybChhcnJheShnYnBf
dGFiID0+ICdidWlsZCcsIGdicF9pZCA9PiAkaWQpLCB0cnVlKSkKCQkJCQksIDc1KS4KCgkJ
CQkJdGQoJG1hbmFnZSwgMzUpLgoKCQkJCQl0ZCgkcGxfcHJldmlldywgMTc1KS4KCQkJCQl0
ZCgkcGxfcHJlY2VkZW5jZS4nJm5ic3A7JywgNTApLgoKCQkJCQl0ZCgKCQkJCQkJZklucHV0
KCdjaGVja2JveCcsICdzZWxlY3RlZFtdJywgJGlkKQoJCQkJCSkKCQkJCSk7CgkJCX0KCgkJ
CWVjaG8gbi5uLnRyKAoJCQkJdGRhKAoJCQkJCXNlbGVjdF9idXR0b25zKCkuCgkJCQkJJHRo
aXMtPnBlcm1saW5rc19tdWx0aWVkaXRfZm9ybSgkcGFnZSwgJHNvcnQsICRkaXIsICRjcml0
LCAkc2VhcmNoX21ldGhvZCkKCQkJCSwnIGNvbHNwYW49IjQiIHN0eWxlPSJ0ZXh0LWFsaWdu
OiByaWdodDsgYm9yZGVyOiBub25lOyInKQoJCQkpLgoKCQkJbi5lbmRUYWJsZSgpLgoJCQlu
Lic8L2Zvcm0+Jy4KCgkJCW4uJHRoaXMtPm5hdl9mb3JtKCRldmVudCwgJHBhZ2UsICRudW1Q
YWdlcywgJHNvcnQsICRkaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCkuCgoJCQluLnBhZ2Vi
eV9mb3JtKCRldmVudCwgJHRoaXMtPnByZWYoJ2xpc3RfcGFnZWJ5JykpOwoJCX0KCX0KCglm
dW5jdGlvbiBwYWdlciAoJHRvdGFsLCAkbGltaXQsICRwYWdlKSB7CgkJaWYgKGZ1bmN0aW9u
X2V4aXN0cygncGFnZXInKSkKCQkJcmV0dXJuIHBhZ2VyKCR0b3RhbCwgJGxpbWl0LCAkcGFn
ZSk7CgoJCS8vIFRoaXMgaXMgdGFrZW4gZnJvbSB0eHBsaWJfbWlzYy5waHAgcjE1ODggaXQg
aXMgcmVxdWlyZWQgZm9yIDQuMC4zIGNvbXBhdGliaXRseQoJCSRudW1fcGFnZXMgPSBjZWls
KCR0b3RhbCAvICRsaW1pdCk7CgkJJHBhZ2UgPSAkcGFnZSA/IChpbnQpICRwYWdlIDogMTsK
CQkkcGFnZSA9IG1pbihtYXgoJHBhZ2UsIDEpLCAkbnVtX3BhZ2VzKTsKCQkkb2Zmc2V0ID0g
bWF4KCgkcGFnZSAtIDEpICogJGxpbWl0LCAwKTsKCQlyZXR1cm4gYXJyYXkoJHBhZ2UsICRv
ZmZzZXQsICRudW1fcGFnZXMpOwoJfQoKCWZ1bmN0aW9uIG5hdl9mb3JtICgkZXZlbnQsICRw
YWdlLCAkbnVtUGFnZXMsICRzb3J0LCAkZGlyLCAkY3JpdCwgJG1ldGhvZCkgewoJCWlmIChm
dW5jdGlvbl9leGlzdHMoJ25hdl9mb3JtJykpCgkJCXJldHVybiBuYXZfZm9ybSgkZXZlbnQs
ICRwYWdlLCAkbnVtUGFnZXMsICRzb3J0LCAkZGlyLCAkY3JpdCwgJG1ldGhvZCk7CgoJCS8v
IFRoaXMgaXMgYmFzaWNhbGx5IHN0b2xlbiBmcm9tIHRoZSA0LjAuMyB2ZXJzaW9uIG9mIGlu
Y2x1ZGVzL3R4cF9saXN0LnBocAoJCS8vIC0gbGlzdF9uYXZfZm9ybSgpIGZvciA0LjAuMyBj
b21wYXRpYml0bHkKCQkkbmF2W10gPSAoJHBhZ2UgPiAxKQoJCQk/IFByZXZOZXh0TGluaygk
ZXZlbnQsICRwYWdlLTEsIGdUeHQoJ3ByZXYnKSwgJ3ByZXYnLCAkc29ydCwgJGRpcikgOiAn
JzsKCQkkbmF2W10gPSBzcC5zbWFsbCgkcGFnZS4gJy8nLiRudW1QYWdlcykuc3A7CgkJJG5h
dltdID0gKCRwYWdlICE9ICRudW1QYWdlcykKCQkJPyBQcmV2TmV4dExpbmsoJGV2ZW50LCAk
cGFnZSsxLCBnVHh0KCduZXh0JyksICduZXh0JywgJHNvcnQsICRkaXIpIDogJyc7CgkJcmV0
dXJuICgkbmF2KQoJCQk/IGdyYWYoam9pbignJywgJG5hdiksICcgYWxpZ249ImNlbnRlciIn
KSA6ICcnOwoJfQoKCWZ1bmN0aW9uIHBlcm1saW5rc19tdWx0aWVkaXRfZm9ybSAoJHBhZ2Us
ICRzb3J0LCAkZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2QpIHsKCQkkbWV0aG9kcyA9IGFy
cmF5KAoJCQknZGVsZXRlJyA9PiBnVHh0KCdkZWxldGUnKSwKCQkpOwoKCQlyZXR1cm4gZXZl
bnRfbXVsdGllZGl0X2Zvcm0oJHRoaXMtPnBhcmVudC0+ZXZlbnQsICRtZXRob2RzLCAkcGFn
ZSwgJHNvcnQsICRkaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCk7Cgl9CgoJZnVuY3Rpb24g
cGVybWxpbmtzX2NoYW5nZV9wYWdlYnkgKCkgewoJCSR0aGlzLT5zZXRfcHJlZmVyZW5jZSgn
bGlzdF9wYWdlYnknLCBncHMoJ3F0eScpKTsKCX0KCglmdW5jdGlvbiBwZXJtbGlua3NfbXVs
dGlfZWRpdCAoKSB7CgkJJG1ldGhvZCA9IGdwcygnZWRpdF9tZXRob2QnKQoJCQk/IGdwcygn
ZWRpdF9tZXRob2QnKSAvLyBGcm9tIFR4cCA0LjAuNCBhbmQgZ3JlYXRlcgoJCQk6IGdwcygn
bWV0aG9kJyk7IC8vIFVwIHRvIFR4cCA0LjAuMwoKCQlzd2l0Y2ggKCRtZXRob2QpIHsKCQkJ
Y2FzZSAnZGVsZXRlJzoKCQkJCWZvcmVhY2ggKGdwcygnc2VsZWN0ZWQnKSBhcyAkaWQpIHsK
CQkJCQkJCSRkZWxldGVkW10gPSAkdGhpcy0+cGFyZW50LT5yZW1vdmVfcGVybWxpbmsoJGlk
KTsKCQkJCX0KCQkJYnJlYWs7CgkJfQoKCQkkdGhpcy0+cGFyZW50LT5tZXNzYWdlID0gKGlz
c2V0KCRkZWxldGVkKSAmJiBpc19hcnJheSgkZGVsZXRlZCkgJiYgY291bnQoJGRlbGV0ZWQp
KQoJCQk/IG1lc3NlbmdlcignJywgam9pbignLCAnLCAkZGVsZXRlZCkgLCdkZWxldGVkJykK
CQkJOiBtZXNzZW5nZXIoJ2FuIGVycm9yIG9jY3VycmVkJywgJycsICcnKTsKCX0KfQoKZ2xv
YmFsICRnYnBfcGw7CiRnYnBfcGwgPSBuZXcgUGVybWFuZW50TGlua3MoJ1Blcm1hbmVudCBM
aW5rcycsICdwZXJtbGlua3MnLCAnYWRtaW4nKTsKaWYgKEB0eHBpbnRlcmZhY2UgPT0gJ3B1
YmxpYycpIHsKCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkZ2JwX3BsLCAnX2ZlZWRfZW50
cnknKSwgJ3Jzc19lbnRyeScpOwoJcmVnaXN0ZXJfY2FsbGJhY2soYXJyYXkoJiRnYnBfcGws
ICdfZmVlZF9lbnRyeScpLCAnYXRvbV9lbnRyeScpOwoJcmVnaXN0ZXJfY2FsbGJhY2soYXJy
YXkoJiRnYnBfcGwsICdfdGV4dHBhdHRlcm4nKSwgJ3RleHRwYXR0ZXJuJyk7CglyZWdpc3Rl
cl9jYWxsYmFjayhhcnJheSgmJGdicF9wbCwgJ190ZXh0cGF0dGVybl9lbmQnKSwgJ3RleHRw
YXR0ZXJuX2VuZCcpOwoKCWZ1bmN0aW9uIGdicF9pZl9yZWdleCAoJGF0dHMsICR0aGluZykg
ewoJCWdsb2JhbCAkcHJldGV4dDsKCQlleHRyYWN0KGxBdHRzKGFycmF5KAoJCQknbmFtZScg
PT4gJycsCgkJCSd2YWwnICA9PiAnJywKCQkpLCRhdHRzKSk7CgkJJG1hdGNoID0gKEAkcHJl
dGV4dFsicGVybWxpbmtfcmVnZXhfeyRuYW1lfSJdID09ICR2YWwpOwoJCXJldHVybiBwYXJz
ZShFdmFsRWxzZSgkdGhpbmcsICRtYXRjaCkpOwoJfQoKCWZ1bmN0aW9uIGdicF9pZl90ZXh0
ICgkYXR0cywgJHRoaW5nKSB7CgkJZ2xvYmFsICRwcmV0ZXh0OwoJCWV4dHJhY3QobEF0dHMo
YXJyYXkoCgkJCSduYW1lJyA9PiAnJywKCQkJJ3ZhbCcgID0+ICcnLAoJCSksJGF0dHMpKTsK
CgkJJG1hdGNoID0gZmFsc2U7CgkJaWYgKCFlbXB0eSgkbmFtZSkpIHsKCQkJaWYgKGVtcHR5
KCR2YWwpKQoJCQkJJG1hdGNoID0gKGlzc2V0KCRwcmV0ZXh0WyJwZXJtbGlua190ZXh0X3sk
bmFtZX0iXSkpOwoJCQllbHNlCgkJCQkkbWF0Y2ggPSAoQCRwcmV0ZXh0WyJwZXJtbGlua190
ZXh0X3skbmFtZX0iXSA9PSAkdmFsKTsKCQl9CgkJcmV0dXJuIHBhcnNlKEV2YWxFbHNlKCR0
aGluZywgJG1hdGNoKSk7Cgl9CgoJZnVuY3Rpb24gZ2JwX3VzZV9wYWdlbGluayAoJGF0dHMs
ICR0aGluZyA9ICcnKSB7CgkJZ2xvYmFsICRnYnBfcGw7CgkJZXh0cmFjdChsQXR0cyhhcnJh
eSgKCQkJJ3J1bGUnID0+ICcnLAoJCSksJGF0dHMpKTsKCQlyZXR1cm4gJGdicF9wbC0+X3Rl
eHRwYXR0ZXJuX2VuZF9jYWxsYmFjayhwYXJzZSgkdGhpbmcpLCAkcnVsZSk7Cgl9CgoJZnVu
Y3Rpb24gZ2JwX2Rpc2FibGVfcGVybWxpbmtzICgkYXR0cywgJHRoaW5nID0gJycpIHsKCQln
bG9iYWwgJGdicF9wbDsKCQlyZXR1cm4gJGdicF9wbC0+dG9nZ2xlX3Blcm1saW5rX21vZGUo
J3BhcnNlJywgJHRoaW5nKTsKCX0KfQoiO3M6MzoibWQ1IjtzOjMyOiIxNTMyZDZiYjFiZTM5
YzRmOWQxNzRmODNmZDU5ZGQxZSI7fQ==
