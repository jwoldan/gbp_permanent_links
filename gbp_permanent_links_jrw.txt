# gbp_permanent_links_jrw v0.14_jrw.2
# Custom permanent links rules
# Graeme Porteous, modified by Jeffrey Woldan
# https://github.com/jwoldan/gbp_permanent_links

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YTo5OntzOjQ6Im5hbWUiO3M6MjM6ImdicF9wZXJtYW5lbnRfbGlua3NfanJ3IjtzOjc6InZl
cnNpb24iO3M6MTA6IjAuMTRfanJ3LjIiO3M6NjoiYXV0aG9yIjtzOjQzOiJHcmFlbWUgUG9y
dGVvdXMsIG1vZGlmaWVkIGJ5IEplZmZyZXkgV29sZGFuIjtzOjEwOiJhdXRob3JfdXJpIjtz
OjQ2OiJodHRwczovL2dpdGh1Yi5jb20vandvbGRhbi9nYnBfcGVybWFuZW50X2xpbmtzIjtz
OjExOiJkZXNjcmlwdGlvbiI7czoyODoiQ3VzdG9tIHBlcm1hbmVudCBsaW5rcyBydWxlcyI7
czo0OiJ0eXBlIjtzOjE6IjEiO3M6NDoiaGVscCI7czoxNTE6ImgxLiBnYnBfcGVybWFuZW50
X2xpbmtzLgoKVGhlcmUgaXMgbm8gcGx1Z2luIGRvY3VtZW50YXRpb24uIEZvciBoZWxwIHBs
ZWFzZSB1c2UgdGhlICJmb3J1bSB0aHJlYWQiOmh0dHA6Ly9mb3J1bS50ZXh0cGF0dGVybi5j
b20vdmlld3RvcGljLnBocD9pZD0xODkxOC4iO3M6NDoiY29kZSI7czo2ODI3NDoiCi8vIENv
bnN0YW50cwpAZGVmaW5lKCdnYnBfc2F2ZScsICdzYXZlJyk7CkBkZWZpbmUoJ2dicF9wb3N0
JywgJ3Bvc3QnKTsKQGRlZmluZSgnZ2JwX3NlcGFyYXRvcicsICcmfiZ+JicpOwoKLy8gcmVx
dWlyZV9wbHVnaW4oKSB3aWxsIHJlc2V0IHRoZSAkdHhwX2N1cnJlbnRfcGx1Z2luIGdsb2Jh
bApnbG9iYWwgJHR4cF9jdXJyZW50X3BsdWdpbjsKJGdicF9jdXJyZW50X3BsdWdpbiA9ICR0
eHBfY3VycmVudF9wbHVnaW47CnJlcXVpcmVfcGx1Z2luKCdnYnBfYWRtaW5fbGlicmFyeScp
OwokdHhwX2N1cnJlbnRfcGx1Z2luID0gJGdicF9jdXJyZW50X3BsdWdpbjsKCmNsYXNzIFBl
cm1hbmVudExpbmtzIGV4dGVuZHMgR0JQUGx1Z2luCnsKCXZhciAkcGVybWlzc2lvbnMgPSAn
MSwyJzsKCXZhciAkcHJlZmVyZW5jZXMgPSBhcnJheSgKCQknc2hvd19wcmVmaXgnID0+IGFy
cmF5KCd2YWx1ZScgPT4gMCwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3Nob3dfc3Vm
Zml4JyA9PiBhcnJheSgndmFsdWUnID0+IDAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJ
CSdvbWl0X3RyYWlsaW5nX3NsYXNoJyA9PiBhcnJheSgndmFsdWUnID0+IDAgLCAndHlwZScg
PT4gJ3llc25vcmFkaW8nKSwKCQkncmVkaXJlY3RfbXRfc3R5bGVfbGlua3MnID0+IGFycmF5
KCd2YWx1ZScgPT4gMSAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJCSdjbGVhbl9wYWdl
X2FyY2hpdmVfbGlua3MnID0+IGFycmF5KCd2YWx1ZScgPT4gMSAsICd0eXBlJyA9PiAneWVz
bm9yYWRpbycpLAoJCSdqb2luX3ByZXRleHRfdG9fcGFnZWxpbmtzJyA9PiBhcnJheSgndmFs
dWUnID0+IDEgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQknY2hlY2tfcHJldGV4dF9j
YXRlZ29yeV9jb250ZXh0JyA9PiBhcnJheSgndmFsdWUnID0+IDAgLCAndHlwZScgPT4gJ3ll
c25vcmFkaW8nKSwKCQknY2hlY2tfcHJldGV4dF9zZWN0aW9uX2NvbnRleHQnID0+IGFycmF5
KCd2YWx1ZScgPT4gMCAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJCSdmb3JjZV9sb3dl
cmNhc2VfdXJscycgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3Jh
ZGlvJyksCgkJJ2F1dG9tYXRpY2FsbHlfYXBwZW5kX3RpdGxlJyA9PiBhcnJheSgndmFsdWUn
ID0+IDEgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQkndXNlX2NsZWF2ZXJfcGFydGlh
bF9tYXRjaGVzJyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlwZScgPT4gJ3llc25vcmFk
aW8nKSwKCQkncGVybWxpbmtfcmVkaXJlY3RfaHR0cF9zdGF0dXMnID0+IGFycmF5KCd2YWx1
ZScgPT4gJzMwMScgLCAndHlwZScgPT4gJ3RleHRfaW5wdXQnKSwKCQkndXJsX3JlZGlyZWN0
X2h0dHBfc3RhdHVzJyA9PiBhcnJheSgndmFsdWUnID0+ICczMDInICwgJ3R5cGUnID0+ICd0
ZXh0X2lucHV0JyksCgkJJ3RleHRfYW5kX3JlZ2V4X3NlZ21lbnRfc2NvcmVzJyA9PiBhcnJh
eSgndmFsdWUnID0+ICcwJyAsICd0eXBlJyA9PiAndGV4dF9pbnB1dCcpLAoJCSdkZWJ1Zycg
PT4gYXJyYXkoJ3ZhbHVlJyA9PiAwLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCSk7Cgl2
YXIgJG1hdGNoZWRfcGVybWxpbmsgPSBhcnJheSgpOwoJdmFyICRwYXJ0aWFsX21hdGNoZXMg
PSBhcnJheSgpOwoJdmFyICRjbGVhdmVyX3BhcnRpYWxfbWF0Y2g7Cgl2YXIgJGJ1ZmZlcl9k
ZWJ1ZyA9IGFycmF5KCk7CgoJZnVuY3Rpb24gcHJlbG9hZCAoKSB7CgkJbmV3IFBlcm1hbmVu
dExpbmtzTGlzdFRhYlZpZXcoJ2xpc3QnLCAnbGlzdCcsICR0aGlzKTsKCQluZXcgUGVybWFu
ZW50TGlua3NCdWlsZFRhYlZpZXcoJ2J1aWxkJywgJ2J1aWxkJywgJHRoaXMpOwoJCW5ldyBH
QlBQcmVmZXJlbmNlVGFiVmlldygkdGhpcyk7Cgl9CgoJZnVuY3Rpb24gbWFpbiAoKSB7CgkJ
cmVxdWlyZV9wcml2cygkdGhpcy0+ZXZlbnQpOwoJfQoKCWZ1bmN0aW9uIGdldF9hbGxfcGVy
bWxpbmtzICgkc29ydCA9IDAsICRleGNsdWRlID0gYXJyYXkoKSkgewoJCXN0YXRpYyAkcnM7
CgkJaWYgKCFpc3NldCgkcnMpKQoJCQkkcnMgPSBzYWZlX2NvbHVtbigKCQkJCSJSRVBMQUNF
KG5hbWUsICd7JHRoaXMtPnBsdWdpbl9uYW1lfV8nLCAnJykgQVMgaWQiLCAndHhwX3ByZWZz
JywKCQkJCSJgZXZlbnRgID0gJ3skdGhpcy0+ZXZlbnR9JyBBTkQgYG5hbWVgIFJFR0VYUCAn
XnskdGhpcy0+cGx1Z2luX25hbWV9Xy57MTN9JCciCgkJCSk7CgoJCWlmIChAdHhwaW50ZXJm
YWNlID09ICdwdWJsaWMnKQoJCQkkdGhpcy0+ZGVidWcoJ0xvYWRpbmcgcGVybWxpbmtzIGZy
b20gZGInKTsKCQkkaSA9IDA7CgoJCSRwZXJtbGlua3MgPSBhcnJheSgpOwoJCWZvcmVhY2gg
KCRycyBhcyAkaWQpIHsKCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkaWQpOwoKCQkJ
aWYgKGNvdW50KCRleGNsdWRlKSA+IDApCgkJCQlmb3JlYWNoICgkcGxbJ2NvbXBvbmVudHMn
XSBhcyAkcGxfYykgewoJCQkJCWlmIChpc19hcnJheSgkZXhjbHVkZSkgJiYgaW5fYXJyYXko
JHBsX2NbJ3R5cGUnXSwgJGV4Y2x1ZGUpKQoJCQkJCQljb250aW51ZSAyOwoJCQkJCWlmIChp
c19zdHJpbmcoJGV4Y2x1ZGUpICYmICRwbF9jWyd0eXBlJ10gPT09ICRleGNsdWRlKQoJCQkJ
CQljb250aW51ZSAyOwoJCQkJfQoKCQkJJHBlcm1saW5rc1skaWRdID0gJHBsOwoKCQkJaWYg
KCRzb3J0KQoJCQkJJHByZWNlZGVuY2VbJGlkXSA9ICRwZXJtbGlua3NbJGlkXVsnc2V0dGlu
Z3MnXVsncGxfcHJlY2VkZW5jZSddOwoJCX0KCgkJLy8gSWYgbW9yZSB0aGFuIG9uZSBwZXJt
YW5lbnQgbGluaywgc29ydCBieSB0aGVpciBwcmVjZWRlbmNlIHZhbHVlLgoJCWlmICgkc29y
dCAmJiBjb3VudCgkcGVybWxpbmtzKSA+IDEpCgkJCWFycmF5X211bHRpc29ydCgkcHJlY2Vk
ZW5jZSwgU09SVF9ERVNDLCAkcGVybWxpbmtzKTsKCgkJaWYgKEB0eHBpbnRlcmZhY2UgPT0g
J3B1YmxpYycpIHsKCQkJZm9yZWFjaCAoJHBlcm1saW5rcyBhcyAkcGwpCgkJCQkkdGhpcy0+
ZGVidWcoJHBsWydzZXR0aW5ncyddWydwbF9wcmVjZWRlbmNlJ10uJzogJy4kcGxbJ3NldHRp
bmdzJ11bJ3BsX25hbWUnXS4nICgnLiRwbFsnc2V0dGluZ3MnXVsncGxfcHJldmlldyddLicp
Jyk7CgkJfQoKCQlyZXR1cm4gJHBlcm1saW5rczsKCX0KCglmdW5jdGlvbiBnZXRfcGVybWxp
bmsgKCRpZCkgewoJCSRwZXJtbGluayA9ICR0aGlzLT5wcmVmKCRpZCk7CgkJcmV0dXJuIGlz
X2FycmF5KCRwZXJtbGluaykgPyAkcGVybWxpbmsgOiBhcnJheSgpOwoJfQoKCWZ1bmN0aW9u
IHJlbW92ZV9wZXJtbGluayAoJGlkKSB7CgkJJHBlcm1saW5rID0gJHRoaXMtPmdldF9wZXJt
bGluaygkaWQpOwoJCXNhZmVfZGVsZXRlKCd0eHBfcHJlZnMnLCAiYGV2ZW50YCA9ICd7JHRo
aXMtPmV2ZW50fScgQU5EIGBuYW1lYCBMSUtFICd7JHRoaXMtPnBsdWdpbl9uYW1lfV97JGlk
fSUnIik7CgkJcmV0dXJuICRwZXJtbGlua1snc2V0dGluZ3MnXVsncGxfbmFtZSddOwoJfQoK
CWZ1bmN0aW9uIF9mZWVkX2VudHJ5ICgpIHsKCQlzdGF0aWMgJHNldDsKCQlpZiAoIWlzc2V0
KCRzZXQpKSB7CgkJCS8vIFdlJ3JlIGluIGEgZmVlZCBmb3JjZSBkZWJ1Z2dpbmcgb2ZmLgoJ
CQkkdGhpcy0+cHJlZmVyZW5jZXNbJ2RlYnVnJ11bJ3ZhbHVlJ10gPSAkR0xPQkFMU1sncHJl
ZnMnXVskdGhpcy0+cGx1Z2luX25hbWUuJ19kZWJ1ZyddID0gMDsKCgkJCSR0aGlzLT5zZXRf
cGVybWxpbmtfbW9kZSh0cnVlKTsKCQkJJHNldCA9IHRydWU7CgkJfQoJfQoKCWZ1bmN0aW9u
IF90ZXh0cGF0dGVybiAoKSB7CgkJZ2xvYmFsICRwbHVnaW5zX3ZlciwgJHByZXRleHQsICRw
cmVmcywgJHBsdWdpbl9jYWxsYmFjazsKCgkJJHRoaXMtPmRlYnVnKCdQbHVnaW46ICcuJHRo
aXMtPnBsdWdpbl9uYW1lLicgLSAnLiRwbHVnaW5zX3ZlclskdGhpcy0+cGx1Z2luX25hbWVd
KTsKCQkkdGhpcy0+ZGVidWcoJ0Z1bmN0aW9uOiAnLl9fRlVOQ1RJT05fXy4nKCknKTsKCgkJ
Ly8gVVJJCgkJJHJlcSA9ICRwcmV0ZXh0WydyZXEnXTsKCQkkcmVxID0gcHJlZ19yZXBsYWNl
KCclXD9bXlwvXSskJScsICcnLCAkcmVxKTsKCQkkdGhpcy0+ZGVidWcoJ1JlcXVlc3QgVVJJ
OiAnLiRyZXEpOwoJCSR1cmkgPSBleHBsb2RlKCcvJywgdHJpbSgkcmVxLCAnLycpKTsKCgkJ
Ly8gVGhlIG51bWJlciBvZiBjb21wb25lbnRzIGNvbWVzIGluIHVzZWZ1bCB3aGVuIGRldGVy
bWluaW5nIHRoZSBiZXN0IHBhcnRpYWwgbWF0Y2guCgkJJHVyaV9jb21wb25lbnRfY291bnQg
PSBjb3VudCgkdXJpKTsKCgkJLy8gUGVybWFuZW50IGxpbmtzCgkJJHBlcm1saW5rcyA9ICR0
aGlzLT5nZXRfYWxsX3Blcm1saW5rcygxKTsKCgkJLy8gRm9yY2UgVGV4dHBhdHRlcm4gYW5k
IHRhZ3MgdG8gdXNlIG1lc3N5IFVSTHMgLSB0aGVzZSBhcmUgZWFzaWVyIHRvCgkJLy8gZmlu
ZCBpbiByZWdleAoJCSR0aGlzLT5zZXRfcGVybWxpbmtfbW9kZSgpOwoKCQlpZiAoY291bnQo
JHBlcm1saW5rcykpIHsKCgkJCS8vIFdlIGFsc28gd2FudCB0byBtYXRjaCB0aGUgZnJvbnQg
cGFnZSBvZiB0aGUgc2l0ZSAoZm9yIHBhZ2UgbnVtYmVycyAvIGZlZWRzIGV0Yy4uKS4KCQkJ
Ly8gQWRkIGEgcGVybWxpbmtzIHJ1bGUgd2hpY2ggd2lsbCBkbyB0aGF0LgoJCQkkcGVybWxp
bmtzWydkZWZhdWx0J10gPSBhcnJheSgKCQkJCSdjb21wb25lbnRzJyA9PiBhcnJheSgpLAoJ
CQkJJ3NldHRpbmdzJyA9PiBhcnJheSgKCQkJCQkncGxfbmFtZScgPT4gJ2dicF9wZXJtYW5l
bnRfbGlua3NfZGVmYXVsdCcsICdwbF9wcmVjZWRlbmNlJyA9PiAnJywgJ3BsX3ByZXZpZXcn
ID0+ICcvJywKCQkJCQknY29uX3NlY3Rpb24nID0+ICcnLCAnY29uX2NhdGVnb3J5JyA9PiAn
JywgJ2Rlc19zZWN0aW9uJyA9PiAnJywgJ2Rlc19jYXRlZ29yeScgPT4gJycsCgkJCQkJJ2Rl
c19wZXJtbGluaycgPT4gJycsICdkZXNfZmVlZCcgPT4gJycsICdkZXNfbG9jYXRpb24nID0+
ICcnLCAnZGVzX3BhZ2UnID0+ICcnCgkJCSkpOwoKCQkJLy8gRXh0ZW5kIHRoZSBwcmV0ZXh0
X3JlcGxhY2VtZW50IHNjb3BlIG91dHNpZGUgdGhlIGZvcmVhY2ggcGVybWxpbmsgbG9vcAoJ
CQkkcHJldGV4dF9yZXBsYWNlbWVudCA9IE5VTEw7CgoJCQlmb3JlYWNoKCRwZXJtbGlua3Mg
YXMgJGlkID0+ICRwbCkgewoJCQkJLy8gRXh0cmFjdCB0aGUgcGVybWxpbmsgc2V0dGluZ3MK
CQkJCSRwbF9zZXR0aW5ncyA9ICRwbFsnc2V0dGluZ3MnXTsKCQkJCWV4dHJhY3QoJHBsX3Nl
dHRpbmdzKTsKCgkJCQkkdGhpcy0+ZGVidWcoJ1Blcm1saW5rIG5hbWU6ICcuJHBsX25hbWUp
OwoJCQkJJHRoaXMtPmRlYnVnKCdQZXJtbGluayBpZDogJy4kaWQpOwoJCQkJJHRoaXMtPmRl
YnVnKCdQcmV2aWV3OiAnLiRwbF9wcmV2aWV3KTsKCgkJCQkkcGxfY29tcG9uZW50cyA9ICRw
bFsnY29tcG9uZW50cyddOwoKCQkJCS8vIFVSSSBjb21wb25lbnRzCgkJCQkkdXJpX2NvbXBv
bmVudHMgPSAkdXJpOwoKCQkJCSR0aGlzLT5kZWJ1ZygnUEwgY29tcG9uZW50IGNvdW50OiAn
LmNvdW50KCRwbF9jb21wb25lbnRzKSk7CgkJCQkkdGhpcy0+ZGVidWcoJ1VSTCBjb21wb25l
bnQgY291bnQ6ICcuY291bnQoJHVyaV9jb21wb25lbnRzKSk7CgoJCQkJJGRhdGUgPSBmYWxz
ZTsgJHRpdGxlX3BhZ2VfZmVlZCA9IGZhbHNlOwoJCQkJZm9yZWFjaCgkcGxfY29tcG9uZW50
cyBhcyAkcGxfYykKCQkJCQkvLyBBcmUgd2UgZXhwZWN0aW5nIGEgZGF0ZSBjb21wb25lbnQ/
IElmIHNvIHRoZSBudW1iZXIgb2YgcGwgYW5kIHVyaSBjb21wb25lbnRzIHdvbid0IG1hdGNo
CgkJCQkJaWYgKCRwbF9jWyd0eXBlJ10gPT0gJ2RhdGUnKQoJCQkJCSAJJGRhdGUgPSB0cnVl
OwoJCQkJCS8vIERvIHdlIGhhdmUgZWl0aGVyIGEgdGl0bGUsIHBhZ2Ugb3IgYSBmZWVkIGNv
bXBvbmVudD8KCQkJCQllbHNlIGlmIChpbl9hcnJheSgkcGxfY1sndHlwZSddLCBhcnJheSgn
dGl0bGUnLCAncGFnZScsICdmZWVkJykpKQoJCQkJCQkkdGl0bGVfcGFnZV9mZWVkID0gdHJ1
ZTsKCgkJCQlpZiAoISR0aXRsZV9wYWdlX2ZlZWQpCgkJCQkJLy8gSWYgdGhlcmUgaXNuJ3Qg
YSB0aXRsZSwgcGFnZSBvciBmZWVkIGNvbXBvbmVudCB0aGVuIGFwcGVuZCBhIHNwZWNpYWwg
dHlwZSBmb3IgY2xlYXZlciBwYXJ0aWFsIG1hdGNoaW5nCgkJCQkJJHBsX2NvbXBvbmVudHNb
XSA9IGFycmF5KCd0eXBlJyA9PiAndGl0bGVfcGFnZV9mZWVkJywgJ3ByZWZpeCcgPT4gJycs
ICdzdWZmaXgnID0+ICcnLCAncmVnZXgnID0+ICcnLCAndGV4dCcgPT4gJycpOwoKCQkJCS8v
IEV4aXQgZWFybHkgaWYgdGhlcmUgYXJlIG1vcmUgVVJMIGNvbXBvbmVudHMgdGhhbiBQTCBj
b21wb25lbnRzLAoJCQkJLy8gdGFraW5nIGludG8gYWNjb3VudCB3aGV0aGVyIHRoZXJlIGlz
IGEgZGF0YSBjb21wb25lbnQKCQkJCWlmICghJHVyaV9jb21wb25lbnRzWzBdIHx8IGNvdW50
KCR1cmlfY29tcG9uZW50cykgPiBjb3VudCgkcGxfY29tcG9uZW50cykgKyAoJGRhdGUgPyAy
IDogMCkpIHsKCQkJCQkkdGhpcy0+ZGVidWcoJ01vcmUgVVJMIGNvbXBvbmVudHMgdGhhbiBQ
TCBjb21wb25lbnRzJyk7CgkJCQkJY29udGludWU7CgkJCQl9CgoJCQkJLy8gUmVzZXQgcHJl
dGV4dF9yZXBsYWNlbWVudCBhcyB3ZSBhcmUgYWJvdXQgdG8gc3RhcnQgYW5vdGhlciBjb21w
YXJpc29uCgkJCQkkcHJldGV4dF9yZXBsYWNlbWVudCA9IGFycmF5KCdwZXJtbGlua19pZCcg
PT4gJGlkKTsKCgkJCQkvLyBSZXNldCB0aGUgYXJ0aWNsZSBjb250ZXh0IHN0cmluZwoJCQkJ
JGNvbnRleHQgPSBhcnJheSgpOwoJCQkJdW5zZXQoJGNvbnRleHRfc3RyKTsKCQkJCWlmICgh
ZW1wdHkoJGRlc19zZWN0aW9uKSkKCQkJCQkkY29udGV4dFtdID0gImBTZWN0aW9uYCA9ICck
ZGVzX3NlY3Rpb24nIjsKCQkJCWlmICghZW1wdHkoJGRlc19jYXRlZ29yeSkpCgkJCQkJJGNv
bnRleHRbXSA9ICIoYENhdGVnb3J5MWAgPSAnJGRlc19jYXRlZ29yeScgT1IgYENhdGVnb3J5
MmAgPSAnJGRlc19jYXRlZ29yeScpIjsKCQkJCSRjb250ZXh0X3N0ciA9IChjb3VudCgkY29u
dGV4dCkgPiAwID8gJ2FuZCAnLmpvaW4oJyBhbmQgJywgJGNvbnRleHQpIDogJycpOwoKCQkJ
CS8vIEFzc3VtZSB0aGVyZSBpcyBubyBtYXRjaAoJCQkJJHBhcnRpYWxfbWF0Y2ggPSBmYWxz
ZTsKCQkJCSRjbGVhdmVyX3BhcnRpYWxfbWF0Y2ggPSBmYWxzZTsKCgkJCQkvLyBMb29wIHRo
cm91Z2ggdGhlIHBlcm1saW5rIGNvbXBvbmVudHMKCQkJCWZvcmVhY2ggKCRwbF9jb21wb25l
bnRzIGFzICRwbF9jX2luZGV4ID0+ICRwbF9jKSB7CgkJCQkJLy8gQXNzdW1lIHRoZXJlIGlz
IG5vIG1hdGNoCgkJCQkJJG1hdGNoID0gZmFsc2U7CgoJCQkJCS8vIENoZWNrIHRvIHNlZSBp
ZiB0aGVyZSBhcmUgc3RpbGwgVVJJIGNvbXBvbmVudHMgdG8gYmUgY2hlY2tlZC4KCQkJCQlp
ZiAoY291bnQoJHVyaV9jb21wb25lbnRzKSkKCQkJCQkJLy8gR2V0IHRoZSBuZXh0IGNvbXBv
bmVudC4KCQkJCQkJJHVyaV9jID0gYXJyYXlfc2hpZnQoJHVyaV9jb21wb25lbnRzKTsKCgkJ
CQkJZWxzZSBpZiAoISR0aXRsZV9wYWdlX2ZlZWQgJiYgY291bnQoJHBsX2NvbXBvbmVudHMp
IC0gMSA9PSAkdXJpX2NvbXBvbmVudF9jb3VudCkgewoJCQkJCQkvLyBJZiB3ZSBhcHBlbmRl
ZCBhIHRpdGxlX3BhZ2VfZmVlZCBjb21wb25lbnQgZWFybGllciBhbmQgcGVybWxpbmsgYW5k
IFVSSSBjb21wb25lbnRzCgkJCQkJCS8vIGNvdW50cyBhcmUgZXF1YWwsIHdlIG11c3Qgb2Yg
ZmluaXNoZWQgY2hlY2tpbmcgdGhpcyBwZXJtbGluaywgYW5kIGl0IG1hdGNoZXMgc28gYnJl
YWsuCgkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCWJyZWFrOwoKCQkJCQl9IGVsc2UgewoJ
CQkJCQkvLyBJZiB0aGVyZSBhcmUgbm8gbW9yZSBVUkkgY29tcG9uZW50cyB0aGVuIHdlIGhh
dmUgYSBwYXJ0aWFsIG1hdGNoLgoJCQkJCQkvLyBTdG9yZSB0aGUgcGFydGlhbCBtYXRjaCBk
YXRhIHVubGVzcyB0aGVyZSBoYXMgYmVlbiBhIHByZWNlZGluZyBwZXJtbGluayB3aXRoIHRo
ZQoJCQkJCQkvLyBzYW1lIG51bWJlciBvZiBjb21wb25lbnRzLCBhcyBwZXJtbGluayBoYXZl
IGFscmVhZHkgYmVlbiBzb3J0ZWQgYnkgcHJlY2VkZW5jZS4KCQkJCQkJaWYgKCFhcnJheV9r
ZXlfZXhpc3RzKCR1cmlfY29tcG9uZW50X2NvdW50LCAkdGhpcy0+cGFydGlhbF9tYXRjaGVz
KSkKCQkJCQkJCSR0aGlzLT5wYXJ0aWFsX21hdGNoZXNbJHVyaV9jb21wb25lbnRfY291bnRd
ID0gJHByZXRleHRfcmVwbGFjZW1lbnQ7CgoJCQkJCQkvLyBVbnNldCBwcmV0ZXh0X3JlcGxh
Y2VtZW50IGFzIGNoYW5nZXMgY291bGQgb2YgYmVlbiBtYWRlIGluIGEgcHJlY2VkaW5nIGNv
bXBvbmVudAoJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudCk7CgoJCQkJCQkvLyBC
cmVhayBlYXJseSBmb3JtIHRoZSBmb3JlYWNoIHBlcm1saW5rIGNvbXBvbmVudHMgbG9vcC4K
CQkJCQkJJHBhcnRpYWxfbWF0Y2ggPSB0cnVlOwoJCQkJCQlicmVhazsKCQkJCQl9CgoJCQkJ
CS8vIEV4dHJhY3QgdGhlIHBlcm1saW5rIGNvbXBvbmVudHMuCgkJCQkJZXh0cmFjdCgkcGxf
Yyk7CgoJCQkJCS8vIElmIGl0J3MgYSBkYXRlLCBncmFiIGFuZCBjb21iaW5lIHRoZSBuZXh0
IHR3byBVUkkgY29tcG9uZW50cy4KCQkJCQlpZiAoJHR5cGUgPT0gJ2RhdGUnKQoJCQkJCQkk
dXJpX2MgLj0gJy8nLmFycmF5X3NoaWZ0KCR1cmlfY29tcG9uZW50cykuJy8nLmFycmF5X3No
aWZ0KCR1cmlfY29tcG9uZW50cyk7CgoJCQkJCS8vIERlY29kZSB0aGUgVVJMCgkJCQkJJHVy
aV9jID0gdXJsZGVjb2RlKCR1cmlfYyk7CgoJCQkJCS8vIEFsd2F5cyBjaGVjayB0aGUgdHlw
ZSB1bmxlc3MgdGhlIHByZWZpeCBvciBzdWZmaXggYXJlbid0IHRoZXJlCgkJCQkJJGNoZWNr
X3R5cGUgPSB0cnVlOwoKCQkJCQkvLyBDaGVjayBwcmVmaXgKCQkJCQlpZiAoJHByZWZpeCAm
JiAkdGhpcy0+cHJlZignc2hvd19wcmVmaXgnKSkgewoJCQkJCQkkc2FuaXRpemVkX3ByZWZp
eCA9IHVybGRlY29kZSgkdGhpcy0+ZW5jb2RlX3VybCgkcHJlZml4KSk7CgkJCQkJCWlmICgo
JHBvcyA9IHN0cnBvcygkdXJpX2MsICRzYW5pdGl6ZWRfcHJlZml4KSkgPT09IGZhbHNlIHx8
ICRwb3MgIT0gMCkgewoJCQkJCQkJJGNoZWNrX3R5cGUgPSBmYWxzZTsKCQkJCQkJCSR0aGlz
LT5kZWJ1ZygnQ2FuXCd0IGZpbmQgcHJlZml4OiAnLiRwcmVmaXgpOwoJCQkJCQl9IGVsc2UK
CQkJCQkJCS8vIENoZWNrIHBhc3NlZCwgcmVtb3ZlIHByZWZpeCByZWFkeSBmb3IgdGhlIG5l
eHQgY2hlY2sKCQkJCQkJCSR1cmlfYyA9IHN1YnN0cl9yZXBsYWNlKCR1cmlfYywgJycsIDAs
IHN0cmxlbigkc2FuaXRpemVkX3ByZWZpeCkpOwoJCQkJCX0KCgkJCQkJLy8gQ2hlY2sgc3Vm
Zml4CgkJCQkJaWYgKCRjaGVja190eXBlICYmICRzdWZmaXggJiYgJHRoaXMtPnByZWYoJ3No
b3dfc3VmZml4JykpIHsKCQkJCQkJJHNhbml0aXplZF9zdWZmaXggPSB1cmxkZWNvZGUoJHRo
aXMtPmVuY29kZV91cmwoJHN1ZmZpeCkpOwoJCQkJCQlpZiAoKCRwb3MgPSBzdHJycG9zKCR1
cmlfYywgJHNhbml0aXplZF9zdWZmaXgpKSA9PT0gZmFsc2UpIHsKCQkJCQkJCSRjaGVja190
eXBlID0gZmFsc2U7CgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NhblwndCBmaW5kIHN1ZmZpeDog
Jy4kc3VmZml4KTsKCQkJCQkJfSBlbHNlCgkJCQkJCQkvLyBDaGVjayBwYXNzZWQsIHJlbW92
ZSBzdWZmaXggcmVhZHkgZm9yIHRoZSBuZXh0IGNoZWNrCgkJCQkJCQkkdXJpX2MgPSBzdWJz
dHJfcmVwbGFjZSgkdXJpX2MsICcnLCAkcG9zLCBzdHJsZW4oJHNhbml0aXplZF9zdWZmaXgp
KTsKCQkJCQl9CgoJCQkJCS8vIEJvdGggdGhlIHByZWZpeCBhbmQgc3VmZml4IHNldHRpbmdz
IGhhdmUgcGFzc2VkCgkJCQkJaWYgKCRjaGVja190eXBlKSB7CgkJCQkJCSR0aGlzLT5kZWJ1
ZygnQ2hlY2tpbmcgaWYgIicuJHVyaV9jLiciIGlzIG9mIHR5cGUgIicuJHR5cGUuJyInKTsK
CQkJCQkJJHVyaV9jID0gZG9TbGFzaCgkdXJpX2MpOwoKCQkJCQkJLy8KCQkJCQkJaWYgKCRw
cmVmc1sncGVybWFsaW5rX3RpdGxlX2Zvcm1hdCddKSB7CgkJCQkJCQkkbXRfc2VhcmNoID0g
YXJyYXkoJy9fLycsICcvXC5odG1sJC8nKTsKCQkJCQkJCSRtdF9yZXBsYWNlID0gYXJyYXko
Jy0nLCAnJyk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkkbXRfc2VhcmNoID0gYXJyYXkoJy8o
PzpefF8pKC4pL2UnLCAnL1wuaHRtbCQvJyk7CgkJCQkJCQkkbXRfcmVwbGFjZSA9IGFycmF5
KCJzdHJ0b3VwcGVyKCdcXDEnKSIsICcnKTsKCQkJCQkJfQoJCQkJCQkkbXRfdXJpX2MgPSAk
dGhpcy0+cHJlZigncmVkaXJlY3RfbXRfc3R5bGVfbGlua3MnKQoJCQkJCQkJPyBwcmVnX3Jl
cGxhY2UoJG10X3NlYXJjaCwgJG10X3JlcGxhY2UsICR1cmlfYykKCQkJCQkJCTogJyc7CgoJ
CQkJCQkvLyBDb21wYXJlIGJhc2VkIG9uIHR5cGUKCQkJCQkJc3dpdGNoICgkdHlwZSkgewoJ
CQkJCQkJY2FzZSAnc2VjdGlvbic6CgkJCQkJCQkJaWYgKCRycyA9IHNhZmVfcm93KCduYW1l
JywgJ3R4cF9zZWN0aW9uJywgIihgbmFtZWAgbGlrZSAnJHVyaV9jJyBvciBgbmFtZWAgbGlr
ZSAnJG10X3VyaV9jJykgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSR0aGlzLT5kZWJ1ZygnU2Vj
dGlvbiBuYW1lOiAnLiRyc1snbmFtZSddKTsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1l
bnRbJ3MnXSA9ICRyc1snbmFtZSddOwoJCQkJCQkJCQkkY29udGV4dFtdID0gImBTZWN0aW9u
YCA9ICd7JHJzWyduYW1lJ119JyI7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJ
fQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdjYXRlZ29yeSc6CgkJCQkJCQkJaWYgKCRy
cyA9IHNhZmVfcm93KCduYW1lJywgJ3R4cF9jYXRlZ29yeScsICIoYG5hbWVgIGxpa2UgJyR1
cmlfYycgb3IgYG5hbWVgIGxpa2UgJyRtdF91cmlfYycpIGFuZCBgdHlwZWAgPSAnYXJ0aWNs
ZScgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSR0aGlzLT5kZWJ1ZygnQ2F0ZWdvcnkgbmFtZTog
Jy4kcnNbJ25hbWUnXSk7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydjJ10gPSAk
cnNbJ25hbWUnXTsKCQkJCQkJCQkJJGNvbnRleHRbXSA9ICIoYENhdGVnb3J5MWAgPSAneyRy
c1snbmFtZSddfScgT1IgYENhdGVnb3J5MmAgPSAnJHVyaV9jJykiOwoJCQkJCQkJCQkkbWF0
Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAndGl0bGUn
OgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygndXJsX3RpdGxlJywgJ3RleHRwYXR0ZXJu
JywgIihgdXJsX3RpdGxlYCBsaWtlICckdXJpX2MnIG9yIGB1cmxfdGl0bGVgIGxpa2UgJyRt
dF91cmlfYycpICRjb250ZXh0X3N0ciBhbmQgYFN0YXR1c2AgPj0gNCBsaW1pdCAxIikpIHsK
CQkJCQkJCQkJJHRoaXMtPmRlYnVnKCdVUkwgVGl0bGU6ICcuJHJzWyd1cmxfdGl0bGUnXSk7
CgkJCQkJCQkJCSRtdF9yZWRpcmVjdCA9ICgkdXJpX2MgIT0gJG10X3VyaV9jKTsKCQkJCQkJ
CQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3VybF90aXRsZSddID0gJHJzWyd1cmxfdGl0bGUn
XTsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJ
CQkJCWNhc2UgJ2lkJzoKCQkJCQkJCQlpZiAoJHJzID0gc2FmZV9yb3coJ0lELCBQb3N0ZWQn
LCAndGV4dHBhdHRlcm4nLCAiYElEYCA9ICckdXJpX2MnICRjb250ZXh0X3N0ciBhbmQgYFN0
YXR1c2AgPj0gNCBsaW1pdCAxIikpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRb
J2lkJ10gPSAkcnNbJ0lEJ107CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydQb3N0
ZWQnXSA9ICRyc1snUG9zdGVkJ107CgkJCQkJCQkJCSRwcmV0ZXh0WydudW1QYWdlcyddID0g
MTsKCQkJCQkJCQkJJHByZXRleHRbJ2lzX2FydGljbGVfbGlzdCddID0gZmFsc2U7CgkJCQkJ
CQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNl
ICdhdXRob3InOgoJCQkJCQkJCWlmICgkYXV0aG9yID0gc2FmZV9maWVsZCgnbmFtZScsICd0
eHBfdXNlcnMnLCAiUmVhbE5hbWUgbGlrZSAnJHVyaV9jJyBsaW1pdCAxIikpIHsKCQkJCQkJ
CQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ2F1dGhvciddID0gJGF1dGhvcjsKCQkJCQkJCQkJ
JGNvbnRleHRbXSA9ICJgQXV0aG9ySURgID0gJyRhdXRob3InIjsKCQkJCQkJCQkJJG1hdGNo
ID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ2xvZ2luJzoK
CQkJCQkJCQlpZiAoJGF1dGhvciA9IHNhZmVfZmllbGQoJ25hbWUnLCAndHhwX3VzZXJzJywg
Im5hbWUgbGlrZSAnJHVyaV9jJyBsaW1pdCAxIikpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVw
bGFjZW1lbnRbJ2F1dGhvciddID0gJGF1dGhvcjsKCQkJCQkJCQkJJGNvbnRleHRbXSA9ICJg
QXV0aG9ySURgID0gJyRhdXRob3InIjsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJ
CQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ2N1c3RvbSc6CgkJCQkJCQkJJGN1c3Rv
bV9vcHRpb25zID0gYXJyYXlfdmFsdWVzKGFycmF5X21hcChhcnJheSgkdGhpcywgImVuY29k
ZV91cmwiKSwgc2FmZV9jb2x1bW4oImN1c3RvbV8kY3VzdG9tIiwgJ3RleHRwYXR0ZXJuJywg
ImN1c3RvbV8kY3VzdG9tICE9ICcnIikpKTsKCQkJCQkJCQlpZiAoJHRoaXMtPnByZWYoJ2Zv
cmNlX2xvd2VyY2FzZV91cmxzJykpCgkJCQkJCQkJCSRjdXN0b21fb3B0aW9ucyA9IGFycmF5
X21hcCgic3RydG9sb3dlciIsICRjdXN0b21fb3B0aW9ucyk7CgkJCQkJCQkJaWYgKGluX2Fy
cmF5KCR1cmlfYywgJGN1c3RvbV9vcHRpb25zKSkgewoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVl
OwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnZGF0ZSc6CgkJCQkJCQkJ
aWYgKHByZWdfbWF0Y2goJy9eXGR7NH1cL1xkezJ9XC9cZHsyfSQvJywgJHVyaV9jKSkgewoJ
CQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF0ZSddID0gc3RyX3JlcGxhY2UoJy8n
LCAnLScsICR1cmlfYyk7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJ
CQkJYnJlYWs7CgkJCQkJCQljYXNlICd5ZWFyJzoKCQkJCQkJCQlpZiAocHJlZ19tYXRjaCgn
L15cZHs0fSQvJywgJHVyaV9jKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsn
eWVhciddID0gJHVyaV9jOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJ
CQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnbW9udGgnOgoJCQkJCQkJY2FzZSAnZGF5JzoKCQkJ
CQkJCQlpZiAocHJlZ19tYXRjaCgnL15cZHsyfSQvJywgJHVyaV9jKSkgewoJCQkJCQkJCQkk
cHJldGV4dF9yZXBsYWNlbWVudFskdHlwZV0gPSAkdXJpX2M7CgkJCQkJCQkJCSRtYXRjaCA9
IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdwYWdlJzoKCQkJ
CQkJCQlpZiAoaXNfbnVtZXJpYygkdXJpX2MpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxh
Y2VtZW50WydwZyddID0gJHVyaV9jOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJ
CX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnZmVlZCc6CgkJCQkJCQkJaWYgKGluX2Fy
cmF5KCR1cmlfYywgYXJyYXkoJ3JzcycsICdhdG9tJykpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0
X3JlcGxhY2VtZW50WyR1cmlfY10gPSAxOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJ
CQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnc2VhcmNoJzoKCQkJCQkJCQkJJHBy
ZXRleHRfcmVwbGFjZW1lbnRbJ3EnXSA9ICR1cmlfYzsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1
ZTsKCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAndGV4dCc6CgkJCQkJCQkJaWYgKCR0aGlz
LT5lbmNvZGVfdXJsKCR0ZXh0KSA9PSAkdXJpX2MpIHsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1
ZTsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbInBlcm1saW5rX3RleHRfeyRuYW1l
fSJdID0gJHVyaV9jOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAncmVn
ZXgnOgoJCQkJCQkJCS8vIENoZWNrIHRvIHNlZSBpZiByZWdleCBpcyB2YWxpZCB3aXRob3V0
IG91dHB1dHRpbmcgZXJyb3IgbWVzc2FnZXMuCgkJCQkJCQkJb2Jfc3RhcnQoKTsKCQkJCQkJ
CQlwcmVnX21hdGNoKCRyZWdleCwgJHVyaV9jLCAkcmVnZXhfbWF0Y2hlcyk7CgkJCQkJCQkJ
JGlzX3ZhbGlkX3JlZ2V4ID0gIShvYl9nZXRfY2xlYW4oKSk7CgkJCQkJCQkJaWYgKCRpc192
YWxpZF9yZWdleCAmJiBAJHJlZ2V4X21hdGNoZXNbMF0pIHsKCQkJCQkJCQkJJG1hdGNoID0g
dHJ1ZTsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbInBlcm1saW5rX3JlZ2V4X3sk
bmFtZX0iXSA9ICRyZWdleF9tYXRjaGVzWzBdOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJ
CQkJCQl9IC8vIHN3aXRjaCB0eXBlIGVuZAoKCQkJCQkJLy8gVXBkYXRlIHRoZSBhcnRpY2xl
IGNvbnRleHQgc3RyaW5nCgkJCQkJCSRjb250ZXh0X3N0ciA9IChjb3VudCgkY29udGV4dCkg
PiAwID8gJ2FuZCAnLmpvaW4oJyBhbmQgJywgJGNvbnRleHQpIDogJycpOwoKCQkJCQkJJHRo
aXMtPmRlYnVnKCgkbWF0Y2ggPT0gdHJ1ZSkgPyAnWUVTJyA6ICdOTycpOwoKCQkJCQkJaWYg
KCEkbWF0Y2ggJiYgISRjbGVhdmVyX3BhcnRpYWxfbWF0Y2ggJiYgJHRoaXMtPnByZWYoJ3Vz
ZV9jbGVhdmVyX3BhcnRpYWxfbWF0Y2hlcycpKSB7CgkJCQkJCQkvLyBUaGVyZSBoYXNuJ3Qg
YmVlbiBhIG1hdGNoIG9yIGEgY29tcGxldGUgY2xlYXZlciBwYXJ0aWFsIG1hdGNoLiBMZXRz
IHRyeSB0byBiZSBjbGVhdmVyIGFuZAoJCQkJCQkJLy8gY2hlY2sgdG8gc2VlIGlmIHRoaXMg
Y29tcG9uZW50IGlzIGVpdGhlciBhIHRpdGxlLCBwYWdlIG9yIGEgZmVlZC4gVGhpcyBtYWtl
cyBpdCBtb3JlIHByb2JhYmxlCgkJCQkJCQkvLyBhIHN1Y2Nlc3NmdWwgbWF0Y2ggZm9yIGEg
Z2l2ZW4gcGVybWxpbmsgcnVsZSBvY2N1cnMuCgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NoZWNr
aW5nIGlmICInLiR1cmlfYy4nIiBpcyBvZiB0eXBlICJ0aXRsZV9wYWdlX2ZlZWQiJyk7CgoJ
CQkJCQkJaWYgKCR0eXBlICE9ICd0aXRsZScgJiYgJHVybF90aXRsZSA9IHNhZmVfZmllbGQo
J3VybF90aXRsZScsICd0ZXh0cGF0dGVybicsICJgdXJsX3RpdGxlYCBsaWtlICckdXJpX2Mn
ICRjb250ZXh0X3N0ciBhbmQgYFN0YXR1c2AgPj0gNCBsaW1pdCAxIikpIHsKCQkJCQkJCQkk
cHJldGV4dF9yZXBsYWNlbWVudFsndXJsX3RpdGxlJ10gPSAkdXJsX3RpdGxlOwoJCQkJCQkJ
CSRwcmV0ZXh0WydudW1QYWdlcyddID0gMTsKCQkJCQkJCQkkcHJldGV4dFsnaXNfYXJ0aWNs
ZV9saXN0J10gPSBmYWxzZTsKCQkJCQkJCQkkY2xlYXZlcl9wYXJ0aWFsX21hdGNoID0gdHJ1
ZTsKCQkJCQkJCX0gZWxzZSBpZiAoJHRoaXMtPnByZWYoJ2NsZWFuX3BhZ2VfYXJjaGl2ZV9s
aW5rcycpICYmICR0eXBlICE9ICdwYWdlJyAmJiBpc19udW1lcmljKCR1cmlfYykpIHsKCQkJ
CQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncGcnXSA9ICR1cmlfYzsKCQkJCQkJCQkkY2xl
YXZlcl9wYXJ0aWFsX21hdGNoID0gdHJ1ZTsKCQkJCQkJCX0gZWxzZSBpZiAoJHR5cGUgIT0g
J2ZlZWQnICYmIGluX2FycmF5KCR1cmlfYywgYXJyYXkoJ3JzcycsICdhdG9tJykpKSB7CgkJ
CQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJHVyaV9jXSA9IDE7CgkJCQkJCQkJJGNsZWF2
ZXJfcGFydGlhbF9tYXRjaCA9IHRydWU7CgkJCQkJCQl9CgoJCQkJCQkJJHRoaXMtPmRlYnVn
KCgkY2xlYXZlcl9wYXJ0aWFsX21hdGNoID09IHRydWUpID8gJ1lFUycgOiAnTk8nKTsKCgkJ
CQkJCQlpZiAoJGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkgewoJCQkJCQkJCSR0aGlzLT5jbGVh
dmVyX3BhcnRpYWxfbWF0Y2ggPSAkcHJldGV4dF9yZXBsYWNlbWVudDsKCgkJCQkJCQkJLy8g
VW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2VzIGNvdWxkIG9mIGJlZW4gbWFk
ZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBs
YWNlbWVudCk7CgoJCQkJCQkJCSRjbGVhdmVyX3BhcnRpYWxfbWF0Y2ggPSB0cnVlOwoJCQkJ
CQkJCWNvbnRpbnVlIDI7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9IC8vIGNoZWNrIHR5cGUg
ZW5kCgoJCQkJCS8vIEJyZWFrIGVhcmx5IGlmIHRoZSBjb21wb25lbnQgZG9lc24ndCBtYXRj
aCwgYXMgdGhlcmUgaXMgbm8gcG9pbnQgY29udGludWluZwoJCQkJCWlmICgkbWF0Y2ggPT0g
ZmFsc2UpIHsKCQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2Vz
IGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJdW5z
ZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9IC8v
IGZvcmVhY2ggcGVybWxpbmsgY29tcG9uZW50IGVuZAoKCQkJCWlmICghaXNzZXQoJHByZXRl
eHRfcmVwbGFjZW1lbnRbJ2lkJ10pKSB7CgkJCQkJaWYoaXNzZXQoJHByZXRleHRfcmVwbGFj
ZW1lbnRbJ3VybF90aXRsZSddKSkgewoJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBsYWNl
bWVudFsnZGF0ZSddKSkgewoJCQkJCQkJJGRhdGVfdmFsID0gJHByZXRleHRfcmVwbGFjZW1l
bnRbJ2RhdGUnXTsKCQkJCQkJfSBlbHNlIGlmKGlzc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50
Wyd5ZWFyJ10pKSB7CgkJCQkJCQkkZGF0ZV92YWwgPSAkcHJldGV4dF9yZXBsYWNlbWVudFsn
eWVhciddOwoJCQkJCQkJaWYoaXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ21vbnRoJ10p
KSB7CgkJCQkJCQkJJGRhdGVfdmFsIC49ICctJyAuICRwcmV0ZXh0X3JlcGxhY2VtZW50Wydt
b250aCddOwoJCQkJCQkJCWlmKGlzc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydkYXknXSkp
IHsKCQkJCQkJCQkJJGRhdGVfdmFsIC49ICctJyAuICRwcmV0ZXh0X3JlcGxhY2VtZW50Wydk
YXknXTsKCQkJCQkJCQl9CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQkJaWYoaXNzZXQoJGRhdGVf
dmFsKSkgJGNvbnRleHRfc3RyIC49ICIgYW5kIGBQb3N0ZWRgIGxpa2UgJyRkYXRlX3ZhbCUn
IjsKCQkJCQkJaWYgKCRycyA9IHNhZmVfcm93KCdJRCwgUG9zdGVkJywgJ3RleHRwYXR0ZXJu
JywgImB1cmxfdGl0bGVgIGxpa2UgJ3skcHJldGV4dF9yZXBsYWNlbWVudFsndXJsX3RpdGxl
J119JyAkY29udGV4dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgb3JkZXIgYnkgYFBvc3RlZGAg
ZGVzYyBsaW1pdCAxIikpIHsKCQkJCQkJCWlmKGlzc2V0KCRkYXRlX3ZhbCkpICR0aGlzLT5k
ZWJ1ZygnRm91bmQgZGF0ZSBhbmQgdGl0bGUtYmFzZWQgbWF0Y2guJyk7CgkJCQkJCQllbHNl
ICR0aGlzLT5kZWJ1ZygnRm91bmQgdGl0bGUtYmFzZWQgbWF0Y2guJyk7CgkJCQkJCQkkcHJl
dGV4dF9yZXBsYWNlbWVudFsnaWQnXSA9ICRyc1snSUQnXTsKCQkJCQkJCSRwcmV0ZXh0X3Jl
cGxhY2VtZW50WydQb3N0ZWQnXSA9ICRyc1snUG9zdGVkJ107CgkJCQkJCQkkcHJldGV4dFsn
bnVtUGFnZXMnXSA9IDE7CgkJCQkJCQkkcHJldGV4dFsnaXNfYXJ0aWNsZV9saXN0J10gPSBm
YWxzZTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCSRtYXRjaCA9IGZhbHNlOwoJCQkJCQkJdW5z
ZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoKCQkJCWlm
ICgkbWF0Y2ggfHwgJHBhcnRpYWxfbWF0Y2ggfHwgJGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkg
ewoJCQkJCS8vIEV4dHJhY3QgdGhlIHNldHRpbmdzIGZvciB0aGlzIHBlcm1saW5rCgkJCQkJ
QGV4dHJhY3QoJHBlcm1saW5rc1skcHJldGV4dF9yZXBsYWNlbWVudFsncGVybWxpbmtfaWQn
XV1bJ3NldHRpbmdzJ10pOwoKCQkJCQkvLyBDaGVjayB0aGUgcGVybWxpbmsgc2VjdGlvbiBh
bmQgY2F0ZWdvcnkgY29uZGl0aW9ucwoJCQkJCWlmICgoIWVtcHR5KCRjb25fc2VjdGlvbikg
JiYgJGNvbl9zZWN0aW9uICE9IEAkcHJldGV4dF9yZXBsYWNlbWVudFsncyddKSB8fAoJCQkJ
CSghZW1wdHkoJGNvbl9jYXRlZ29yeSkgJiYgJGNvbl9jYXRlZ29yeSAhPSBAJHByZXRleHRf
cmVwbGFjZW1lbnRbJ2MnXSkpIHsKCQkJCQkJJHRoaXMtPmRlYnVnKCdQZXJtbGluayBjb25k
aXRpb25zIGZhaWxlZCcpOwoJCQkJCQlpZiAoQCRjb25fc2VjdGlvbikgICR0aGlzLT5kZWJ1
ZygnY29uX3NlY3Rpb24gPSAnLiAkY29uX3NlY3Rpb24pOwoJCQkJCQlpZiAoQCRjb25fY2F0
ZWdvcnkpICR0aGlzLT5kZWJ1ZygnY29uX2NhdGVnb3J5ID0gJy4gJGNvbl9jYXRlZ29yeSk7
CgoJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudCk7CgkJCQkJfQoJCQkJCWVsc2Ug
aWYgKCRtYXRjaCAmJiBpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQkJCSR0aGlz
LT5kZWJ1ZygnV2UgaGF2ZSBhIG1hdGNoIScpOwoKCQkJCQllbHNlIGlmICgkcGFydGlhbF9t
YXRjaCAmJiBjb3VudCgkdGhpcy0+cGFydGlhbF9tYXRjaGVzKSkKCQkJCQkJJHRoaXMtPmRl
YnVnKCdXZSBoYXZlIGEgXCdwYXJ0aWFsIG1hdGNoXCcnKTsKCgkJCQkJZWxzZSBpZiAoJGNs
ZWF2ZXJfcGFydGlhbF9tYXRjaCAmJiBpc3NldCgkY2xlYXZlcl9wYXJ0aWFsX21hdGNoKSkK
CQkJCQkJJHRoaXMtPmRlYnVnKCdXZSBoYXZlIGEgXCdjbGVhdmVyIHBhcnRpYWwgbWF0Y2hc
JycpOwoKCQkJCQllbHNlIHsKCQkJCQkJJHRoaXMtPmRlYnVnKCdFcnJvcjogQ2FuXCd0IGRl
dGVybWluZSB0aGUgY29ycmVjdCB0eXBlIG1hdGNoJyk7CgkJCQkJCS8vIFRoaXMgcGVybWxp
bmsgaGFzIGZhaWxlZCwgY29udGludWUgZXhlY3V0aW9uIG9mIHRoZSBmb3JlYWNoIHBlcm1s
aW5rcyBsb29wCgkJCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50KTsKCQkJCQl9CgkJ
CQl9CgoJCQkJLy8gV2UgaGF2ZSBhIG1hdGNoCgkJCQlpZiAoQCRwcmV0ZXh0X3JlcGxhY2Vt
ZW50KQoJCQkJCWJyZWFrOwoKCQkJfSAvLyBmb3JlYWNoIHBlcm1saW5rcyBlbmQKCgkJCS8v
IElmIHRoZXJlIGlzIG5vIG1hdGNoIHJlc3RvcmUgdGhlIG1vc3QgbGlrZWx5IHBhcnRpYWwg
bWF0Y2guIFNvcnRlZCBieSBudW1iZXIgb2YgY29tcG9uZW50cyBhbmQgdGhlbiBwcmVjZWRl
bmNlCgkJCWlmICghQCRwcmV0ZXh0X3JlcGxhY2VtZW50ICYmIGNvdW50KCR0aGlzLT5wYXJ0
aWFsX21hdGNoZXMpKQoJCQkJJHByZXRleHRfcmVwbGFjZW1lbnQgPSBhcnJheV9zaGlmdChh
cnJheV9zbGljZSgkdGhpcy0+cGFydGlhbF9tYXRjaGVzLCAtMSkpOwoJCQl1bnNldCgkdGhp
cy0+cGFydGlhbF9tYXRjaGVzKTsKCgkJCS8vIFJlc3RvcmUgdGhlIGNsZWF2ZXJfcGFydGlh
bF9tYXRjaCBpZiB0aGVyZSBpcyBubyBvdGhlciBtYXRjaGVzCgkJCWlmICghQCRwcmV0ZXh0
X3JlcGxhY2VtZW50ICYmICR0aGlzLT5jbGVhdmVyX3BhcnRpYWxfbWF0Y2gpCgkJCQkkcHJl
dGV4dF9yZXBsYWNlbWVudCA9ICR0aGlzLT5jbGVhdmVyX3BhcnRpYWxfbWF0Y2g7CgkJCXVu
c2V0KCR0aGlzLT5jbGVhdmVyX3BhcnRpYWxfbWF0Y2gpOwoKCQkJLy8gRXh0cmFjdCB0aGUg
c2V0dGluZ3MgZm9yIHRoaXMgcGVybWxpbmsKCQkJQGV4dHJhY3QoJHBlcm1saW5rc1skcHJl
dGV4dF9yZXBsYWNlbWVudFsncGVybWxpbmtfaWQnXV1bJ3NldHRpbmdzJ10pOwoKCQkJLy8g
SWYgcHJldGV4dF9yZXBsYWNlbWVudCBpcyBzdGlsbCBzZXQgaGVyZSB0aGVuIHdlIGhhdmUg
YSBtYXRjaAoJCQlpZiAoQCRwcmV0ZXh0X3JlcGxhY2VtZW50KSB7CgkJCQkkdGhpcy0+ZGVi
dWcoJ1ByZXRleHQgUmVwbGFjZW1lbnQgJy5wcmludF9yKCRwcmV0ZXh0X3JlcGxhY2VtZW50
LCAxKSk7CgoJCQkJaWYgKCFlbXB0eSgkZGVzX3NlY3Rpb24pKQoJCQkJCSRwcmV0ZXh0X3Jl
cGxhY2VtZW50WydzJ10gPSAkZGVzX3NlY3Rpb247CgkJCQlpZiAoIWVtcHR5KCRkZXNfY2F0
ZWdvcnkpKQoJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydjJ10gPSAkZGVzX2NhdGVnb3J5
OwoJCQkJaWYgKCFlbXB0eSgkZGVzX2ZlZWQpKQoJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50
WyRkZXNfZmVlZF0gPSAxOwoKCQkJCWlmIChAJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10g
JiYgQCRwcmV0ZXh0X3JlcGxhY2VtZW50WydQb3N0ZWQnXSkgewoJCQkJIAlpZiAoJG5wID0g
Z2V0TmV4dFByZXYoJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10sICRwcmV0ZXh0X3JlcGxh
Y2VtZW50WydQb3N0ZWQnXSwgQCRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ10pKQoJCQkJCQkk
cHJldGV4dF9yZXBsYWNlbWVudCA9IGFycmF5X21lcmdlKCRwcmV0ZXh0X3JlcGxhY2VtZW50
LCAkbnApOwoJCQkJfQoJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ1Bvc3RlZCdd
KTsKCgkJCQkvLyBJZiB0aGVyZSBpcyBhIG1hdGNoIHRoZW4gd2UgbW9zdCBzZXQgdGhlIGh0
dHAgc3RhdHVzIGNvcnJlY3RseSBhcyB0eHAncyBwcmV0ZXh0IG1pZ2h0IHNldCBpdCB0byA0
MDQKCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydzdGF0dXMnXSA9ICcyMDAnOwoKCQkJCS8v
IFN0b3JlIHRoZSBvcmdpbmlhbCBIVFRQIHN0YXR1cyBjb2RlCgkJCQkvLyBXZSBtaWdodCBu
ZWVkIHRvIGxvZyB0aGUgcGFnZSBoaXQgaWYgaXQgZXF1YWxzIDQwNAoJCQkJJG9yZ2luaWFs
X3N0YXR1cyA9ICRwcmV0ZXh0WydzdGF0dXMnXTsKCgkJCQkvLyBUeHAgb25seSBsb29rcyBh
dCB0aGUgbW9udGgsIGJ1dCBkdWUgdG8gaG93IHdlIHBoYXNlIHRoZSBtb250aCB3ZSBjYW4g
bWFuaXB1bGF0ZSB0aGUgc3FsIHRvIG91ciBuZWVkcwoJCQkJaWYgKGFycmF5X2tleV9leGlz
dHMoJ2RhdGUnLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpIHsKCQkJCQkkcHJldGV4dF9yZXBs
YWNlbWVudFsnbW9udGgnXSA9ICRwcmV0ZXh0X3JlcGxhY2VtZW50WydkYXRlJ107CgkJCQkJ
dW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ2RhdGUnXSk7CgkJCQl9IGVsc2UgaWYgKGFy
cmF5X2tleV9leGlzdHMoJ3llYXInLCAkcHJldGV4dF9yZXBsYWNlbWVudCkgfHwKCQkJCWFy
cmF5X2tleV9leGlzdHMoJ21vbnRoJywgJHByZXRleHRfcmVwbGFjZW1lbnQpIHx8CgkJCQlh
cnJheV9rZXlfZXhpc3RzKCdkYXknLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpIHsKCQkJCQkk
bW9udGggPSAnJzsKCQkJCQkkbW9udGggLj0gKGFycmF5X2tleV9leGlzdHMoJ3llYXInLCAk
cHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQkJCT8gJHByZXRleHRfcmVwbGFjZW1lbnRbJ3ll
YXInXS4nLScgOiAnX19fXy0nOwoJCQkJCSRtb250aCAuPSAoYXJyYXlfa2V5X2V4aXN0cygn
bW9udGgnLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQkJCT8gJHByZXRleHRfcmVwbGFj
ZW1lbnRbJ21vbnRoJ10uJy0nIDogJ19fLSc7CgkJCQkJJG1vbnRoIC49IChhcnJheV9rZXlf
ZXhpc3RzKCdkYXknLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQkJCT8gJHByZXRleHRf
cmVwbGFjZW1lbnRbJ2RheSddLicgJyA6ICdfXyAnOwoKCQkJCQkkcHJldGV4dF9yZXBsYWNl
bWVudFsnbW9udGgnXSA9ICRtb250aDsKCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVu
dFsneWVhciddKTsKCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5J10pOwoJ
CQkJfQoKCQkJCS8vIFNlY3Rpb24gbmVlZHMgdG8gYmUgZGVmaW5lZCBzbyB3ZSBjYW4gYWx3
YXlzIGdldCBhIHBhZ2UgdGVtcGxhdGUuCgkJCQlpZiAoIWFycmF5X2tleV9leGlzdHMoJ3Mn
LCAkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQl7CgkJCQkJaWYgKCFAJHByZXRleHRfcmVw
bGFjZW1lbnRbJ2lkJ10pCgkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ10gPSAnZGVm
YXVsdCc7CgkJCQkJZWxzZQoJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncyddID0gc2Fm
ZV9maWVsZCgnU2VjdGlvbicsICd0ZXh0cGF0dGVybicsICdJRCA9ICcuJHByZXRleHRfcmVw
bGFjZW1lbnRbJ2lkJ10pOwoJCQkJfQoKCQkJCS8vIFNldCB0aGUgY3NzIGFuZCBwYWdlIHRl
bXBsYXRlLCBvdGhlcndpc2Ugd2UgZ2V0IGFuIHVua25vd24gc2VjdGlvbgoJCQkJJHNlY3Rp
b25fc2V0dGluZ3MgPSBzYWZlX3JvdygnY3NzLCBwYWdlJywgJ3R4cF9zZWN0aW9uJywgIm5h
bWUgPSAneyRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ119JyBsaW1pdCAxIik7CgkJCQkkcHJl
dGV4dF9yZXBsYWNlbWVudFsncGFnZSddID0gKEAkZGVzX3BhZ2UpID8gJGRlc19wYWdlIDog
JHNlY3Rpb25fc2V0dGluZ3NbJ3BhZ2UnXTsKCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50Wydj
c3MnXSAgPSAkc2VjdGlvbl9zZXR0aW5nc1snY3NzJ107CgoJCQkJJHRoaXMtPm1hdGNoZWRf
cGVybWxpbmsgPSAkcHJldGV4dF9yZXBsYWNlbWVudDsKCgkJCQlnbG9iYWwgJHBlcm1saW5r
X21vZGU7CgoJCQkJaWYgKGluX2FycmF5KCRwcmVmc1sncGVybWxpbmtfbW9kZSddLCBhcnJh
eSgnaWRfdGl0bGUnLCAnc2VjdGlvbl9pZF90aXRsZScpKSAmJiBAJHByZXRleHRfcmVwbGFj
ZW1lbnRbJ3BnJ10gJiYgIUAkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSkgewoJCQkJCSRw
cmV0ZXh0X3JlcGxhY2VtZW50WydpZCddID0gJyc7CgkJCQkJJHByZXRleHRfcmVwbGFjZW1l
bnRbJ2lzX2FydGljbGVfbGlzdCddID0gdHJ1ZTsKCQkJCX0KCgkJCQkvLyBNZXJnZSBwcmV0
ZXh0X3JlcGxhY2VtZW50IHdpdGggcHJldGV4dAoJCQkJJHByZXRleHQgPSBhcnJheV9tZXJn
ZSgkcHJldGV4dCwgJHByZXRleHRfcmVwbGFjZW1lbnQpOwoKCQkJCWlmIChpc19udW1lcmlj
KEAkcHJldGV4dFsnaWQnXSkpIHsKCQkJCQkkYSA9IHNhZmVfcm93KCcqLCB1bml4X3RpbWVz
dGFtcChQb3N0ZWQpIGFzIHVQb3N0ZWQsIHVuaXhfdGltZXN0YW1wKEV4cGlyZXMpIGFzIHVF
eHBpcmVzLCB1bml4X3RpbWVzdGFtcChMYXN0TW9kKSBhcyB1TGFzdE1vZCcsICd0ZXh0cGF0
dGVybicsICdJRD0nLmludHZhbCgkcHJldGV4dFsnaWQnXSkuJyBhbmQgU3RhdHVzID49IDQn
KTsKCQkJCQlwb3B1bGF0ZUFydGljbGVEYXRhKCRhKTsKCQkJCX0KCgkJCQkvLyBFeHBvcnQg
cmVxdWlyZWQgdmFsdWVzIHRvIHRoZSBnbG9iYWwgbmFtZXNwYWNlCgkJCQlmb3JlYWNoIChh
cnJheSgnaWQnLCAncycsICdjJywgJ3BnJywgJ2lzX2FydGljbGVfbGlzdCcsICdwcmV2X2lk
JywgJ3ByZXZfdGl0bGUnLCAnbmV4dF9pZCcsICduZXh0X3RpdGxlJywgJ2NzcycpIGFzICRr
ZXkpIHsKCQkJCQlpZiAoYXJyYXlfa2V5X2V4aXN0cygka2V5LCAkcHJldGV4dCkpCgkJCQkJ
CSRHTE9CQUxTWyRrZXldID0gJHByZXRleHRbJGtleV07CgkJCQl9CgoJCQkJaWYgKGNvdW50
KCR0aGlzLT5tYXRjaGVkX3Blcm1saW5rKSB8fCBAJG10X3JlZGlyZWN0KSB7CgkJCQkJJHBs
X2luZGV4ID0gJHByZXRleHRbJ3Blcm1saW5rX2lkJ107CgkJCQkJaWYgKCFAJG10X3JlZGly
ZWN0IHx8ICEkdGhpcy0+cHJlZigncmVkaXJlY3RfbXRfc3R5bGVfbGlua3MnKSkgewoJCQkJ
CQkkcGwgPSAkdGhpcy0+Z2V0X3Blcm1saW5rKCRwcmV0ZXh0WydwZXJtbGlua19pZCddKTsK
CQkJCQkJJHBsX2luZGV4ID0gQCRwbFsnc2V0dGluZ3MnXVsnZGVzX3Blcm1saW5rJ107CgkJ
CQkJfQoKCQkJCQlpZiAoQCRwcmV0ZXh0WydpZCddICYmICRwbF9pbmRleCkgewoJCQkJCQlp
ZiAoY291bnQoJHRoaXMtPmdldF9wZXJtbGluaygkcGxfaW5kZXgpKSA+IDApIHsKCQkJCQkJ
CW9iX2NsZWFuKCk7CgkJCQkJCQlnbG9iYWwgJHNpdGV1cmw7CgkJCQkJCQkkcnMgPSBzYWZl
X3JvdygnKiwgSUQgYXMgdGhpc2lkLCB1bml4X3RpbWVzdGFtcChQb3N0ZWQpIGFzIHBvc3Rl
ZCcsICd0ZXh0cGF0dGVybicsICJJRCA9ICd7JHByZXRleHRbJ2lkJ119JyIpOwoJCQkJCQkJ
JGhvc3QgPSBydHJpbShzdHJfcmVwbGFjZShydHJpbShkb1N0cmlwKCRwcmV0ZXh0WydzdWJw
YXRoJ10pLCAnLycpLCAnJywgaHUpLCAnLycpOwoJCQkJCQkJJHRoaXMtPnJlZGlyZWN0KCRo
b3N0LiR0aGlzLT5fcGVybWxpbmt1cmwoJHJzLCBQRVJNTElOS1VSTCwgJHBsX2luZGV4KSwg
JHRoaXMtPnByZWYoJ3Blcm1saW5rX3JlZGlyZWN0X2h0dHBfc3RhdHVzJykpOwoJCQkJCQl9
CgkJCQkJfSBlbHNlIGlmICgkdXJsID0gQCRwbFsnc2V0dGluZ3MnXVsnZGVzX2xvY2F0aW9u
J10pIHsKCQkJCQkJb2JfY2xlYW4oKTsKCQkJCQkJJHRoaXMtPnJlZGlyZWN0KCR1cmwsICR0
aGlzLT5wcmVmKCd1cmxfcmVkaXJlY3RfaHR0cF9zdGF0dXMnKSk7CgkJCQkJfQoJCQkJfQoK
CQkJCWlmIChAJHByZXRleHRbJ3JzcyddKSB7CgkJCQkJaWYgKEAkcHJldGV4dFsncyddKQoJ
CQkJCQkkX1BPU1RbJ3NlY3Rpb24nXSA9ICRwcmV0ZXh0WydzJ107CgkJCQkJaWYgKEAkcHJl
dGV4dFsnYyddKQoJCQkJCQkkX1BPU1RbJ2NhdGVnb3J5J10gPSAkcHJldGV4dFsnYyddOwoJ
CQkJCW9iX2NsZWFuKCk7CgkJCQkJaW5jbHVkZSB0eHBhdGguJy9wdWJsaXNoL3Jzcy5waHAn
OwoJCQkJCWV4aXQocnNzKCkpOwoJCQkJfQoKCQkJCWlmIChAJHByZXRleHRbJ2F0b20nXSkg
ewoJCQkJCWlmIChAJHByZXRleHRbJ3MnXSkKCQkJCQkJJF9QT1NUWydzZWN0aW9uJ10gPSAk
cHJldGV4dFsncyddOwoJCQkJCWlmIChAJHByZXRleHRbJ2MnXSkKCQkJCQkJJF9QT1NUWydj
YXRlZ29yeSddID0gJHByZXRleHRbJ2MnXTsKCQkJCQlvYl9jbGVhbigpOwoJCQkJCWluY2x1
ZGUgdHhwYXRoLicvcHVibGlzaC9hdG9tLnBocCc7CgkJCQkJZXhpdChhdG9tKCkpOwoJCQkJ
fQoKCQkJCSR0aGlzLT5kZWJ1ZygnUHJldGV4dCAnLnByaW50X3IoJHByZXRleHQsIDEpKTsK
CQkJfSBlbHNlIHsKCQkJCSR0aGlzLT5kZWJ1ZygnTk8gQ0hBTkdFUyBNQURFJyk7CgkJCX0K
CgkJCS8vIExvZyB0aGlzIHBhZ2UgaGl0CgkJCWlmIChAJG9yZ2luaWFsX3N0YXR1cyA9PSA0
MDQpCgkJCQlsb2dfaGl0KCRwcmV0ZXh0WydzdGF0dXMnXSk7CgoJCQkvLyBTdGFydCBvdXRw
dXQgYnVmZmVyaW5nIGFuZCBwc2V1ZG8gY2FsbGJhY2sgdG8gdGV4dHBhdHRlcm5fZW5kCgkJ
CW9iX3N0YXJ0KGFycmF5KCYkdGhpcywgJ190ZXh0cGF0dGVybl9lbmRfY2FsbGJhY2snKSk7
CgoJCQkvLyBUeFAgNC4wLjUgKHIyNDM2KSBpbnRyb2R1Y2VkIHRoZSB0ZXh0cGF0dGVybl9l
bmQgY2FsbGJhY2sgbWFraW5nIHRoZSBmb2xsb3dpbmcgcmVkdW5kYW50CgkJCSR2ZXJzaW9u
ID0gYXJyYXlfc3VtKGFycmF5X21hcCgKCQkJCWNyZWF0ZV9mdW5jdGlvbignJGxpbmUnLCAn
aWYgKHByZWdfbWF0Y2goXCcvXlwkJy4nTGFzdENoYW5nZWRSZXZpc2lvbjogKFx3KykgXCQv
XCcsICRsaW5lLCAkbWF0Y2gpKSByZXR1cm4gJG1hdGNoWzFdOycpLAoJCQkJQGZpbGUodHhw
YXRoIC4gJy9wdWJsaXNoLnBocCcpCgkJCSkpOwoJCQlpZiAoJHZlcnNpb24gPj0gJzI0MzYn
KSByZXR1cm47CgoJCQkvLyBSZW1vdmUgdGhlIHBsdWdpbiBjYWxsYmFja3Mgd2hpY2ggaGF2
ZSBhbHJlYWR5IGJlZW4gY2FsbGVkCgkJCWZ1bmN0aW9uIGZpbHRlcl9jYWxsYmFja3MoJGMp
IHsKCQkJCWlmICgkY1snZXZlbnQnXSE9J3RleHRwYXR0ZXJuJykgcmV0dXJuIHRydWU7CgkJ
CQlpZiAoQCRjWydmdW5jdGlvbiddWzBdLT5wbHVnaW5fbmFtZSA9PSAnZ2JwX3Blcm1hbmVu
dF9saW5rcycgJiYKCQkJCQkJQCRjWydmdW5jdGlvbiddWzFdID09ICdfdGV4dHBhdHRlcm4n
KQoJCQkJewoJCQkJCSRHTE9CQUxTWydnYnBfZm91bmRfc2VsZiddID0gdHJ1ZTsKCQkJCQly
ZXR1cm4gZmFsc2U7CgkJCQl9CgkJCQlyZXR1cm4gQCRHTE9CQUxTWydnYnBfZm91bmRfc2Vs
ZiddOwoJCQl9CgkJCSRwbHVnaW5fY2FsbGJhY2sgPSBhcnJheV9maWx0ZXIoJHBsdWdpbl9j
YWxsYmFjaywgJ2ZpbHRlcl9jYWxsYmFja3MnKTsKCQkJdW5zZXQoJEdMT0JBTFNbJ2dicF9m
b3VuZF9zZWxmJ10pOwoKCQkJLy8gUmUtY2FsbCB0ZXh0cGF0dGVybgoJCQl0ZXh0cGF0dGVy
bigpOwoKCQkJLy8gQ2FsbCBjdXN0b20gdGV4dHBhdHRlcm5fZW5kIGNhbGxiYWNrCgkJCSR0
aGlzLT5fdGV4dHBhdHRlcm5fZW5kKCk7CgoJCQkvLyB0ZXh0cGF0dGVybigpIGhhcyBydW4s
IGtpbGwgdGhlIGNvbm5lY3Rpb24KCQkJZGllKCk7CgkJfQoKCX0gLy8gZnVuY3Rpb24gX3Rl
eHRwYXR0ZXJuIGVuZAoKCWZ1bmN0aW9uIF90ZXh0cGF0dGVybl9lbmQgKCkgewoJCS8vIFJl
ZGlyZWN0IHRvIGEgNDA0IGlmIHRoZSBwYWdlIG51bWJlciBpcyBncmVhdGVyIHRoYW4gdGhl
IG1heCBudW1iZXIgb2YgcGFnZXMKCQkvLyBIYXMgdG8gYmUgYWZ0ZXIgdGV4dHBhdHRlcm4o
KSBhcyAkdGhpc3BhZ2UgaXMgc2V0IGR1cmluZyA8dHhwOmFydGljbGUgLz4KCQlnbG9iYWwg
JHRoaXNwYWdlLCAkcHJldGV4dDsKCQlpZiAoKEAkcHJldGV4dFsncGcnXSAmJiBpc3NldCgk
dGhpc3BhZ2UpKSAmJgoJCSgkdGhpc3BhZ2VbJ251bVBhZ2VzJ10gPCAkcHJldGV4dFsncGcn
XSkpIHsKCQkJb2JfZW5kX2NsZWFuKCk7CgkJCXR4cF9kaWUoZ1R4dCgnNDA0X25vdF9mb3Vu
ZCcpLCAnNDA0Jyk7CgkJfQoKCQkvLyBTdG9wIG91dHB1dCBidWZmZXJpbmcsIHRoaXMgc2Vu
ZHMgdGhlIGJ1ZmZlciB0byBfdGV4dHBhdHRlcm5fZW5kX2NhbGxiYWNrKCkKCQl3aGlsZSAo
QG9iX2VuZF9mbHVzaCgpKTsKCgl9IC8vIGZ1bmN0aW9uIF90ZXh0cGF0dGVybl9lbmQgZW5k
CgoJZnVuY3Rpb24gX3RleHRwYXR0ZXJuX2VuZF9jYWxsYmFjayAoJGh0bWwsICRvdmVycmlk
ZSA9ICcnKSB7CgkJZ2xvYmFsICRwcmV0ZXh0LCAkcHJvZHVjdGlvbl9zdGF0dXM7CgoJCWlm
ICgkb3ZlcnJpZGUpICRwcmV0ZXh0WydwZXJtbGlua19vdmVycmlkZSddID0gJG92ZXJyaWRl
OwoJCSRodG1sID0gcHJlZ19yZXBsYWNlX2NhbGxiYWNrKAoJCQknJWhyZWY9IignLmh1Lid8
XD8pKFteIl0qKSIlJywKCQkJYXJyYXkoJiR0aGlzLCAnX3BhZ2VsaW5rdXJsJyksCgkJCSRo
dG1sCgkJKTsKCQl1bnNldCgkcHJldGV4dFsncGVybWxpbmtfb3ZlcnJpZGUnXSk7CgoJCWlm
ICgkdGhpcy0+cHJlZignZGVidWcnKSAmJiBpbl9hcnJheSgkcHJvZHVjdGlvbl9zdGF0dXMs
IGFycmF5KCdkZWJ1ZycsICd0ZXN0aW5nJykpKSB7CgkJCSRkZWJ1ZyA9IGpvaW4obiwgJHRo
aXMtPmJ1ZmZlcl9kZWJ1Zyk7CgkJCSR0aGlzLT5idWZmZXJfZGVidWcgPSBhcnJheSgpOwoJ
CQlpZiAoJGRlYnVnKQoJCQkJJGh0bWwgPSBjb21tZW50KG4uJGRlYnVnLm4pIC4gJGh0bWw7
CgkJfQoKCQlyZXR1cm4gJGh0bWw7Cgl9IC8vIGZ1bmN0aW9uIF90ZXh0cGF0dGVybl9lbmRf
Y2FsbGJhY2sgZW5kCgoJZnVuY3Rpb24gY2hlY2tfcGVybWxpbmtfY29uZGl0aW9ucyAoJHBs
LCAkYXJ0aWNsZV9hcnJheSkgewoJCWlmIChlbXB0eSgkYXJ0aWNsZV9hcnJheVsnc2VjdGlv
biddKSkgJGFydGljbGVfYXJyYXlbJ3NlY3Rpb24nXSA9IEAkYXJ0aWNsZV9hcnJheVsnU2Vj
dGlvbiddOwoJCWlmIChlbXB0eSgkYXJ0aWNsZV9hcnJheVsnY2F0ZWdvcnkxJ10pKSAkYXJ0
aWNsZV9hcnJheVsnY2F0ZWdvcnkxJ10gPSBAJGFydGljbGVfYXJyYXlbJ0NhdGVnb3J5MSdd
OwoJCWlmIChlbXB0eSgkYXJ0aWNsZV9hcnJheVsnY2F0ZWdvcnkyJ10pKSAkYXJ0aWNsZV9h
cnJheVsnY2F0ZWdvcnkyJ10gPSBAJGFydGljbGVfYXJyYXlbJ0NhdGVnb3J5MiddOwoKCQlp
ZiAoQCRwbFsnc2V0dGluZ3MnXVsnY29uX2NhdGVnb3J5J10gJiYgKCRwbFsnc2V0dGluZ3Mn
XVsnY29uX2NhdGVnb3J5J10gIT0gJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MSddIHx8ICRw
bFsnc2V0dGluZ3MnXVsnY29uX2NhdGVnb3J5J10gIT0gJGFydGljbGVfYXJyYXlbJ2NhdGVn
b3J5MiddKSkKCQkJcmV0dXJuIGZhbHNlOwoJCWlmIChAJHBsWydzZXR0aW5ncyddWydjb25f
c2VjdGlvbiddICYmICRwbFsnc2V0dGluZ3MnXVsnY29uX3NlY3Rpb24nXSAhPSAkYXJ0aWNs
ZV9hcnJheVsnc2VjdGlvbiddKQoJCQlyZXR1cm4gZmFsc2U7CgoJCXJldHVybiB0cnVlOwoJ
fQoKCWZ1bmN0aW9uIF9wZXJtbGlua3VybCAoJGFydGljbGVfYXJyYXksICR0eXBlID0gUEVS
TUxJTktVUkwsICRwbF9pbmRleCA9IE5VTEwpIHsKCQlnbG9iYWwgJHByZXRleHQsICRwcmVm
cywgJHByb2R1Y3Rpb25fc3RhdHVzOwoKCQlpZiAoJHR5cGUgPT0gUEFHRUxJTktVUkwpCgkJ
CXJldHVybiAkdGhpcy0+dG9nZ2xlX2N1c3RvbV91cmxfZnVuYygncGFnZWxpbmt1cmwnLCAk
YXJ0aWNsZV9hcnJheSk7CgoJCWlmIChlbXB0eSgkYXJ0aWNsZV9hcnJheSkpIHJldHVybjsK
CgkJaWYgKCRwbF9pbmRleCkKCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkcGxfaW5k
ZXgpOwoJCWVsc2UgewoJCQkvLyBHZXQgdGhlIG1hdGNoZWQgcHJldGV4dCByZXBsYWNlbWVu
dCBhcnJheS4KCQkJJG1hdGNoZWQgPSAoY291bnQoJHRoaXMtPm1hdGNoZWRfcGVybWxpbmsp
KQoJCQk/ICR0aGlzLT5tYXRjaGVkX3Blcm1saW5rCgkJCTogQGFycmF5X3NoaWZ0KGFycmF5
X3NsaWNlKCR0aGlzLT5wYXJ0aWFsX21hdGNoZXMsIC0xKSk7CgoJCQlpZiAoIWlzc2V0KCRw
bCkgJiYgJG1hdGNoZWQgJiYgYXJyYXlfa2V5X2V4aXN0cygnaWQnLCAkbWF0Y2hlZCkpIHsK
CQkJCS8vIFRoZSBwZXJtbGluayBpZCBpcyBzdG9yZWQgaW4gdGhlIHByZXRleHQgcmVwbGFj
ZW1lbnQgYXJyYXksIHNvIHdlIGNhbiBmaW5kIHRoZSBwZXJtbGluay4KCQkJCSRwbCA9ICR0
aGlzLT5nZXRfcGVybWxpbmsoJG1hdGNoZWRbJ3Blcm1saW5rX2lkJ10pOwoJCQkJZm9yZWFj
aCAoJHBsWydjb21wb25lbnRzJ10gYXMgJHBsX2MpCgkJCQkJaWYgKGluX2FycmF5KCRwbF9j
Wyd0eXBlJ10sIGFycmF5KCdmZWVkJywgJ3BhZ2UnKSkgfHwgISR0aGlzLT5jaGVja19wZXJt
bGlua19jb25kaXRpb25zKCRwbCwgJGFydGljbGVfYXJyYXkpKSB7CgkJCQkJCXVuc2V0KCRw
bCk7CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJfQoKCQkJaWYgKCFpc3NldCgkcGwpKSB7CgkJ
CQkvLyBXZSBoYXZlIG5vIHBlcm1saW5rIGlkIHNvIGdyYWIgdGhlIHBlcm1saW5rIHdpdGgg
dGhlIGhpZ2hlc3QgcHJlY2VkZW5jZS4KCQkJCSRwZXJtbGlua3MgPSAkdGhpcy0+Z2V0X2Fs
bF9wZXJtbGlua3MoMSwgYXJyYXkoJ2ZlZWQnLCAncGFnZScpKTsKCQkJCWZvcmVhY2ggKCRw
ZXJtbGlua3MgYXMgJGtleSA9PiAkcGwpCgkJCQkJaWYgKCEkdGhpcy0+Y2hlY2tfcGVybWxp
bmtfY29uZGl0aW9ucygkcGwsICRhcnRpY2xlX2FycmF5KSkKCQkJCQkJdW5zZXQoJHBlcm1s
aW5rc1ska2V5XSk7CgkJCQkkcGwgPSBhcnJheV9zaGlmdCgkcGVybWxpbmtzKTsKCQkJfQoJ
CX0KCgkJJHVyaSA9ICcnOwoKCQlpZiAoaXNfYXJyYXkoJHBsKSAmJiBhcnJheV9rZXlfZXhp
c3RzKCdjb21wb25lbnRzJywgJHBsKSkgewoJCQlleHRyYWN0KCRhcnRpY2xlX2FycmF5KTsK
CgkJCWlmICghaXNzZXQoJHRpdGxlKSkgJHRpdGxlID0gJFRpdGxlOwoJCQlpZiAoZW1wdHko
JHVybF90aXRsZSkpICR1cmxfdGl0bGUgPSBzdHJpcFNwYWNlKCR0aXRsZSk7CgkJCWlmIChl
bXB0eSgkc2VjdGlvbikpICRzZWN0aW9uID0gJFNlY3Rpb247CgkJCWlmIChlbXB0eSgkcG9z
dGVkKSkgJHBvc3RlZCA9ICRQb3N0ZWQ7CgkJCWlmIChlbXB0eSgkYXV0aG9yaWQpKSAkYXV0
aG9yaWQgPSBAJEF1dGhvcklEOwoJCQlpZiAoZW1wdHkoJGNhdGVnb3J5MSkpICRjYXRlZ29y
eTEgPSBAJENhdGVnb3J5MTsKCQkJaWYgKGVtcHR5KCRjYXRlZ29yeTIpKSAkY2F0ZWdvcnky
ID0gQCRDYXRlZ29yeTI7CgkJCWlmIChlbXB0eSgkdGhpc2lkKSkgJHRoaXNpZCA9ICRJRDsK
CgkJCSRwbF9jb21wb25lbnRzID0gJHBsWydjb21wb25lbnRzJ107CgoJCQkvLyBDaGVjayB0
byBzZWUgaWYgdGhlcmUgaXMgYSB0aXRsZSBjb21wb25lbnQuCgkJCSR0aXRsZSA9IGZhbHNl
OwoJCQlmb3JlYWNoKCRwbF9jb21wb25lbnRzIGFzICRwbF9jKQoJCQkJaWYgKCRwbF9jWyd0
eXBlJ10gPT0gJ3RpdGxlJyB8fCAkcGxfY1sndHlwZSddID09ICdpZCcpCgkJCQkJJHRpdGxl
ID0gdHJ1ZTsKCgkJCS8vIElmIHRoZXJlIGlzbid0IGEgdGl0bGUgY29tcG9uZW50IHRoZW4g
d2UgbmVlZCB0byBhcHBlbmQgb25lIHRvIHRoZSBlbmQgb2YgdGhlIFVSSQoJCQlpZiAoISR0
aXRsZSAmJiAkdGhpcy0+cHJlZignYXV0b21hdGljYWxseV9hcHBlbmRfdGl0bGUnKSkKCQkJ
CSRwbF9jb21wb25lbnRzW10gPSBhcnJheSgndHlwZScgPT4gJ3RpdGxlJywgJ3ByZWZpeCcg
PT4gJycsICdzdWZmaXgnID0+ICcnLCAncmVnZXgnID0+ICcnLCAndGV4dCcgPT4gJycpOwoK
CQkJJHVyaSA9IHJ0cmltKGRvU3RyaXAoQCRwcmV0ZXh0WydzdWJwYXRoJ10pLCAnLycpOwoJ
CQlmb3JlYWNoICgkcGxfY29tcG9uZW50cyBhcyAkcGxfYykgewoJCQkJJHVyaSAuPSAnLyc7
CgoJCQkJJHR5cGUgPSAkcGxfY1sndHlwZSddOwoJCQkJc3dpdGNoICgkdHlwZSkgewoJCQkJ
CWNhc2UgJ2NhdGVnb3J5JzoKCQkJCQkJaWYgKCFAJHBsX2NbJ2NhdGVnb3J5J10pICRwbF9j
WydjYXRlZ29yeSddID0gMTsKCQkJCQkJJHByaW1hcnkgPSAnY2F0ZWdvcnknLiAkcGxfY1sn
Y2F0ZWdvcnknXTsKCQkJCQkJJHNlY29uZGFyeSA9ICdjYXRlZ29yeScuICgzLShpbnQpJHBs
X2NbJ2NhdGVnb3J5J10pOwoJCQkJCQkkY2hlY2tfY29udGV4dCA9ICgkdGhpcy0+cHJlZign
am9pbl9wcmV0ZXh0X3RvX3BhZ2VsaW5rcycpICYmICR0aGlzLT5wcmVmKCdjaGVja19wcmV0
ZXh0X2NhdGVnb3J5X2NvbnRleHQnKSk7CgkJCQkJCWlmICghJGNoZWNrX2NvbnRleHQgfHwg
JCRwcmltYXJ5ID09ICRwcmV0ZXh0WydjJ10pCgkJCQkJCQkkdXJpX2MgPSAkJHByaW1hcnk7
CgkJCQkJCWVsc2UgaWYgKCEkY2hlY2tfY29udGV4dCB8fCAkJHNlY29uZGFyeSA9PSAkcHJl
dGV4dFsnYyddKQoJCQkJCQkJJHVyaV9jID0gJCRzZWNvbmRhcnk7CgkJCQkJCWVsc2UgaWYg
KCR0aGlzLT5wcmVmKCdkZWJ1ZycpICYmIGluX2FycmF5KCRwcm9kdWN0aW9uX3N0YXR1cywg
YXJyYXkoJ2RlYnVnJywgJ3Rlc3RpbmcnKSkpCgkJCQkJCQkkdXJpX2MgPSAnLS1JTlZBTElE
X0NBVEVHT1JZLS0nOwoJCQkJCQllbHNlIHsKCQkJCQkJCXVuc2V0KCR1cmkpOwoJCQkJCQkJ
YnJlYWsgMjsKCQkJCQkJfQoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3NlY3Rpb24nOgoJCQkJ
CQkkY2hlY2tfY29udGV4dCA9ICgkdGhpcy0+cHJlZignam9pbl9wcmV0ZXh0X3RvX3BhZ2Vs
aW5rcycpICYmICR0aGlzLT5wcmVmKCdjaGVja19wcmV0ZXh0X3NlY3Rpb25fY29udGV4dCcp
KTsKCQkJCQkJaWYgKCEkY2hlY2tfY29udGV4dCB8fCAkc2VjdGlvbiA9PSAkcHJldGV4dFsn
cyddKQoJCQkJCQkJJHVyaV9jID0gJHNlY3Rpb247CgkJCQkJCWVsc2UgewoJCQkJCQkJdW5z
ZXQoJHVyaSk7CgkJCQkJCQlicmVhayAyOwoJCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQkJY2Fz
ZSAndGl0bGUnOiAkdXJpX2MgPSAkdXJsX3RpdGxlOyBicmVhazsKCQkJCQljYXNlICdpZCc6
ICR1cmlfYyA9ICR0aGlzaWQ7IGJyZWFrOwoJCQkJCWNhc2UgJ2F1dGhvcic6ICR1cmlfYyA9
IHNhZmVfZmllbGQoJ1JlYWxOYW1lJywgJ3R4cF91c2VycycsICJuYW1lIGxpa2UgJ3skYXV0
aG9yaWR9JyIpOyBicmVhazsKCQkJCQljYXNlICdsb2dpbic6ICR1cmlfYyA9ICRhdXRob3Jp
ZDsgYnJlYWs7CgkJCQkJY2FzZSAnZGF0ZSc6ICR1cmlfYyA9IGV4cGxvZGUoJy8nLCBkYXRl
KCdZL20vZCcsICRwb3N0ZWQpKTsgYnJlYWs7CgkJCQkJY2FzZSAneWVhcic6ICR1cmlfYyA9
IGRhdGUoJ1knLCAkcG9zdGVkKTsgYnJlYWs7CgkJCQkJY2FzZSAnbW9udGgnOiAkdXJpX2Mg
PSBkYXRlKCdtJywgJHBvc3RlZCk7IGJyZWFrOwoJCQkJCWNhc2UgJ2RheSc6ICR1cmlfYyA9
IGRhdGUoJ2QnLCAkcG9zdGVkKTsgYnJlYWs7CgkJCQkJY2FzZSAnY3VzdG9tJzoKCQkJCQkJ
aWYgKCR1cmlfYyA9IEAkYXJ0aWNsZV9hcnJheVskcHJlZnNbImN1c3RvbV97JHBsX2NbJ2N1
c3RvbSddfV9zZXQiXV0pOwoJCQkJCQllbHNlIGlmICgkdXJpX2MgPSBAJGFydGljbGVfYXJy
YXlbImN1c3RvbV97JHBsX2NbJ2N1c3RvbSddfSJdKTsKCQkJCQkJZWxzZSBpZiAoJHRoaXMt
PnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rpb25fc3RhdHVzLCBhcnJheSgn
ZGVidWcnLCAndGVzdGluZycpKSkKCQkJCQkJCSR1cmlfYyA9ICctLVVOU0VUX0NVU1RPTV9G
SUVMRC0tJzsKCQkJCQkJZWxzZSB7CgkJCQkJCQl1bnNldCgkdXJpKTsKCQkJCQkJCWJyZWFr
IDI7CgkJCQkJCX0KCQkJCQlicmVhazsKCQkJCQljYXNlICd0ZXh0JzogJHVyaV9jID0gJHBs
X2NbJ3RleHQnXTsgYnJlYWs7CgkJCQkJY2FzZSAncmVnZXgnOgoJCQkJCQkvLyBDaGVjayB0
byBzZWUgaWYgcmVnZXggaXMgdmFsaWQgd2l0aG91dCBvdXRwdXR0aW5nIGVycm9yIG1lc3Nh
Z2VzLgoJCQkJCQlvYl9zdGFydCgpOwoJCQkJCQlwcmVnX21hdGNoKCRwbF9jWydyZWdleCdd
LCAkcGxfY1sncmVnZXgnXSwgJHJlZ2V4X21hdGNoZXMpOwoJCQkJCQkkaXNfdmFsaWRfcmVn
ZXggPSAhKG9iX2dldF9jbGVhbigpKTsKCQkJCQkJaWYgKCRpc192YWxpZF9yZWdleCkgewoJ
CQkJCQkJJGtleSA9ICJwZXJtbGlua19yZWdleF97JHBsX2NbJ25hbWUnXX0iOwoJCQkJCQkJ
JHVyaV9jID0gKGFycmF5X2tleV9leGlzdHMoJGtleSwgJHByZXRleHQpKSA/ICRwcmV0ZXh0
WyRrZXldIDogJHJlZ2V4X21hdGNoZXNbMF07CgkJCQkJCX0gZWxzZSBpZiAoJHRoaXMtPnBy
ZWYoJ2RlYnVnJykpCgkJCQkJCQkkdXJpX2MgPSAnLS1JTlZBTElEX1JFR0VYLS0nOwoJCQkJ
CWJyZWFrOwoJCQkJfQoKCQkJCWlmIChlbXB0eSgkdXJpX2MpKQoJCQkJCWlmICgkdGhpcy0+
cHJlZignZGVidWcnKSAmJiBpbl9hcnJheSgkcHJvZHVjdGlvbl9zdGF0dXMsIGFycmF5KCdk
ZWJ1ZycsICd0ZXN0aW5nJykpKQoJCQkJCQkkdXJpX2MgPSAnLS1QRVJNTElOS19GT1JNQVRf
RVJST1ItLSc7CgkJCQkJZWxzZSB7CgkJCQkJCXVuc2V0KCR1cmkpOwoJCQkJCQlicmVhazsK
CQkJCQl9CgoJCQkJaWYgKEAkcGxfY1sncHJlZml4J10pCgkJCQkJJHVyaSAuPSAkdGhpcy0+
ZW5jb2RlX3VybCgkcGxfY1sncHJlZml4J10pOwoKCQkJCWlmIChpc19hcnJheSgkdXJpX2Mp
KSB7CgkJCQkJZm9yZWFjaCAoJHVyaV9jIGFzICR1cmlfYzIpCgkJCQkJCSR1cmkgLj0gJHRo
aXMtPmVuY29kZV91cmwoJHVyaV9jMikgLiAnLyc7CgkJCQkJJHVyaSA9IHJ0cmltKCR1cmks
ICcvJyk7CgkJCQl9IGVsc2UKCQkJCQkkdXJpIC49ICR0aGlzLT5lbmNvZGVfdXJsKCR1cmlf
Yyk7CgoJCQkJaWYgKEAkcGxfY1snc3VmZml4J10pCgkJCQkJJHVyaSAuPSAkdGhpcy0+ZW5j
b2RlX3VybCgkcGxfY1snc3VmZml4J10pOwoKCQkJCXVuc2V0KCR1cmlfYyk7CgkJCX0KCgkJ
CWlmIChpc3NldCgkdXJpKSkKCQkJCSR1cmkgLj0gJy8nOwoJCX0KCgkJaWYgKCR1cmlfZW1w
dHkgPSBlbXB0eSgkdXJpKSkgewoJCQkvLyBJdCBpcyBwb3NzaWJsZSB0aGUgdXJpIGlzIHN0
aWxsIGVtcHR5IGlmIHRoZXJlIGlzIG5vIG1hdGNoIG9yIGlmIHdlJ3JlIHVzaW5nCgkJCS8v
IHN0cmljdCBtYXRjaGluZyBpZiBzbyB0cnkgdGhlIGRlZmF1bHQgcGVybWxpbmsgbW9kZS4K
CQkJJHVyaSA9ICR0aGlzLT50b2dnbGVfcGVybWxpbmtfbW9kZSgncGVybWxpbmt1cmwnLCAk
YXJ0aWNsZV9hcnJheSk7CgkJfQoKCQlpZiAoJHRoaXMtPnByZWYoJ29taXRfdHJhaWxpbmdf
c2xhc2gnKSkKCQkJJHVyaSA9IHJ0cmltKCR1cmksICcvJyk7CgoJCWlmICghJHVyaV9lbXB0
eSAmJiBpbl9hcnJheSh0eHBhdGguJy9wdWJsaXNoL3Jzcy5waHAnLCBnZXRfaW5jbHVkZWRf
ZmlsZXMoKSkgfHwgaW5fYXJyYXkodHhwYXRoLicvcHVibGlzaC9hdG9tLnBocCcsIGdldF9p
bmNsdWRlZF9maWxlcygpKSB8fCB0eHBpbnRlcmZhY2UgPT0gJ2FkbWluJykgewoJCQkkaG9z
dCA9IHJ0cmltKHN0cl9yZXBsYWNlKHJ0cmltKGRvU3RyaXAoQCRwcmV0ZXh0WydzdWJwYXRo
J10pLCAnLycpLCAnJywgaHUpLCAnLycpOwoJCQkkdXJpID0gJGhvc3QgLiAkdXJpOwoJCX0K
CgkJcmV0dXJuICgkdGhpcy0+cHJlZignZm9yY2VfbG93ZXJjYXNlX3VybHMnKSkgPyBzdHJ0
b2xvd2VyKCR1cmkpIDogJHVyaTsKCX0KCglmdW5jdGlvbiBfcGFnZWxpbmt1cmwgKCRwYXJ0
cykgewoJCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkJCSdwYXRoJwkJPT4gJ2luZGV4LnBocCcs
CgkJCSdxdWVyeScJCT0+ICcnLAoJCQknZnJhZ21lbnQnCT0+ICcnLAoJCSksIHBhcnNlX3Vy
bChodG1sX2VudGl0eV9kZWNvZGUoc3RyX3JlcGxhY2UoJyYjMzg7JywgJyYnLCAkcGFydHNb
Ml0pKSkpKTsKCgkJLy8gVGlkeSB1cCBsaW5rcyBiYWNrIHRvIHRoZSBzaXRlIGhvbWVwYWdl
CgkJaWYgKCRwYXRoID09ICdpbmRleC5waHAnICYmIGVtcHR5KCRxdWVyeSkpCgkJCXJldHVy
biAnaHJlZj0iJyAuaHUuICciJzsKCgkJLy8gRml4IG1hdGNoZXMgbGlrZSBocmVmPSI/cz1m
b28iCgkJZWxzZSBpZiAoJHBhdGggJiYgZW1wdHkoJHF1ZXJ5KSAmJiAkcGFydHNbMV0gPT0g
Jz8nKSB7CgkJCSRxdWVyeSA9ICRwYXRoOwoJCQkkcGF0aCA9ICdpbmRleC5waHAnOwoJCX0K
CgkJLy8gQ2hlY2sgdG8gc2VlIGlmIHRoZXJlIGlzIHF1ZXJ5IHRvIHdvcmsgd2l0aC4KCQll
bHNlIGlmIChlbXB0eSgkcXVlcnkpIHx8ICRwYXRoICE9ICdpbmRleC5waHAnIHx8IHN0cnBv
cygkcXVlcnksICcvJykgPT09IHRydWUpCgkJCXJldHVybiAkcGFydHNbMF07CgoJCS8vICcm
YW1wOycgd2lsbCBicmVhayBwYXJzZV9zdHIoKSBpZiB0aGV5IGFyZSBmb3VuZCBpbiBhIHF1
ZXJ5IHN0cmluZwoJCSRxdWVyeSA9IHN0cl9yZXBsYWNlKCcmYW1wOycsICcmJywgJHF1ZXJ5
KTsKCgkJaWYgKCRmcmFnbWVudCkKCQkJJGZyYWdtZW50ID0gJyMnLiRmcmFnbWVudDsKCgkJ
Z2xvYmFsICRwcmV0ZXh0OwoJCXBhcnNlX3N0cigkcXVlcnksICRxdWVyeV9wYXJ0KTsKCQlp
ZiAoIWFycmF5X2tleV9leGlzdHMoJ3BnJywgJHF1ZXJ5X3BhcnQpKQoJCQkkcXVlcnlfcGFy
dFsncGcnXSA9IDA7CgkJaWYgKCFhcnJheV9rZXlfZXhpc3RzKCdpZCcsICRxdWVyeV9wYXJ0
KSkKCQkJJHF1ZXJ5X3BhcnRbJ2lkJ10gPSAwOwoJCWlmICghYXJyYXlfa2V5X2V4aXN0cygn
cnNzJywgJHF1ZXJ5X3BhcnQpKQoJCQkkcXVlcnlfcGFydFsncnNzJ10gPSAwOwoJCWlmICgh
YXJyYXlfa2V5X2V4aXN0cygnYXRvbScsICRxdWVyeV9wYXJ0KSkKCQkJJHF1ZXJ5X3BhcnRb
J2F0b20nXSA9IDA7CgkJaWYgKCR0aGlzLT5wcmVmKCdqb2luX3ByZXRleHRfdG9fcGFnZWxp
bmtzJykpCgkJCWV4dHJhY3QoYXJyYXlfbWVyZ2UoJHByZXRleHQsICRxdWVyeV9wYXJ0KSk7
CgkJZWxzZQoJCQlleHRyYWN0KCRxdWVyeV9wYXJ0KTsKCgkJLy8gV2UgaGF2ZSBhIGlkLCBw
YXNzIHRvIHBlcm1saW5rdXJsKCkKCQlpZiAoJGlkKSB7CgkJCWlmIChAJHMgPT0gJ2ZpbGVf
ZG93bmxvYWQnKSB7CgkJCQkkdGl0bGUgPSAodmVyc2lvbl9jb21wYXJlKCRkYnZlcnNpb24s
ICc0LjInLCAnPj0nKSkgPyBOVUxMIDogc2FmZV9maWVsZCgnZmlsZW5hbWUnLCAndHhwX2Zp
bGUnLCAiaWQgPSAneyRpZH0nIik7CgkJCQkkdXJsID0gJHRoaXMtPnRvZ2dsZV9wZXJtbGlu
a19tb2RlKCdmaWxlZG93bmxvYWR1cmwnLCBhcnJheSgkaWQsICR0aXRsZSksIHRydWUpOwoJ
CQl9IGVsc2UgewoJCQkJJHJzID0gc2FmZV9yb3coJyosIElEIGFzIHRoaXNpZCwgdW5peF90
aW1lc3RhbXAoUG9zdGVkKSBhcyBwb3N0ZWQnLCAndGV4dHBhdHRlcm4nLCAiSUQgPSAneyRp
ZH0nIik7CgkJCQkkdXJsID0gJHRoaXMtPl9wZXJtbGlua3VybCgkcnMsIFBFUk1MSU5LVVJM
KSAuICRmcmFnbWVudDsKCQkJfQoJCQlyZXR1cm4gJ2hyZWY9IicuICR1cmwgLiciJzsKCQl9
CgoJCWlmIChAJHMgPT0gJ2RlZmF1bHQnKQoJCQl1bnNldCgkcyk7CgoJCS8vIFNvbWUgVHhQ
IHRhZ3MsIGUuZy4gPHR4cDpmZWVkX2xpbmsgLz4gdXNlICdzZWN0aW9uJyBvciAnY2F0ZWdv
cnknIGluY29uc2lzdGVudAoJCS8vIHdpdGggbW9zdCBvdGhlciB0YWdzLiBQcm9jZXNzIHRo
ZXNlIG5vdyBzbyB3ZSBvbmx5IGhhdmUgdG8gY2hlY2sgJHMgYW5kICRjLgoJCWlmIChAJHNl
Y3Rpb24gJiYgISRzKQoJCQkkcyA9ICRzZWN0aW9uOwoJCWlmIChAJGNhdGVnb3J5ICYmICEk
YykKCQkJJGMgPSAkY2F0ZWdvcnk7CgoJCS8vIERlYnVnZ2luZyBmb3IgYnVmZmVycwoJCSR0
aGlzLT5idWZmZXJfZGVidWdbXSA9ICd1cmw6ICcuc3RyX3JlcGxhY2UoJyZhbXA7JywgJyYn
LCAkcGFydHNbMV0uJHBhcnRzWzJdKTsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncGF0
aDogJy4kcGF0aDsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncXVlcnk6ICcuJHF1ZXJ5
OwoJCWlmICgkZnJhZ21lbnQpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdmcmFnbWVudDog
Jy4kZnJhZ21lbnQ7CgoJCWlmIChAJGlkKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnaWQ6
ICcuJGlkOwoJCWlmIChAJHMpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdzOiAnLiRzOwoJ
CWlmIChAJGMpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdjOiAnLiRjOwoJCWlmIChAJHJz
cykgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3JzczogJy4kcnNzOwoJCWlmIChAJGF0b20p
ICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdhdG9tOiAnLiRhdG9tOwoJCWlmIChAJHBnKSAk
dGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncGc6ICcuJHBnOwoJCWlmIChAJHEpICR0aGlzLT5i
dWZmZXJfZGVidWdbXSA9ICdxOiAnLiRxOwoKCQlpZiAoQCRwcmV0ZXh0WydwZXJtbGlua19v
dmVycmlkZSddKSB7CgkJCSRvdmVycmlkZV9pZHMgPSBleHBsb2RlKCcsJywgJHByZXRleHRb
J3Blcm1saW5rX292ZXJyaWRlJ10pOwoJCQlmb3JlYWNoICgkb3ZlcnJpZGVfaWRzIGFzICRv
dmVycmlkZV9pZCkgewoJCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkb3ZlcnJpZGVf
aWQpOwoJCQkJaWYgKGNvdW50KCRwbCkgPiAwKSAkcGVybWxpbmtzW10gPSAkcGw7CgkJCX0K
CQl9CgoJCWlmIChlbXB0eSgkcGVybWxpbmtzKSkgewoJCQkkcGVybWxpbmtzID0gJHRoaXMt
PmdldF9hbGxfcGVybWxpbmtzKDEpOwoKCQkJJHBlcm1saW5rc1snZ2JwX3Blcm1hbmVudF9s
aW5rc19kZWZhdWx0J10gPSBhcnJheSgKCQkJCSdjb21wb25lbnRzJyA9PiBhcnJheSgKCQkJ
CQlhcnJheSgndHlwZScgPT4gJ3RleHQnLCAndGV4dCcgPT4gc3RydG9sb3dlcih1cmxlbmNv
ZGUoZ1R4dCgnY2F0ZWdvcnknKSkpKSwKCQkJCQlhcnJheSgndHlwZScgPT4gJ2NhdGVnb3J5
JyksCgkJCQkpLAoJCQkJJ3NldHRpbmdzJyA9PiBhcnJheSgKCQkJCQkncGxfbmFtZScgPT4g
J2dicF9wZXJtYW5lbnRfbGlua3NfZGVmYXVsdCcsICdwbF9wcmVjZWRlbmNlJyA9PiAnJywg
J3BsX3ByZXZpZXcnID0+ICcnLAoJCQkJCSdjb25fc2VjdGlvbicgPT4gJycsICdjb25fY2F0
ZWdvcnknID0+ICcnLCAnZGVzX3NlY3Rpb24nID0+ICcnLCAnZGVzX2NhdGVnb3J5JyA9PiAn
JywKCQkJCQknZGVzX3Blcm1saW5rJyA9PiAnJywgJ2Rlc19mZWVkJyA9PiAnJywgJ2Rlc19s
b2NhdGlvbicgPT4gJycsCgkJCSkpOwoJCX0KCgkJJGN1cnJlbnRfc2VnbWVudHMgPSBleHBs
b2RlKCcvJywgbHRyaW0oJHByZXRleHRbJ3JlcXVlc3RfdXJpJ10sICcvJykpOwoKCQkkaGln
aGVzdF9tYXRjaF9jb3VudCA9IG51bGw7CgkJZm9yZWFjaCAoJHBlcm1saW5rcyBhcyAka2V5
ID0+ICRwbCkgewoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnVGVzdGluZyBwZXJtbGlu
azogJy4gJHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ10gLicgLSAnLiAka2V5OwoJCQkkdGhp
cy0+YnVmZmVyX2RlYnVnW10gPSAnUHJldmlldzogJy4gJHBsWydzZXR0aW5ncyddWydwbF9w
cmV2aWV3J107CgkJCSRvdXQgPSBhcnJheSgpOyAka2V5cyA9IGFycmF5KCk7ICRtYXRjaF9j
b3VudCA9IDA7CgkJCWZvcmVhY2ggKCRwbFsnY29tcG9uZW50cyddIGFzICRpID0+ICRwbF9j
KSB7CgkJCQlzd2l0Y2ggKCRwbF9jWyd0eXBlJ10pIHsKCQkJCQljYXNlICd0ZXh0JzoKCQkJ
CQkJJG91dFtdID0gJHBsX2NbJ3RleHQnXTsKCQkJCQlicmVhazsKCQkJCQljYXNlICdyZWdl
eCc6CgkJCQkJCSRvdXRbXSA9ICRwcmV0ZXh0WydwZXJtbGlua19yZWdleF8nLiRwbF9jWydu
YW1lJ11dOwoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3NlY3Rpb24nOgoJCQkJCQlpZiAoQCRz
KSAkb3V0W10gPSAkczsKCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJyZWFrOwoJCQkJCWNh
c2UgJ2NhdGVnb3J5JzoKCQkJCQkJaWYgKEAkYykgJG91dFtdID0gJGM7CgkJCQkJCWVsc2Ug
YnJlYWsgMjsKCQkJCQlicmVhazsKCQkJCQljYXNlICdmZWVkJzoKCQkJCQkJaWYgKEAkcnNz
KSAka2V5c1tdID0gJG91dFtdID0gJ3Jzcyc7CgkJCQkJCWVsc2UgaWYgKEAkYXRvbSkgJGtl
eXNbXSA9ICRvdXRbXSA9ICdhdG9tJzsKCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJyZWFr
OwoJCQkJCWNhc2UgJ3NlYXJjaCc6CgkJCQkJCWlmIChAJHEpICRvdXRbXSA9ICRxOwoJCQkJ
CQllbHNlIGJyZWFrIDI7CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAncGFnZSc6CgkJCQkJCWlm
IChAJHBnKSB7CgkJCQkJCQkkb3V0W10gPSAkcGc7CgkJCQkJCQkka2V5c1tdID0gJ3BnJzsK
CQkJCQkJfQoJCQkJCQllbHNlIGJyZWFrIDI7CgkJCQkJYnJlYWs7CgkJCQkJZGVmYXVsdDog
YnJlYWsgMjsKCQkJCX0KCQkJCWlmIChpbl9hcnJheSgkcGxfY1sndHlwZSddLCBhcnJheSgn
dGV4dCcsICdyZWdleCcpKSkgewoJCQkJCWlmICgkY3VycmVudF9zZWdtZW50c1skaV0gPT0g
ZW5kKCRvdXQpICYmIHN0cmxlbihlbmQoJG91dCkpID4gMCkKCQkJCQkJJG1hdGNoX2NvdW50
ICs9ICR0aGlzLT5wcmVmKCd0ZXh0X2FuZF9yZWdleF9zZWdtZW50X3Njb3JlcycpOwoJCQkJ
fQoJCQkJZWxzZWlmICghaW5fYXJyYXkoJHBsX2NbJ3R5cGUnXSwgYXJyYXkoJ3RpdGxlJywg
J2lkJykpKQoJCQkJCSRtYXRjaF9jb3VudCsrOwoJCQkJZWxzZSBicmVhazsKCQkJfQoKCQkJ
JHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ01hdGNoIGNvdW50OiAnLiAkbWF0Y2hfY291bnQ7
CgoJCQkvLyBUb2RvOiBTdG9yZSBhY2NvcmRpbmcgdG8gdGhlIHByZWNlZGVuY2UgdmFsdWUK
CQkJaWYgKGNvdW50KCRvdXQpID4gMCAmJiAoJG1hdGNoX2NvdW50ID4gJGhpZ2hlc3RfbWF0
Y2hfY291bnQgfHwgIWlzc2V0KCRoaWdoZXN0X21hdGNoX2NvdW50KSkgJiYKCQkJISgka2V5
ID09ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1bHQnICYmICEkbWF0Y2hfY291bnQpKSB7
CgkJCQlleHRyYWN0KCRwbFsnc2V0dGluZ3MnXSk7CgkJCQlpZiAoKGVtcHR5KCRzKSAmJiBl
bXB0eSgkYykpIHx8CgkJCQkoZW1wdHkoJGNvbl9zZWN0aW9uKSB8fCBAJHMgPT0gJGNvbl9z
ZWN0aW9uKSB8fAoJCQkJKGVtcHR5KCRjb25fY2F0ZWdvcnkpIHx8IEAkYyA9PSAkY29uX2Nh
dGVnb3J5KSkgewoJCQkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdOZXcgaGlnaGVzdCBt
YXRjaCEgJy4gaW1wbG9kZSgnLycsICRvdXQpOwoJCQkJCSRoaWdoZXN0X21hdGNoX2NvdW50
ID0gJG1hdGNoX2NvdW50OwoJCQkJCSRtYXRjaCA9ICRvdXQ7CgkJCQkJJG1hdGNoX2tleXMg
PSAka2V5czsKCQkJCX0KCQkJfQoJCX0KCgkJaWYgKGVtcHR5KCRtYXRjaCkgJiYgKCEoQCRw
ZyAmJiAkdGhpcy0+cHJlZignY2xlYW5fcGFnZV9hcmNoaXZlX2xpbmtzJykpIHx8IChAJHBn
ICYmIEAkcSkpKSB7CgkJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0LCAkcGVybWxpbmtfbW9k
ZTsKCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ05vIG1hdGNoJzsKCQkJJHRoaXMtPmJ1
ZmZlcl9kZWJ1Z1tdID0gJy0tLS0nOwoJCQkkcHJldGV4dFsncGVybWxpbmtfbW9kZSddID0g
JHBlcm1saW5rX21vZGUgPSAkcHJlZnNbJ3Blcm1saW5rX21vZGUnXTsKCQkJJHVybCA9IHBh
Z2VsaW5rdXJsKCRxdWVyeV9wYXJ0KTsKCQkJJHByZXRleHRbJ3Blcm1saW5rX21vZGUnXSA9
ICRwZXJtbGlua19tb2RlID0gJ21lc3N5JzsKCQkJcmV0dXJuICdocmVmPSInLiAkdXJsIC4n
Iic7CgkJfQoKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnbWF0Y2g6ICcuICAgICAgc2Vy
aWFsaXplKCRtYXRjaCk7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ21hdGNoX2tleXM6
ICcuIHNlcmlhbGl6ZSgkbWF0Y2hfa2V5cyk7CgoJCSR1cmwgPSAnLycuam9pbignLycsICRt
YXRjaCk7CgkJJHVybCA9IHJ0cmltKGh1LCAnLycpLnJ0cmltKCR1cmwsICcvJykuJy8nOwoK
CQlpZiAoJHJzcyAmJiAhaW5fYXJyYXkoJ3JzcycsICRtYXRjaF9rZXlzKSkKCQkJJHVybCAu
PSAncnNzJzsKCQllbHNlIGlmICgkYXRvbSAmJiAhaW5fYXJyYXkoJ2F0b20nLCAkbWF0Y2hf
a2V5cykpCgkJCSR1cmwgLj0gJ2F0b20nOwoJCWVsc2UgaWYgKCRwZyAmJiAhaW5fYXJyYXko
J3BnJywgJG1hdGNoX2tleXMpKSB7CgkJCWlmICgkdGhpcy0+cHJlZignY2xlYW5fcGFnZV9h
cmNoaXZlX2xpbmtzJykpCgkJCQkkdXJsIC49ICRwZzsKCQkJZWxzZSB7CgkJCQkkdXJsIC49
ICc/cGc9Jy4gJHBnOwoJCQkJJG9taXRfdHJhaWxpbmdfc2xhc2ggPSB0cnVlOwoJCQl9CgkJ
fQoKCQkkdXJsID0gcnRyaW0oJHVybCwgJy8nKSAuICcvJzsKCgkJaWYgKEAkb21pdF90cmFp
bGluZ19zbGFzaCB8fCAkdGhpcy0+cHJlZignb21pdF90cmFpbGluZ19zbGFzaCcpKQoJCQkk
dXJsID0gcnRyaW0oJHVybCwgJy8nKTsKCgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJHVy
bDsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnLS0tLSc7CgoJCWlmICgkcGF0aCA9PSAn
aW5kZXgucGhwJyAmJiAkdXJsICE9IGh1KQoJCQlyZXR1cm4gJ2hyZWY9IicuICR1cmwgLiAk
ZnJhZ21lbnQgLiciJzsKCgkJLyoKCQkxID0gaW5kZXgsIHRleHRwYXR0ZXJuL2NzcywgTlVM
TCAoPWluZGV4KQoJCTIgPSBpZCwgcywgc2VjdGlvbiwgYywgY2F0ZWdvcnksIHJzcywgYXRv
bSwgcGcsIHEsIChuLCBwLCBtb250aCwgYXV0aG9yKQoJCSovCgoJCXJldHVybiAoJHRoaXMt
PnByZWYoJ2ZvcmNlX2xvd2VyY2FzZV91cmxzJykpID8gc3RydG9sb3dlcigkcGFydHNbMF0p
IDogJHBhcnRzWzBdOwoJfQoKCWZ1bmN0aW9uIHNldF9wZXJtbGlua19tb2RlICgkcmVzZXRf
ZnVuY3Rpb24gPSBmYWxzZSkgewoJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0LCAkcGVybWxp
bmtfbW9kZTsKCQkkcHJlZnNbJ2N1c3RvbV91cmxfZnVuYyddID0gYXJyYXkoJiR0aGlzLCAn
X3Blcm1saW5rdXJsJyk7CgoJCWlmICghJHJlc2V0X2Z1bmN0aW9uKQoJCQkkcHJldGV4dFsn
cGVybWxpbmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAnbWVzc3knOwoJCWVsc2UKCQkJ
JHByZXRleHRbJ3Blcm1saW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJHByZWZzWydw
ZXJtbGlua19tb2RlJ107Cgl9CgoJZnVuY3Rpb24gcmVzZXRfcGVybWxpbmtfbW9kZSAoKSB7
CgkJZ2xvYmFsICRwcmVmcywgJHByZXRleHQsICRwZXJtbGlua19tb2RlOwoJCXVuc2V0KCRw
cmVmc1snY3VzdG9tX3VybF9mdW5jJ10pOwoJCSRwcmV0ZXh0WydwZXJtbGlua19tb2RlJ10g
PSAkcGVybWxpbmtfbW9kZSA9ICRwcmVmc1sncGVybWxpbmtfbW9kZSddOwoJfQoKCWZ1bmN0
aW9uIHRvZ2dsZV9jdXN0b21fdXJsX2Z1bmMgKCRmdW5jLCAkYXR0cyA9IE5VTEwsICR0b29n
bGVfcGVybWxpbmtfbW9kZSA9IGZhbHNlLCAkZXhwYW5kX2FyZ3VtZW50cyA9IGZhbHNlKSB7
CgkJZ2xvYmFsICRwcmVmcywgJHByZXRleHQ7CgoJCWlmICgkdG9vZ2xlX3Blcm1saW5rX21v
ZGUpIHsKCQkJZ2xvYmFsICRwZXJtbGlua19tb2RlOwoJCQkkX3Blcm1saW5rX21vZGUgPSAk
cGVybWxpbmtfbW9kZTsKCQl9CgoJCSRfY2FsbF91c2VyX2Z1bmMgPSBAJHByZWZzWydjdXN0
b21fdXJsX2Z1bmMnXTsKCgkJdW5zZXQoJHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXSk7CgkJ
aWYgKCR0b29nbGVfcGVybWxpbmtfbW9kZSkKCQkJJHByZXRleHRbJ3Blcm1saW5rX21vZGUn
XSA9ICRwZXJtbGlua19tb2RlID0gJHByZWZzWydwZXJtbGlua19tb2RlJ107CgoJCWlmIChp
c19jYWxsYWJsZSgkZnVuYykpIHsKCQkJaWYgKGlzX2FycmF5KCRhdHRzKSBhbmQgJGV4cGFu
ZF9hcmd1bWVudHMpCgkJCQkkcnMgPSBjYWxsX3VzZXJfZnVuY19hcnJheSgkZnVuYywgJGF0
dHMpOwoJCQllbHNlCgkJCQkkcnMgPSBjYWxsX3VzZXJfZnVuYygkZnVuYywgJGF0dHMpOwoJ
CX0KCgkJJHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXSA9ICRfY2FsbF91c2VyX2Z1bmM7CgoJ
CWlmICgkdG9vZ2xlX3Blcm1saW5rX21vZGUpCgkJCSRwcmV0ZXh0WydwZXJtbGlua19tb2Rl
J10gPSAkcGVybWxpbmtfbW9kZSA9ICRfcGVybWxpbmtfbW9kZTsKCgkJcmV0dXJuICRyczsK
CX0KCglmdW5jdGlvbiB0b2dnbGVfcGVybWxpbmtfbW9kZSAoJGZ1bmMsICRhdHRzID0gTlVM
TCwgJGV4cGFuZF9hcmd1bWVudHMgPSBmYWxzZSkgewoJCXJldHVybiAkdGhpcy0+dG9nZ2xl
X2N1c3RvbV91cmxfZnVuYygkZnVuYywgJGF0dHMsIHRydWUsICRleHBhbmRfYXJndW1lbnRz
KTsKCX0KCglmdW5jdGlvbiBlbmNvZGVfdXJsICgkdGV4dCkgewoJCXJldHVybiB1cmxlbmNv
ZGUodHJpbShkdW1iRG93bih1cmxkZWNvZGUoJHRleHQpKSkpOwoJfQoKCWZ1bmN0aW9uIGRl
YnVnICgpIHsKCQlpZiAoJHRoaXMtPnByZWYoJ2RlYnVnJykpIHsKCQkJZ2xvYmFsICRwcm9k
dWN0aW9uX3N0YXR1czsKCQkJJGEgPSBmdW5jX2dldF9hcmdzKCk7CgoJCQlpZiAoQHR4cGlu
dGVyZmFjZSA9PSAnYWRtaW4nKQoJCQkJZm9yZWFjaCAoJGEgYXMgJHRoaW5nKQoJCQkJCWRt
cCgkdGhpbmcpOwoKCQkJaWYgKEB0eHBpbnRlcmZhY2UgPT0gJ3B1YmxpYycgJiYgaW5fYXJy
YXkoJHByb2R1Y3Rpb25fc3RhdHVzLCBhcnJheSgnZGVidWcnLCAndGVzdGluZycpKSkKCQkJ
CWZvcmVhY2ggKCRhIGFzICR0aGluZykKCQkJCQllY2hvIGNvbW1lbnQoaXNfc2NhbGFyKCR0
aGluZykgPyBzdHJ2YWwoJHRoaW5nKSA6IHZhcl9leHBvcnQoJHRoaW5nLCB0cnVlKSksbjsK
CQl9Cgl9Cn0KCmNsYXNzIFBlcm1hbmVudExpbmtzQnVpbGRUYWJWaWV3IGV4dGVuZHMgR0JQ
QWRtaW5UYWJWaWV3CnsKCXZhciAkcGVybWlzc2lvbnMgPSAnMSwyJzsKCWZ1bmN0aW9uIHBy
ZWxvYWQgKCkgewoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhpcywgJ3Bvc3Rfc2F2
ZV9wZXJtbGluaycpLCAkdGhpcy0+cGFyZW50LT5ldmVudCwgZ2JwX3NhdmUsIDEpOwoJCXJl
Z2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhpcywgJ3Bvc3Rfc2F2ZV9wZXJtbGluaycpLCAk
dGhpcy0+cGFyZW50LT5ldmVudCwgZ2JwX3Bvc3QsIDEpOwoJfQoKCWZ1bmN0aW9uIG1haW4g
KCkgewoJCWdsb2JhbCAkcHJlZnM7CgkJZXh0cmFjdChncHNhKGFycmF5KCdzdGVwJywgZ2Jw
X2lkKSkpOwoKCQkvLyBXaXRoIGhhdmUgYW4gSUQsIGVpdGhlciB0aGUgcGVybWxpbmsgaGFz
IGp1c3QgYmVlbiBzYXZlZCBvciB0aGUgdXNlciB3YW50cyB0byBlZGl0IGl0CgkJaWYgKCRp
ZCkgewoJCQkvLyBOZXdseSBzYXZlZCBvciBiZWVuaW5nIGVkaXRlZCwgZWl0aGVyIHdheSB3
ZSdyZSBlZGl0aW5nIGEgcGVybWxpbmsKCQkJJHN0ZXAgPSBnYnBfc2F2ZTsKCgkJCS8vIFVz
ZSB0aGUgSUQgdG8gZ3JhYiB0aGUgcGVybWxpbmsgZGF0YSAoY29tcG9uZW50cyAmIHNldHRp
bmdzKQoJCQkkcGVybWxpbmsgPSAkdGhpcy0+cGFyZW50LT5nZXRfcGVybWxpbmsoJGlkKTsK
CQkJJGNvbXBvbmVudHMgPSAkdGhpcy0+cGhwQXJyYXlUb0pzQXJyYXkoJ2NvbXBvbmVudHMn
LCAkcGVybWxpbmtbJ2NvbXBvbmVudHMnXSk7CgkJCSRzZXR0aW5ncyA9ICRwZXJtbGlua1sn
c2V0dGluZ3MnXTsKCQl9IGVsc2UgewoJCQkvLyBDcmVhdGluZyBhIG5ldyBJRCBhbmQgcGVy
bWxpbmsuCgkJCSRzdGVwID0gZ2JwX3Bvc3Q7CgkJCSRpZCA9IHVuaXFpZCgnJyk7CgoJCQkv
LyBTZXQgdGhlIGRlZmF1bHQgc2V0IG9mIGNvbXBvbmVudHMgZGVwZW5kaW5nIG9uIHdoZXRo
ZXIgdGhlcmUgaXMgcGFyZW50IHBlcm1saW5rCgkJCSRjb21wb25lbnRzID0gJHRoaXMtPnBo
cEFycmF5VG9Kc0FycmF5KCdjb21wb25lbnRzJywgYXJyYXkoCgkJCQlhcnJheSgndHlwZScg
PT4gJ3NlY3Rpb24nLCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4gJycsICdyZWdleCcg
PT4gJycsICd0ZXh0JyA9PiAnJyksCgkJCQlhcnJheSgndHlwZScgPT4gJ2NhdGVnb3J5Jywg
J3ByZWZpeCcgPT4gJycsICdzdWZmaXgnID0+ICcnLCAncmVnZXgnID0+ICcnLCAndGV4dCcg
PT4gJycsICdjYXRlZ29yeScgPT4gJzEnKSwKCQkJCWFycmF5KCd0eXBlJyA9PiAndGl0bGUn
LCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4gJycsICdyZWdleCcgPT4gJycsICd0ZXh0
JyA9PiAnJyksCgkJCSkpOwoKCQkJJHNldHRpbmdzID0gYXJyYXkoCgkJCQkncGxfbmFtZScg
PT4gJ1VudGl0bGVkJywgJ3BsX3ByZWNlZGVuY2UnID0+ICcwJywKCQkJCSdjb25fc2VjdGlv
bicgPT4gJycsICdjb25fY2F0ZWdvcnknID0+ICcnLAoJCQkJJ2Rlc19zZWN0aW9uJyA9PiAn
JywgJ2Rlc19jYXRlZ29yeScgPT4gJycsICdkZXNfcGFnZScgPT4gJycsCgkJCQknZGVzX3Bl
cm1saW5rJyA9PiAnJywgJ2Rlc19mZWVkJyA9PiAnJywgJ2Rlc19sb2NhdGlvbicgPT4gJycs
CgkJCSk7CgkJfQoKCQkvLyBFeHRyYWN0IHNldHRpbmdzIC0gdGhpcyB3aWxsIGJlIHVzZWZ1
bCB3aGVuIGNyZWF0aW5nIHRoZSB1c2VyIGludGVyZmFjZQoJCWV4dHJhY3QoJHNldHRpbmdz
KTsKCgkJLy8gUEhQICYgSmF2YXNjcmlwdCBjb25zdGFudHM7CgkJJHNlcGFyYXRvciA9IGdi
cF9zZXBhcmF0b3I7CgkJJGNvbXBvbmVudHNfZGl2ID0gJ3Blcm1saW5rX2NvbXBvbmVudHNf
dWknOwoJCSRjb21wb25lbnRzX2Zvcm0gPSAncGVybWxpbmtfY29tcG9uZW50cyc7CgkJJHNl
dHRpbmdzX2Zvcm0gPSAncGVybWxpbmtfc2V0dGluZ3MnOwoJCSRzaG93X3ByZWZpeCA9ICR0
aGlzLT5wcmVmKCdzaG93X3ByZWZpeCcpOwoJCSRzaG93X3N1ZmZpeCA9ICR0aGlzLT5wcmVm
KCdzaG93X3N1ZmZpeCcpOwoKCQkvLyBBIGxpdHRsZSBjcmVkaXQgaGVyZSBhbmQgdGhlcmUg
ZG9lc24ndCBodXJ0CgkJJG91dFtdID0gIjwhLS0geyR0aGlzLT5wYXJlbnQtPnBsdWdpbl9u
YW1lfSBieSBHcmFlbWUgUG9ydGVvdXMgLS0+IjsKCgkJLy8gVGhlIEphdmFzY3JpcHQKJG91
dFtdID0gPDw8SFRNTAoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGxhbmd1YWdl
PSJqYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCI+CgkvLyA8IVtDREFUQVsKCgkvLyBHbG9i
YWwgdmFyaWFibGVzCnZhciB7JGNvbXBvbmVudHN9Ly8gY29tcG9uZW50cyBhcnJheSBmb3Ig
YWxsIHRoZSBkYXRhCgoJdmFyIF9jdXJyZW50ID0gMDsgLy8gSW5kZXggb2YgdGhlIGNvbXBv
bmVudHMgYXJyYXksIG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgY29tcG9uZW50Cgl2YXIg
Y192YWxzID0gbmV3IEFycmF5KCd0eXBlJywgJ2N1c3RvbScsICdjYXRlZ29yeScsICduYW1l
JywgJ3ByZWZpeCcsICdzdWZmaXgnLCAncmVnZXgnLCAndGV4dCcpOwoKCXdpbmRvdy5vbmxv
YWQgPSBmdW5jdGlvbigpIHsKCQljb21wb25lbnRfcmVmcmVzaF9hbGwoKTsKCQljb21wb25l
bnRfc3dpdGNoKGNvbXBvbmVudChfY3VycmVudCkpOwoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVu
dF9hZGQgKCkgewoJCS8vIENyZWF0ZSBkYXRhIHNldAoJCXZhciBkYXRhID0gbmV3IEFycmF5
KCk7CgkJZm9yIChrZXkgaW4gY192YWxzKSB7CgkJCWRhdGFbY192YWxzW2tleV1dID0gJyc7
CgkJfQoKCQkvLyBBZGQgZGF0YQoJCWNvbXBvbmVudHMucHVzaChkYXRhKTsKCgkJLy8gUmVz
ZXQgY29tcG9uZW50IHR5cGUgbGlzdAoJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLnR5
cGUudmFsdWUgPSAnJzsKCgkJLy8gU3dpdGNoIHRvIHRoZSBuZXcgY29tcG9uZW50CgkJX2N1
cnJlbnQgPSBjb21wb25lbnRzLmxlbmd0aCAtIDE7CgoJCS8vIFJlZnJlc2ggVUkKCQljb21w
b25lbnRfcmVmcmVzaF9hbGwoKTsKCQljb21wb25lbnRfdXBkYXRlKCk7Cgl9CgoJZnVuY3Rp
b24gY29tcG9uZW50X3JlZnJlc2ggKGVsZW1lbnQpIHsKCQl2YXIgYyA9IGNvbXBvbmVudHNb
ZWxlbWVudC5pZF07CgoJCS8vIENTUwoJCWlmIChfY3VycmVudCA9PSBlbGVtZW50LmlkKQoJ
CQllbGVtZW50LnN0eWxlWydiYWNrZ3JvdW5kQ29sb3InXSA9ICdyZ2IoMjQ5LCAyMDYsIDcz
KSc7CgkJZWxzZQoJCQllbGVtZW50LnN0eWxlWydiYWNrZ3JvdW5kQ29sb3InXSA9ICdyZ2Io
MjU1LCAyNTQsIDIxMSknOwoJCWVsZW1lbnQuc3R5bGVbJ2NvbG9yJ10gPSAncmdiKDAsIDAs
IDApJzsKCQllbGVtZW50LnN0eWxlWydmb250RmFtaWx5J10gPSAnQXJpYWwnOwoJCWVsZW1l
bnQuc3R5bGVbJ2ZvbnRXZWlnaHQnXSA9ICdib2xkJzsKCQllbGVtZW50LnN0eWxlWyd2ZXJ0
aWNhbEFsaWduJ10gPSAnbWlkZGxlJzsKCQllbGVtZW50LnN0eWxlWyd0ZXh0QWxpZ24nXSA9
ICdjZW50ZXInOwoJCWVsZW1lbnQuc3R5bGVbJ2xpbmVIZWlnaHQnXSA9ICcxLjVlbSc7CgkJ
ZWxlbWVudC5zdHlsZVsnaGVpZ2h0J10gPSAnMS41ZW0nOwoJCWVsZW1lbnQuc3R5bGVbJ3Bh
ZGRpbmcnXSA9ICcwIDVweCc7CgkJZWxlbWVudC5zdHlsZVsnbWFyZ2luUmlnaHQnXSA9ICc1
cHgnOwoJCWVsZW1lbnQuc3R5bGVbJ2Nzc0Zsb2F0J10gPSAnbGVmdCc7CgkJZWxlbWVudC5z
dHlsZVsnZGlzcGxheSddID0gJ2lubGluZSc7CgoJCS8vIFJlbW92ZSBhbGwgY2hpbGQgbm9k
ZXMKCQl3aGlsZSAoZWxlbWVudC5oYXNDaGlsZE5vZGVzKCkpIHsgZWxlbWVudC5yZW1vdmVD
aGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpOyB9CgoJCS8vIENyZWF0ZSB0aGUgdmlzaWJsZSBz
dHJpbmcgcmVwcmVzZW50aW5nIHRoaXMgY29tcG9uZW50CgkJc3dpdGNoIChjWyd0eXBlJ10p
IHsKCQkJY2FzZSAnJyA6CgkJCQlzdHJpbmcgPSAnLyc7CgkJCQlicmVhazsKCQkJY2FzZSAn
cmVnZXgnIDoKCQkJY2FzZSAndGV4dCcgOgoJCQkJc3RyaW5nID0gY1tjWyd0eXBlJ11dICsg
JyAvJzsKCQkJCWJyZWFrOwoJCQljYXNlICdkYXRlJyA6CgkJCQlzdHJpbmcgPSBjWyd0eXBl
J10gKyAnIC8nOwoJCQkJYnJlYWs7CgkJCWNhc2UgJ2N1c3RvbScgOgoJCQkJc3RyaW5nID0g
Y1sncHJlZml4J10gKyAnY3VzdG9tXycgKyBjWydjdXN0b20nXSArIGNbJ3N1ZmZpeCddICsg
JyAvJzsKCQkJCWJyZWFrOwoJCQlkZWZhdWx0IDoKCQkJCXN0cmluZyA9IGNbJ3ByZWZpeCdd
ICsgY1sndHlwZSddICsgY1snc3VmZml4J10gKyAnIC8nOwoJCQlicmVhazsKCQl9CgoJCS8v
IFNldCB0aGUgdmlzaWJsZSBzdHJpbmcKCQllbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50
LmNyZWF0ZVRleHROb2RlKHN0cmluZykpOwoKCQlyZXR1cm4gZWxlbWVudDsKCX0KCglmdW5j
dGlvbiBjb21wb25lbnRfcmVmcmVzaF9hbGwgKCkgewoJCS8vIFJlbW92ZSBhbGwgY2hpbGQg
bm9kZXMKCQl3aGlsZSAocGVybWxpbmtfZGl2KCkuaGFzQ2hpbGROb2RlcygpKSB7IHBlcm1s
aW5rX2RpdigpLnJlbW92ZUNoaWxkKHBlcm1saW5rX2RpdigpLmZpcnN0Q2hpbGQpOyB9CgoJ
CWZvciAodmFyIGkgPSAwOyBpIDwgY29tcG9uZW50cy5sZW5ndGg7IGkrKykgewoJCQl2YXIg
YyA9IGNvbXBvbmVudHNbaV07CgoJCQkvLyBDcmVhdGUgdGhlIG5ldyBjb21wb25lbnQKCQkJ
dmFyIG5ld19jb21wb25lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKCgkJ
CS8vIFNldCB0aGUgaWQgaW50ZXJnZXIgZm9yIHRoaXMgY29tcG9uZW50CgkJCW5ld19jb21w
b25lbnQuaWQgPSBpOwoKCQkJLy8gSmF2YXNjcmlwdCwgb25tb3VzZXVwIHNldHRpbmcKCQkJ
bmV3X2NvbXBvbmVudC5zZXRBdHRyaWJ1dGUoJ29ubW91c2Vkb3duJywgJ2NvbXBvbmVudF9z
d2l0Y2godGhpcyk7Jyk7CgkJCW5ld19jb21wb25lbnQub25tb3VzZWRvd24gPSBmdW5jdGlv
bigpIHsgY29tcG9uZW50X3N3aXRjaCh0aGlzKTsgfTsKCgkJCS8vIFJlZnJlc2ggdGhlIGxv
b2sgb2YgdGhlIGNvbXBvbmVudAoJCQluZXdfY29tcG9uZW50ID0gY29tcG9uZW50X3JlZnJl
c2gobmV3X2NvbXBvbmVudCk7CgoJCQkvLyBBbmQgYWRkIHRoZSBuZXcgY29tcG9uZW50IHRv
IHRoZSB1aQoJCQlwZXJtbGlua19kaXYoKS5hcHBlbmRDaGlsZChuZXdfY29tcG9uZW50KTsK
CQl9Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3JlbW92ZSAoKSB7CgkJaWYgKGNvbXBvbmVu
dHMubGVuZ3RoID4gMSkgewoJCQljb21wb25lbnRzLnNwbGljZShfY3VycmVudCwgMSk7CgoJ
CQlpZiAoX2N1cnJlbnQgPj0gY29tcG9uZW50cy5sZW5ndGgpCgkJCQlfY3VycmVudCA9IGNv
bXBvbmVudHMubGVuZ3RoIC0gMTsKCgkJCWNvbXBvbmVudF9yZWZyZXNoX2FsbCgpOwoJCX0K
CX0KCglmdW5jdGlvbiBjb21wb25lbnRfc3dpdGNoIChlbGVtZW50KSB7CgkJLy8gVXBkYXRl
IGN1cnJlbnQgaW5kZXgKCQlfY3VycmVudCA9IGVsZW1lbnQuaWQ7CgoJCS8vIFJlZnJlc2gg
VUkKCQljb21wb25lbnRfcmVmcmVzaF9hbGwoKTsKCgkJLy8gU2V0IGZvcm0gaW5wdXQgdmFs
dWVzCgkJdmFyIGMgPSBjb21wb25lbnRzW19jdXJyZW50XTsKCQlmb3IgKGtleSBpbiBjX3Zh
bHMpIHsKCQkJdmFyIGsgPSBjX3ZhbHNba2V5XTsKCQkJdmFyIGUgPSBmb3JtKCd7JGNvbXBv
bmVudHNfZm9ybX0nKS5lbGVtZW50cy5uYW1lZEl0ZW0oayk7CgoJCQlpZiAoY1trXSkgZS52
YWx1ZSA9IGNba107CgkJCWVsc2UgZS52YWx1ZSA9ICcnOwoJCX0KCgkJLy8gSGlkZSB1bm5l
ZWRlZCBmb3JtIGlucHV0cwoJCWNvbXBvbmVudF91cGRhdGUoKTsKCX0KCglmdW5jdGlvbiBj
b21wb25lbnRfdXBkYXRlIChlbGVtZW50KSB7CgkJLy8gU3RvcmUgdGhlIGRhdGEgaW4gZm9y
bSBpbnB1dHMsIGFuZCBoaWRlIGFsbCBmb3JtIGlucHV0cwoJCXZhciBjID0gbmV3IEFycmF5
KCkKCQlmb3IgKGtleSBpbiBjX3ZhbHMpIHsKCQkJdmFyIGsgPSBjX3ZhbHNba2V5XTsKCQkJ
dmFyIGUgPSBmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5lbGVtZW50cy5uYW1lZEl0ZW0o
ayk7CgoJCQljW2tdID0gZS52YWx1ZTsKCgkJCWUucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxh
eSddID0gJ25vbmUnOwoJCX0KCgkJLy8gUmVzaG93IHR5cGUgb3B0aW9uIGxpc3QKCQlmb3Jt
KCd7JGNvbXBvbmVudHNfZm9ybX0nKS50eXBlLnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXkn
XSA9ICcnOwoKCQkvLyBTZXQgb3RoZXIgZm9ybSBpbnB1dHMgdG8gdGhlIGNvcnJlY3Qgdmlz
aWJpbGl0eSBzdGF0ZSwgZGVwZW5kZW50IG9uIHR5cGUKCQlzd2l0Y2ggKGNbJ3R5cGUnXSkg
ewoJCQljYXNlICcnIDoKCQkJY2FzZSAnZGF0ZScgOiBicmVhazsKCQkJY2FzZSAncmVnZXgn
IDoKCQkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLm5hbWUucGFyZW50Tm9kZS5zdHls
ZVsnZGlzcGxheSddID0gJyc7CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5yZWdl
eC5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJYnJlYWs7CgkJCWNhc2Ug
J3RleHQnIDoKCQkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLm5hbWUucGFyZW50Tm9k
ZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0n
KS50ZXh0LnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQlicmVhazsKCQkJ
Y2FzZSAnY3VzdG9tJyA6CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5jdXN0b20u
cGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCQlkaXNwbGF5X2ZpeGVzKCk7
CgkJCWJyZWFrOwoJCQljYXNlICdjYXRlZ29yeScgOgoJCQkJZm9ybSgneyRjb21wb25lbnRz
X2Zvcm19JykuY2F0ZWdvcnkucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJ
CQlkaXNwbGF5X2ZpeGVzKCk7CgkJCWJyZWFrOwoJCQlkZWZhdWx0IDoKCQkJCWRpc3BsYXlf
Zml4ZXMoKTsKCQkJYnJlYWs7CgkJfQoKCQkvLyBTYXZlIGRhdGEKCQljb21wb25lbnRzW19j
dXJyZW50XSA9IGM7CgoJCS8vIFJlZnJlc2ggY29tcG9uZW50IHRvIHJlZmxlY3QgbmV3IGRh
dGEKCQljb21wb25lbnRfcmVmcmVzaChjb21wb25lbnQoX2N1cnJlbnQpKTsKCgkJLy8gUmUt
Zm9jdXMgdGhlIGFjdGl2ZSBmb3JtIGlucHV0CgkJaWYgKGVsZW1lbnQpCgkJCWVsZW1lbnQu
Zm9jdXMoKTsKCX0KCglmdW5jdGlvbiBkaXNwbGF5X2ZpeGVzICgpIHsKCQlpZiAoJ3skc2hv
d19wcmVmaXh9JykKCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19JykucHJlZml4LnBhcmVu
dE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCWlmICgneyRzaG93X3N1ZmZpeH0nKQoJ
CQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5zdWZmaXgucGFyZW50Tm9kZS5zdHlsZVsn
ZGlzcGxheSddID0gJyc7Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X2xlZnQgKCkgewoJCWlm
IChjb21wb25lbnRzLmxlbmd0aCA+IDEgJiYgX2N1cnJlbnQgPiAwKSB7CgkJCS8vIFN0b3Jl
IGN1cnJlbnQgY29tcG9uZW50CgkJCXZhciBjID0gY29tcG9uZW50c1tfY3VycmVudF07CgoJ
CQkvLyBSZW1vdmUgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50cy5zcGxpY2UoX2N1
cnJlbnQsIDEpOwoKCQkJLy8gVXBkYXRlIGN1cnJlbnQgaW5kZXgKCQkJX2N1cnJlbnQtLTsK
CgkJCS8vIFJlLWFkZCBjdXJyZW50IGNvbXBvbmVudAoJCQljb21wb25lbnRzLnNwbGljZShf
Y3VycmVudCwgMCwgYyk7CgoJCQkvLyBSZWZyZXNoIFVJCgkJCWNvbXBvbmVudF9yZWZyZXNo
X2FsbCgpOwoJCX0KCX0KCglmdW5jdGlvbiBjb21wb25lbnRfcmlnaHQgKCkgewoJCWlmIChf
Y3VycmVudCA8IGNvbXBvbmVudHMubGVuZ3RoIC0gMSkgewoJCQkvLyBTdG9yZSBjdXJyZW50
IGNvbXBvbmVudAoJCQl2YXIgYyA9IGNvbXBvbmVudHNbX2N1cnJlbnRdOwoKCQkJLy8gUmVt
b3ZlIGN1cnJlbnQgY29tcG9uZW50CgkJCWNvbXBvbmVudHMuc3BsaWNlKF9jdXJyZW50LCAx
KTsKCgkJCS8vIFVwZGF0ZSBjdXJyZW50IGluZGV4CgkJCV9jdXJyZW50Kys7CgoJCQkvLyBS
ZS1hZGQgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50cy5zcGxpY2UoX2N1cnJlbnQs
IDAsIGMpOwoKCQkJLy8gUmVmcmVzaCBVSQoJCQljb21wb25lbnRfcmVmcmVzaF9hbGwoKTsK
CQl9Cgl9CgoJZnVuY3Rpb24gc2F2ZSAoZm9ybSkgewoJCXZhciBjID0gJyc7IHZhciBpc19w
ZXJtbGluayA9IGZhbHNlOyB2YXIgaGFzX3BhZ2Vfb3Jfc2VhcmNoID0gZmFsc2U7CgkJZm9y
ICh2YXIgaSA9IDA7IGkgPCBjb21wb25lbnRzLmxlbmd0aDsgaSsrKSB7CgkJCWlmIChjb21w
b25lbnRzW2ldWyd0eXBlJ10gPT0gJ3RpdGxlJyB8fCBjb21wb25lbnRzW2ldWyd0eXBlJ10g
PT0gJ2lkJykKCQkJCWlzX3Blcm1saW5rID0gdHJ1ZTsKCQkJaWYgKGNvbXBvbmVudHNbaV1b
J3R5cGUnXSA9PSAncGFnZScgfHwgY29tcG9uZW50c1tpXVsndHlwZSddID09ICdmZWVkJyB8
fCBjb21wb25lbnRzW2ldWyd0eXBlJ10gPT0gJ3NlYXJjaCcpCgkJCQloYXNfcGFnZV9mZWVk
X3NlYXJjaCA9IHRydWU7CgkJCWMgPSBjICsganNBcnJheVRvUGhwQXJyYXkoY29tcG9uZW50
c1tpXSkgKyAneyRzZXBhcmF0b3J9JzsKCQl9CgoJCWlmIChpc19wZXJtbGluayAmJiBoYXNf
cGFnZV9vcl9zZWFyY2gpCgkJCWFsZXJ0KCJZb3VyIHBlcm1hbmVudCBsaW5rIGNhbid0IGNv
bnRhaW4gZWl0aGVyIGEgJ3BhZ2UnLCAnZmVlZCcgb3IgYSAnc2VhcmNoJyBjb21wb25lbnQg
d2l0aCAndGl0bGUnIG9yICdpZCcgY29tcG9uZW50cy4iKTsKCgkJZWxzZSBpZiAoaXNfcGVy
bWxpbmsgJiYgKGZvcm0ucGxfbmFtZS52YWx1ZSA9PSAnJyB8fCBmb3JtLnBsX25hbWUudmFs
dWUgPT0gJ1VudGl0bGVkJykpIHsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NldHRp
bmdzJykuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQlmb3JtLnBsX25hbWUuc3R5bGVbJ2Jv
cmRlciddID0gJzNweCBzb2xpZCByZ2IoMjIxLCAwLCAwKSc7CgkJCWZvcm0ucGxfcHJlY2Vk
ZW5jZS5zdHlsZVsnYm9yZGVyJ10gPSAnJzsKCQkJYWxlcnQoJ1BsZWFzZSBlbnRlciBhIG5h
bWUgZm9yIHRoaXMgcGVybWFuZW50IGxpbmsgcnVsZS4nKTsKCQl9IGVsc2UgaWYgKGZvcm0u
cGxfcHJlY2VkZW5jZS52YWx1ZSA9PSAnJykgewoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJ
ZCgnc2V0dGluZ3MnKS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCWZvcm0ucGxfcHJlY2Vk
ZW5jZS5zdHlsZVsnYm9yZGVyJ10gPSAnM3B4IHNvbGlkIHJnYigyMjEsIDAsIDApJzsKCQkJ
Zm9ybS5wbF9uYW1lLnN0eWxlWydib3JkZXInXSA9ICcnOwoJCQlhbGVydCgnUGxlYXNlIGVu
dGVyIGEgcHJlY2VkZW5jZSB2YWx1ZSBmb3IgdGhpcyBwZXJtYW5lbnQgbGluayBydWxlLicp
OwoJCX0gZWxzZSB7CgkJCWZvcm0uY29tcG9uZW50cy52YWx1ZSA9IGM7CgkJCWlmIChwZXJt
bGlua19kaXYoKS50ZXh0Q29udGVudCkKCQkJCWZvcm0ucGxfcHJldmlldy52YWx1ZSA9IHBl
cm1saW5rX2RpdigpLnRleHRDb250ZW50OwoJCQllbHNlIGlmIChwZXJtbGlua19kaXYoKS5p
bm5lclRleHQpCgkJCQlmb3JtLnBsX3ByZXZpZXcudmFsdWUgPSBwZXJtbGlua19kaXYoKS5p
bm5lclRleHQ7CgkJCXJldHVybiB0cnVlOwoJCX0KCgkJcmV0dXJuIGZhbHNlOwoJfQoKCWZ1
bmN0aW9uIGpzQXJyYXlUb1BocEFycmF5IChhcnJheSkgewoJCS8vIGh0dHA6Ly9mYXJtLnR1
Y293cy5jb20vYmxvZy9fYXJjaGl2ZXMvMjAwNS81LzMwLzg5NTkwMS5odG1sCgkJdmFyIGFy
cmF5X3BocCA9ICIiOwoJCXZhciB0b3RhbCA9IDA7CgkJZm9yICh2YXIga2V5IGluIGFycmF5
KSB7CgkJCSsrIHRvdGFsOwoJCQlhcnJheV9waHAgPSBhcnJheV9waHAgKyAiczoiICsKCQkJ
CVN0cmluZyhrZXkpLmxlbmd0aCArICI6XCIiICsgU3RyaW5nKGtleSkgKyAiXCI7czoiICsK
CQkJCVN0cmluZyhhcnJheVtrZXldKS5sZW5ndGggKyAiOlwiIiArIFN0cmluZyhhcnJheVtr
ZXldKSArICJcIjsiOwoJCX0KCQlhcnJheV9waHAgPSAiYToiICsgdG90YWwgKyAiOnsiICsg
YXJyYXlfcGhwICsgIn0iOwoJCXJldHVybiBhcnJheV9waHA7Cgl9CgoJZnVuY3Rpb24gcGVy
bWxpbmtfZGl2ICgpIHsKCQkvLyBSZXR1cm4gdGhlIHBlcm1saW5rIHJ1bGUgZWxlbWVudAoJ
CXJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgneyRjb21wb25lbnRzX2Rpdn0nKTsK
CX0KCglmdW5jdGlvbiBmb3JtIChuYW1lKSB7CgkJaWYgKCFuYW1lKQoJCQluYW1lID0gJ3sk
Y29tcG9uZW50c19mb3JtfScKCQkvLyBSZXR1cm4gdGhlIGZvcm0gZWxlbWVudCB3aXRoIG5h
bWUKCQlyZXR1cm4gZG9jdW1lbnQuZm9ybXMubmFtZWRJdGVtKG5hbWUpOwoJfQoKCWZ1bmN0
aW9uIGNvbXBvbmVudCAoaW5kZXgpIHsKCQkvLyBSZXR1cm4gY29tcG9uZW50IHdpdGggaW5k
ZXgKCQlyZXR1cm4gcGVybWxpbmtfZGl2KCkuY2hpbGROb2Rlc1tpbmRleF07Cgl9CgoJLy8g
XV0+Cgk8L3NjcmlwdD4KSFRNTDsKCgkJLy8gLS0tIFJ1bGUgLS0tIC8vCgoJCSRvdXRbXSA9
IGhlZCgnUGVybWFuZW50IGxpbmsgcnVsZScsIDIpOwoJCSRvdXRbXSA9ICc8ZGl2IGlkPSIn
LiRjb21wb25lbnRzX2Rpdi4nIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzMCwg
MjMwLCAyMzApOyB3aWR0aDogYXV0bzsgaGVpZ2h0OiAxLjVlbTsgbWFyZ2luOiAxMHB4IDA7
IHBhZGRpbmc6IDVweDsiPjwvZGl2Pic7CgkJJG91dFtdID0gZ3JhZgoJCQkoCgkJCSR0aGlz
LT5mSW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfYWRkJywgJ0FkZCBjb21wb25lbnQnLCBh
cnJheSgnY2xpY2snID0+ICdjb21wb25lbnRfYWRkKCk7JykpLm4uCgkJCSR0aGlzLT5mSW5w
dXQoJ2J1dHRvbicsICdjb21wb25lbnRfcmVtb3ZlJywgJ1JlbW92ZSBjb21wb25lbnQnLCBh
cnJheSgnY2xpY2snID0+ICdjb21wb25lbnRfcmVtb3ZlKCk7JykpLm4uCgkJCSR0aGlzLT5m
SW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfbGVmdCcsICdNb3ZlIGxlZnQnLCBhcnJheSgn
Y2xpY2snID0+ICdjb21wb25lbnRfbGVmdCgpOycpKS5uLgoJCQkkdGhpcy0+ZklucHV0KCdi
dXR0b24nLCAnY29tcG9uZW50X3JpZ2h0JywgJ01vdmUgcmlnaHQnLCBhcnJheSgnY2xpY2sn
ID0+ICdjb21wb25lbnRfcmlnaHQoKTsnKSkKCQkJKTsKCgkJLy8gLS0tIENvbXBvbmVudCBm
b3JtIC0tLSAvLwoKCQkkb3V0W10gPSAnPGZvcm0gYWN0aW9uPSJpbmRleC5waHAiIG5hbWU9
IicuJGNvbXBvbmVudHNfZm9ybS4nIiBvbnN1Ym1pdD0icmV0dXJuIGZhbHNlOyI+JzsKCgkJ
Ly8gLS0tIENvbXBvbmVudCB0eXBlIC0tLSAvLwoKCQkkY29tcG9uZW50X3R5cGVzID0gYXJy
YXkgKAoJCQknc2VjdGlvbicgPT4gJ1NlY3Rpb24nLCAnY2F0ZWdvcnknID0+ICdDYXRlZ29y
eScsCgkJCSd0aXRsZScgPT4gJ1RpdGxlJywgJ2lkJyA9PiAnSUQnLAoJCQknZGF0ZScgPT4g
J0RhdGUgKHl5eXkvbW0vZGQpJywgJ3llYXInID0+ICdZZWFyJywKCQkJJ21vbnRoJyA9PiAn
TW9udGgnLCAnZGF5JyA9PiAnRGF5JywKCQkJJ2F1dGhvcicgPT4gJ0F1dGhvciAoUmVhbCBu
YW1lKScsICdsb2dpbicgPT4gJ0F1dGhvciAoTG9naW4pJywKCQkJJ2N1c3RvbScgPT4gJ0N1
c3RvbSBGaWVsZCcsICdwYWdlJyA9PiAnUGFnZSBOdW1iZXInLAoJCQknZmVlZCcgPT4gJ0Zl
ZWQnLCAnc2VhcmNoJyA9PiAnU2VhcmNoIHJlcXVlc3QnLAoJCQkndGV4dCcgPT4gJ1BsYWlu
IFRleHQnLCAncmVnZXgnID0+ICdSZWd1bGFyIEV4cHJlc3Npb24nCgkJKTsKCQkkb3V0W10g
PSBncmFmKCR0aGlzLT5mU2VsZWN0KCd0eXBlJywgJGNvbXBvbmVudF90eXBlcywgJycsIDEs
ICdDb21wb25lbnQgdHlwZScsICcgb25jaGFuZ2U9ImNvbXBvbmVudF91cGRhdGUoKTsiJykp
OwoKCQkvLyAtLS0gQ29tcG9uZW50IGRhdGEgLS0tIC8vCgoJCS8vIEdyYWIgdGhlIGN1c3Rv
bSBmaWVsZCB0aXRsZXMKCQkkY3VzdG9tX2ZpZWxkcyA9IGFycmF5KCk7CgkJZm9yICgkaSA9
IDE7ICRpIDw9IDEwOyAkaSsrKSB7CgkJCWlmICgkdiA9ICRwcmVmc1siY3VzdG9tX3skaX1f
c2V0Il0pCgkJCQkkY3VzdG9tX2ZpZWxkc1skaV0gPSAkdjsKCQl9CgoJCSRvdXRbXSA9IGdy
YWYgKAoJCQkkdGhpcy0+ZlNlbGVjdCgnY3VzdG9tJywgJGN1c3RvbV9maWVsZHMsICcnLCAw
LCAnQ3VzdG9tJywgJyBvbmNoYW5nZT0iY29tcG9uZW50X3VwZGF0ZSh0aGlzKTsiJykubi4K
CQkJJHRoaXMtPmZTZWxlY3QoJ2NhdGVnb3J5JywgYXJyYXkoJzEnID0+ICdDYXRlZ29yeSAx
JywgJzInID0+ICdDYXRlZ29yeSAyJyksICcnLCAwLCAnUHJpbWFyeSBDYXRlZ29yeScsICcg
b25jaGFuZ2U9ImNvbXBvbmVudF91cGRhdGUodGhpcyk7IicpLm4uCgkJCSR0aGlzLT5mSW5w
dXQoJ3RleHQnLCAnbmFtZScsICcnLCBhcnJheSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBk
YXRlKHRoaXMpOycpLCAnTmFtZScpLm4uCgkJCSR0aGlzLT5mSW5wdXQoJ3RleHQnLCAncHJl
Zml4JywgJycsIGFycmF5KCdrZXl1cCcgPT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7Jyks
ICdQcmVmaXgnKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3JlZ2V4JywgJycsIGFy
cmF5KCdrZXl1cCcgPT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7JyksICdSZWd1bGFyIEV4
cHJlc3Npb24nKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3N1ZmZpeCcsICcnLCBh
cnJheSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRlKHRoaXMpOycpLCAnU3VmZml4Jyku
bi4KCQkJJHRoaXMtPmZJbnB1dCgndGV4dCcsICd0ZXh0JywgJycsIGFycmF5KCdrZXl1cCcg
PT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7JyksICdUZXh0JykKCQkpOwoJCSRociA9ICc8
aHIgc3R5bGU9ImJvcmRlcjogMDsgaGVpZ2h0OiAxcHg7IGJhY2tncm91bmQtY29sb3I6IHJn
YigyMDAsIDIwMCwgMjAwKTsgY29sb3I6IHJnYigyMDAsIDIwMCwgMjAwKTsgbWFyZ2luLWJv
dHRvbTogMTBweDsiIC8+JzsKCQkkb3V0W10gPSAkaHI7CgkJJG91dFtdID0gJzwvZm9ybT4n
OwoKCQkvLyAtLS0gU2V0dGluZ3MgZm9ybSAtLS0gLy8KCgkJJG91dFtdID0gJzxmb3JtIGFj
dGlvbj0iaW5kZXgucGhwIiBtZXRob2Q9InBvc3QiIG5hbWU9IicuJHNldHRpbmdzX2Zvcm0u
JyIgb25zdWJtaXQ9InJldHVybiBzYXZlKHRoaXMpOyI+JzsKCgkJLy8gLS0tIFNldHRpbmdz
IC0tLSAvLwoKCQkkb3V0W10gPSBoZWQoJzxhIGhyZWY9IiMiIG9uY2xpY2s9InRvZ2dsZURp
c3BsYXkoXCdzZXR0aW5nc1wnKTsgcmV0dXJuIGZhbHNlOyI+U2V0dGluZ3M8L2E+JywgMik7
CgkJJG91dFtdID0gJzxkaXYgaWQ9InNldHRpbmdzIj4nOwoJCSRvdXRbXSA9IGdyYWYoJHRo
aXMtPmZJbnB1dCgndGV4dCcsICdwbF9uYW1lJywgJHBsX25hbWUsIE5VTEwsICdOYW1lJykp
OwoJCSRvdXRbXSA9IGdyYWYoJHRoaXMtPmZJbnB1dCgndGV4dCcsICdwbF9wcmVjZWRlbmNl
JywgJHBsX3ByZWNlZGVuY2UsIE5VTEwsICdQcmVjZWRlbmNlJykpOwoJCSRvdXRbXSA9ICc8
L2Rpdj4nOwoJCSRvdXRbXSA9ICRocjsKCgkJLy8gLS0tIENvbmRpdGlvbnMgLS0tIC8vCgoJ
CSRvdXRbXSA9IGhlZCgnPGEgaHJlZj0iIyIgb25jbGljaz0idG9nZ2xlRGlzcGxheShcJ2Nv
bmRpdGlvbnNcJyk7IHJldHVybiBmYWxzZTsiPkNvbmRpdGlvbnM8L2E+JywgMik7CgkJJG91
dFtdID0gJzxkaXYgaWQ9ImNvbmRpdGlvbnMiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPic7CgkJ
JG91dFtdID0gZ3JhZihzdHJvbmcoJ09ubHkgdXNlIHRoaXMgcGVybWFuZW50IGxpbmsgaWYg
dGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFwcGx5Li4uJykpOwoKCQkvLyBHZW5lcmF0ZSBh
IHNlY3Rpb25zIGFycmF5IChuYW1lPT50aXRsZSkKCQkkc2VjdGlvbnMgPSBhcnJheSgpOwoJ
CSRycyA9IHNhZmVfcm93cygnbmFtZSwgdGl0bGUnLCAndHhwX3NlY3Rpb24nLCAibmFtZSAh
PSAnZGVmYXVsdCcgb3JkZXIgYnkgbmFtZSIpOwoJCWZvcmVhY2ggKCRycyBhcyAkc2VjKSB7
CgkJCSRzZWN0aW9uc1skc2VjWyduYW1lJ11dID0gJHNlY1sndGl0bGUnXTsKCQl9CgoJCS8v
IEdlbmVyYXRlIGEgY2F0ZWdvcmllcyBhcnJheSAobmFtZT0+dGl0bGUpCgkJJGNhdGVnb3Jp
ZXMgPSBhcnJheSgpOwoJCSRycyA9IHNhZmVfcm93cygnbmFtZSwgdGl0bGUnLCAndHhwX2Nh
dGVnb3J5JywgInR5cGUgPSAnYXJ0aWNsZScgYW5kIG5hbWUgIT0gJ3Jvb3QnIG9yZGVyIGJ5
IG5hbWUiKTsKCQlmb3JlYWNoICgkcnMgYXMgJHNlYykgewoJCQkkY2F0ZWdvcmllc1skc2Vj
WyduYW1lJ11dID0gJHNlY1sndGl0bGUnXTsKCQl9CgoJCSRvdXRbXSA9IGdyYWYgKAoJCQkk
dGhpcy0+ZlNlbGVjdCgnY29uX3NlY3Rpb24nLCAkc2VjdGlvbnMsICRjb25fc2VjdGlvbiwg
MSwgJ1dpdGhpbiBzZWN0aW9uJykubi4KCQkJJHRoaXMtPmZTZWxlY3QoJ2Nvbl9jYXRlZ29y
eScsICRjYXRlZ29yaWVzLCAkY29uX2NhdGVnb3J5LCAxLCAnV2l0aGluIGNhdGVnb3J5JykK
CQkpOwoJCSRvdXRbXSA9ICc8L2Rpdj4nOwoJCSRvdXRbXSA9ICRocjsKCgkJLy8gLS0tIERl
c3RpbmF0aW9uIC0tLSAvLwoKCQkkb3V0W10gPSBoZWQoJzxhIGhyZWY9IiMiIG9uY2xpY2s9
InRvZ2dsZURpc3BsYXkoXCdkZXN0aW5hdGlvblwnKTsgcmV0dXJuIGZhbHNlOyI+RGVzdGlu
YXRpb248L2E+JywgMik7CgkJJG91dFtdID0gJzxkaXYgaWQ9ImRlc3RpbmF0aW9uIiBzdHls
ZT0iZGlzcGxheTpub25lIj4nOwoJCSRvdXRbXSA9IGdyYWYoc3Ryb25nKCdGb3J3YXJkIHRo
aXMgcGVybWFuZW50IGxpbmsgdG8uLi4nKSk7CgkJJG91dFtdID0gZ3JhZiAoCgkJCSR0aGlz
LT5mU2VsZWN0KCdkZXNfc2VjdGlvbicsICRzZWN0aW9ucywgJGRlc19zZWN0aW9uLCAxLCAn
U2VjdGlvbicpLm4uCgkJCSR0aGlzLT5mU2VsZWN0KCdkZXNfY2F0ZWdvcnknLCAkY2F0ZWdv
cmllcywgJGRlc19jYXRlZ29yeSwgMSwgJ0NhdGVnb3J5JykKCQkpOwoJCSRvdXRbXSA9IGdy
YWYoJHRoaXMtPmZTZWxlY3QoJ2Rlc19wYWdlJywgc2FmZV9jb2x1bW4oJ25hbWUnLCAndHhw
X3BhZ2UnLCAiMSIpLCBAJGRlc19wYWdlLCAxLCAnUGFnZScpKTsKCQkkb3V0W10gPSBncmFm
KCR0aGlzLT5mQm94ZXMoJ2Rlc19mZWVkJywgYXJyYXkoJ3JzcycsICdhdG9tJywgJycpLCAk
ZGVzX2ZlZWQsIE5VTEwsIGFycmF5KCdSU1MgZmVlZCcsICdBdG9tIGZlZWQnLCAnTmVpdGhl
cicpKSk7CgkJJG91dFtdID0gZ3JhZihzdHJvbmcoJ1JlZGlyZWN0IHRoaXMgcGVybWFuZW50
IGxpbmsgdG8uLi4nKSk7CgkJLy8gR2VuZXJhdGUgYSBwZXJtbGlua3MgYXJyYXkKCQkkcGVy
bWxpbmtzID0gJHRoaXMtPnBhcmVudC0+Z2V0X2FsbF9wZXJtbGlua3MoMSk7CgkJZm9yZWFj
aCAoJHBlcm1saW5rcyBhcyAka2V5ID0+ICRwbCkgewoJCQkkcGVybWxpbmtzWyRrZXldID0g
JHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ107CgkJfQoJCXVuc2V0KCRwZXJtbGlua3NbJGlk
XSk7CgkJJG91dFtdID0gZ3JhZigkdGhpcy0+ZlNlbGVjdCgnZGVzX3Blcm1saW5rJywgJHBl
cm1saW5rcywgQCRkZXNfcGVybWxpbmssIDEsICdQZXJtYW5lbnQgbGluaycpKTsKCQkkb3V0
W10gPSBncmFmKCR0aGlzLT5mSW5wdXQoJ3RleHQnLCAnZGVzX2xvY2F0aW9uJywgJGRlc19s
b2NhdGlvbiwgTlVMTCwgJ0hUVFAgbG9jYXRpb24nKSk7CgkJJG91dFtdID0gJzwvZGl2Pic7
CgkJJG91dFtdID0gJGhyOwoKCQkvLyBTYXZlIGJ1dHRvbgoJCSRvdXRbXSA9IGZJbnB1dCgn
c3VibWl0JywgJycsICdTYXZlIHBlcm1hbmVudCBsaW5rJyk7CgoJCS8vIEV4dHJhIGZvcm0g
aW5wdXRzIHdoaWNoIGdldCBmaWxsZWQgb24gc3VibWl0CgkJJG91dFtdID0gaElucHV0KCdj
b21wb25lbnRzJywgJycpOwoJCSRvdXRbXSA9IGhJbnB1dCgncGxfcHJldmlldycsICcnKTsK
CQkvLyBFdmVudCBhbmQgdGFiIGZvcm0gaW5wdXRzCgkJJG91dFtdID0gJHRoaXMtPmZvcm1f
aW5wdXRzKCk7CgkJLy8gU3RlcCBhbmQgSUQgZm9ybSBpbnB1dHMKCQkkb3V0W10gPSBzSW5w
dXQoJHN0ZXApOwoJCSRvdXRbXSA9IGhJbnB1dChnYnBfaWQsICRpZCk7CgoJCSRvdXRbXSA9
ICc8L2Zvcm0+JzsKCgkJLy8gTGV0cyBlY2hvIGV2ZXJ5dGhpbmcgb3V0LiBZYWghCgkJZWNo
byBqb2luKG4sICRvdXQpOwoJfQoKCWZ1bmN0aW9uIGZMYWJlbCAoJGxhYmVsLCAkY29udGVu
dHMgPSAnJywgJGxhYmVsX3JpZ2h0ID0gZmFsc2UpIHsKCQkvLyA8bGFiZWw+IHRoZSBjb250
ZW50cyB3aXRoIHRoZSBuYW1lICRsYWJsZQoJCSRjb250ZW50cyA9ICgkbGFiZWxfcmlnaHQp
CgkJPyAkY29udGVudHMuJGxhYmVsCgkJOiAkbGFiZWwuKCRjb250ZW50cyA/ICc6ICcuJGNv
bnRlbnRzIDogJycpOwoJCXJldHVybiB0YWcoJGNvbnRlbnRzLCAnbGFiZWwnKTsKCX0KCglm
dW5jdGlvbiBmQm94ZXMgKCRuYW1lID0gJycsICR2YWx1ZSA9ICcnLCAkY2hlY2tlZF92YWx1
ZSA9ICcnLCAkb24gPSBhcnJheSgpLCAkbGFiZWwgPSAnJykgewoJCSRvdXQgPSBhcnJheSgp
OwoJCWlmIChpc19hcnJheSgkdmFsdWUpKSB7CgkJCSRpID0gMDsKCQkJZm9yZWFjaCAoJHZh
bHVlIGFzICR2YWwpIHsKCQkJCSRvID0gJzxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0iJy4k
bmFtZS4nIiB2YWx1ZT0iJy4kdmFsLiciJzsKCQkJCSRvIC49ICgkY2hlY2tlZF92YWx1ZSA9
PSAkdmFsKSA/ICcgY2hlY2tlZD0iY2hlY2tlZCInIDogJyc7CgkJCQlpZiAoaXNfYXJyYXko
JG9uKSkgZm9yZWFjaCgkb24gYXMgJGsgPT4gJHYpCgkJCQkJJG8gLj0gKCRvbikgPyAnIG9u
Jy4kay4nPSInLiR2LiciJyA6ICcnOwoJCQkJJG8gLj0gJyAvPic7CgkJCQkkb3V0W10gPSAk
dGhpcy0+ZkxhYmVsKCRsYWJlbFskaSsrXSwgJG8sIHRydWUpOwoJCQl9CgkJfSBlbHNlIHsK
CQkJJG8gPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSInLiRuYW1lLiciIHZhbHVl
PSInLiR2YWx1ZS4nIic7CgkJCSRvIC49ICgkY2hlY2tlZF92YWx1ZSA9PSAkdmFsdWUpID8g
JyBjaGVja2VkPSJjaGVja2VkIicgOiAnJzsKCQkJaWYgKGlzX2FycmF5KCRvbikpIGZvcmVh
Y2goJG9uIGFzICRrID0+ICR2KQoJCQkJJG8gLj0gKCRvbikgPyAnIG9uJy4kay4nPSInLiR2
LiciJyA6ICcnOwoJCQkkbyAuPSAnIC8+JzsKCQkJJG91dFtdID0gJHRoaXMtPmZMYWJlbCgk
bGFiZWwsICRvLCB0cnVlKTsKCQl9CgoJCXJldHVybiBqb2luKCcnLCAkb3V0KTsKCX0KCglm
dW5jdGlvbiBmSW5wdXQgKCR0eXBlLCAkbmFtZSA9ICcnLCAkdmFsdWUgPSAnJywgJG9uID0g
YXJyYXkoKSwgJGxhYmVsID0gJycpIHsKCQlpZiAoJHR5cGUgPT0gJ3JhZGlvJyB8fCAkdHlw
ZSA9PSAnY2hlY2tib3gnKQoJCQlyZXR1cm4gJHRoaXMtPmZCb3hlcygkbmFtZSwgJHZhbHVl
LCAkb24sICRsYWJlbCk7CgoJCSRvID0gJzxpbnB1dCB0eXBlPSInLiR0eXBlLiciIG5hbWU9
IicuJG5hbWUuJyIgdmFsdWU9IicuJHZhbHVlLiciJzsKCQlpZiAoaXNfYXJyYXkoJG9uKSkg
Zm9yZWFjaCgkb24gYXMgJGsgPT4gJHYpCgkJCSRvIC49ICgkb24pID8gJyBvbicuJGsuJz0i
Jy4kdi4nIicgOiAnJzsKCQkkbyAuPSAnIC8+JzsKCQlyZXR1cm4gKCRsYWJlbCkgPyAkdGhp
cy0+ZkxhYmVsKCRsYWJlbCwgJG8pIDogJG87Cgl9CgoJZnVuY3Rpb24gZlNlbGVjdCAoJG5h
bWUgPSAnJywgJGFycmF5ID0gJycsICR2YWx1ZSA9ICcnLCAkYmxhbmtfZmlyc3QgPSAnJywg
JGxhYmVsID0gJycsICRvbl9zdWJtaXQgPSAnJykgewoJCSRvID0gc2VsZWN0SW5wdXQoJG5h
bWUsICRhcnJheSwgJHZhbHVlLCAkYmxhbmtfZmlyc3QsICRvbl9zdWJtaXQpOwoJCXJldHVy
biAoJGxhYmVsID8gJHRoaXMtPmZMYWJlbCgkbGFiZWwsICRvKSA6ICRvKTsKCX0KCglmdW5j
dGlvbiBwb3N0X3NhdmVfcGVybWxpbmsgKCkgewoJCS8vIFRoZSBmdW5jdGlvbiBwb3N0cyBv
ciBzYXZlcyBhIHBlcm1hbmVudCBsaW5rIHRvIHR4cF9wcmVmcwoKCQlleHRyYWN0KGdwc2Eo
YXJyYXkoJ3N0ZXAnLCBnYnBfaWQpKSk7CgoJCS8vIEdyYWIgdGhlIHVzZXIgZGVmaW5lZCBz
ZXR0aW5ncyBmcm9tIHRoZSBmb3JtIFBPU1QgZGF0YQoJCSRzZXR0aW5ncyA9IGdwc2EoYXJy
YXkoCgkJCSdwbF9uYW1lJywgJ3BsX3ByZWNlZGVuY2UnLCAncGxfcHJldmlldycsCgkJCSdj
b25fc2VjdGlvbicsICdjb25fY2F0ZWdvcnknLAoJCQknZGVzX3NlY3Rpb24nLCAnZGVzX2Nh
dGVnb3J5JywgJ2Rlc19wYWdlJywKCQkJJ2Rlc19wZXJtbGluaycsICdkZXNfZmVlZCcsICdk
ZXNfbG9jYXRpb24nLAoJCSkpOwoKCQkvLyBSZW1vdmUgc3BhY2VzIGZyb20gdGhlIHBlcm1h
bmVudCBsaW5rIHByZXZpZXcKCQkkc2V0dGluZ3NbJ3BsX3ByZXZpZXcnXSA9IHByZWdfcmVw
bGFjZSgnJVxzKy9ccyolJywgJy8nLCAkc2V0dGluZ3NbJ3BsX3ByZXZpZXcnXSk7CgoJCS8v
IEV4cGxvZGUgdGhlIHNlcGFyYXRlZCBzdHJpbmcgb2Ygc2VyaWFsaXplIGNvbXBvbmVudHMg
LSB0aGlzIHdhcyBtYWRlIGJ5IEphdmFTY3JpcHQuCgkJJHNlcmlhbGl6ZV9jb21wb25lbnRz
ID0gZXhwbG9kZShnYnBfc2VwYXJhdG9yLCBydHJpbShncHMoJ2NvbXBvbmVudHMnKSwgZ2Jw
X3NlcGFyYXRvcikpOwoKCQkvLyBVbnNlcmlhbGl6ZSB0aGUgY29tcG9uZW50cwoJCSRjb21w
b25lbnRzID0gYXJyYXkoKTsKCQlmb3JlYWNoICgkc2VyaWFsaXplX2NvbXBvbmVudHMgYXMg
JGMpCgkJCSRjb21wb25lbnRzW10gPSB1bnNlcmlhbGl6ZShzdHJpcHNsYXNoZXMoJGMpKTsK
CgkJLy8gQ29tcGxldGUgdGhlIHBlcm1hbmVudCBsaW5rIGFycmF5IC0gdGhpcyBpcyBleGFj
dGx5IHdoYXQgbmVlZHMgdG8gYmUgc3RvcmVkIGluIHRoZSBkYgoJCSRwZXJtbGluayA9IGFy
cmF5KCdzZXR0aW5ncycgPT4gJHNldHRpbmdzLCAnY29tcG9uZW50cycgPT4gJGNvbXBvbmVu
dHMpOwoKCQkvLyBTYXZlIGl0CgkJJHRoaXMtPnNldF9wcmVmZXJlbmNlKCRpZCwgJHBlcm1s
aW5rLCAnZ2JwX3NlcmlhbGl6ZWQnKTsKCgkJJHRoaXMtPnBhcmVudC0+bWVzc2FnZSA9IG1l
c3NlbmdlcignJywgJHNldHRpbmdzWydwbF9uYW1lJ10sICdzYXZlZCcpOwoJfQoKCWZ1bmN0
aW9uIHBocEFycmF5VG9Kc0FycmF5ICgkbmFtZSwgJGFycmF5KSB7CgkJLy8gRnJvbSBQSFAu
bmV0CgkJaWYgKGlzX2FycmF5KCRhcnJheSkpIHsKCQkJJHJlc3VsdCA9ICRuYW1lLicgPSBu
ZXcgQXJyYXkoKTsnLm47CgkJCWZvcmVhY2ggKCRhcnJheSBhcyAka2V5ID0+ICR2YWx1ZSkK
CQkJCSRyZXN1bHQgLj0gJHRoaXMtPnBocEFycmF5VG9Kc0FycmF5KCRuYW1lLidbXCcnLiRr
ZXkuJ1wnXScsJHZhbHVlLCcnKS5uOwoJCX0gZWxzZSB7CgkJCSRyZXN1bHQgPSAkbmFtZS4n
ID0gXCcnLiRhcnJheS4nXCc7JzsKCQl9CgkJcmV0dXJuICRyZXN1bHQ7Cgl9Cn0KCmNsYXNz
IFBlcm1hbmVudExpbmtzTGlzdFRhYlZpZXcgZXh0ZW5kcyBHQlBBZG1pblRhYlZpZXcKewoJ
dmFyICRwZXJtaXNzaW9ucyA9ICcxLDInOwoJZnVuY3Rpb24gcHJlbG9hZCAoKSB7CgkJcmVn
aXN0ZXJfY2FsbGJhY2soYXJyYXkoJiR0aGlzLCAkdGhpcy0+cGFyZW50LT5ldmVudC4nX211
bHRpX2VkaXQnKSwgJHRoaXMtPnBhcmVudC0+ZXZlbnQsICR0aGlzLT5wYXJlbnQtPmV2ZW50
LidfbXVsdGlfZWRpdCcsIDEpOwoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhpcywg
JHRoaXMtPnBhcmVudC0+ZXZlbnQuJ19jaGFuZ2VfcGFnZWJ5JyksICR0aGlzLT5wYXJlbnQt
PmV2ZW50LCAkdGhpcy0+cGFyZW50LT5ldmVudC4nX2NoYW5nZV9wYWdlYnknLCAxKTsKCX0K
CglmdW5jdGlvbiBtYWluICgpIHsKCQlleHRyYWN0KGdwc2EoYXJyYXkoJ3BhZ2UnLCAnc29y
dCcsICdkaXInLCAnY3JpdCcsICdzZWFyY2hfbWV0aG9kJykpKTsKCgkJJGV2ZW50ID0gJHRo
aXMtPnBhcmVudC0+ZXZlbnQ7CgoJCSRwZXJtbGlua3MgPSAkdGhpcy0+cGFyZW50LT5nZXRf
YWxsX3Blcm1saW5rcygpOwoJCSR0b3RhbCA9IGNvdW50KCRwZXJtbGlua3MpOwoKCQlpZiAo
JHRvdGFsIDwgMSkgewoJCQllY2hvIGdyYWYoJ1lvdSBoYXZlblwndCBjcmVhdGVkIGFueSBj
dXN0b20gcGVybWFuZW50IGxpbmtzIHJ1bGVzIHlldC4nLCAnIHN0eWxlPSJ0ZXh0LWFsaWdu
OiBjZW50ZXI7IicpLgoJCQkJIGdyYWYoJzxhIGhyZWY9IicuJHRoaXMtPnVybChhcnJheShn
YnBfdGFiID0+ICdidWlsZCcpLCB0cnVlKS4nIj5DbGljayBoZXJlPC9hPiB0byBhZGQgb25l
LicsICcgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiJyk7CgkJCXJldHVybjsKCQl9CgoJ
CSRsaW1pdCA9IG1heCgkdGhpcy0+cHJlZignbGlzdF9wYWdlYnknKSwgMTUpOwoKCQlsaXN0
KCRwYWdlLCAkb2Zmc2V0LCAkbnVtUGFnZXMpID0gJHRoaXMtPnBhZ2VyKCR0b3RhbCwgJGxp
bWl0LCAkcGFnZSk7CgoJCWlmIChlbXB0eSgkc29ydCkpCgkJCSRzb3J0ID0gJ3BsX3ByZWNl
ZGVuY2UnOwoKCQlpZiAoZW1wdHkoJGRpcikpCgkJCSRkaXIgPSAnZGVzYyc7CgoJCSRkaXIg
PSAoJGRpciA9PSAnZGVzYycpID8gJ2Rlc2MnIDogJ2FzYyc7CgoJCS8vIFNvcnQgdGhlIHBl
cm1saW5rcyB2aWEgdGhlIHNlbGVjdGVkIGNvbHVtbiBhbmQgdGhlbiB0aGVpciBuYW1lcy4K
CQlmb3JlYWNoICgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGVybWxpbmspIHsKCQkJJHNvcnRf
a2V5c1skaWRdID0gJHBlcm1saW5rWydzZXR0aW5ncyddWyRzb3J0XTsKCQkJJG5hbWVbJGlk
XSA9ICRwZXJtbGlua1snc2V0dGluZ3MnXVsncGxfbmFtZSddOwoJCX0KCQlhcnJheV9tdWx0
aXNvcnQoJHNvcnRfa2V5cywgKCgkZGlyID09ICdkZXNjJykgPyBTT1JUX0RFU0MgOiBTT1JU
X0FTQyksICRuYW1lLCBTT1JUX0FTQywgJHBlcm1saW5rcyk7CgoJCSRzd2l0Y2hfZGlyID0g
KCRkaXIgPT0gJ2Rlc2MnKSA/ICdhc2MnIDogJ2Rlc2MnOwoKCQkkcGVybWxpbmtzID0gYXJy
YXlfc2xpY2UoJHBlcm1saW5rcywgJG9mZnNldCwgJGxpbWl0KTsKCgkJaWYgKGNvdW50KCRw
ZXJtbGlua3MpKSB7CgkJCWVjaG8gbi5uLic8Zm9ybSBuYW1lPSJsb25nZm9ybSIgbWV0aG9k
PSJwb3N0IiBhY3Rpb249ImluZGV4LnBocCIgb25zdWJtaXQ9InJldHVybiB2ZXJpZnkoXCcn
LmdUeHQoJ2FyZV95b3Vfc3VyZScpLidcJykiPicuCgoJCQkJbi5zdGFydFRhYmxlKCdsaXN0
JykuCgkJCQluLnRyKAoJCQkJCW4uY29sdW1uX2hlYWQoJ25hbWUnLCAncGxfbmFtZScsICRl
dmVudCwgdHJ1ZSwgJHN3aXRjaF9kaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCkuCgkJCQkJ
aENlbGwoKS4KCQkJCQljb2x1bW5faGVhZCgncHJldmlldycsICdwbF9wcmV2aWV3JywgJGV2
ZW50LCB0cnVlLCAkc3dpdGNoX2RpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKS4KCQkJCQlj
b2x1bW5faGVhZCgncHJlY2VkZW5jZScsICdwbF9wcmVjZWRlbmNlJywgJGV2ZW50LCB0cnVl
LCAkc3dpdGNoX2RpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKS4KCQkJCQloQ2VsbCgpCgkJ
CQkpOwoKCQkJaW5jbHVkZV9vbmNlIHR4cGF0aC4nL3B1Ymxpc2gvdGFnaGFuZGxlcnMucGhw
JzsKCgkJCWZvcmVhY2ggKCRwZXJtbGlua3MgYXMgJGlkID0+ICRwZXJtbGluaykgewoJCQkJ
ZXh0cmFjdCgkcGVybWxpbmtbJ3NldHRpbmdzJ10pOwoKCQkJCSRtYW5hZ2UgPSBuLic8dWwn
Lih2ZXJzaW9uX2NvbXBhcmUoJEdMT0JBTFNbJ3RoaXN2ZXJzaW9uJ10sICc0LjAuMycsICc8
PScpID8gJyBzdHlsZT0ibWFyZ2luOjA7cGFkZGluZzowO2xpc3Qtc3R5bGUtdHlwZTpub25l
OyI+JyA6ICc+JykuCgkJCQkJCW4udC4nPGxpPicuaHJlZihnVHh0KCdlZGl0JyksICR0aGlz
LT51cmwoYXJyYXkoZ2JwX3RhYiA9PiAnYnVpbGQnLCBnYnBfaWQgPT4gJGlkKSwgdHJ1ZSkp
Lic8L2xpPicuCgkJCQkJCW4uJzwvdWw+JzsKCgkJCQllY2hvIG4ubi50cigKCgkJCQkJdGQo
CgkJCQkJCWhyZWYoJHBsX25hbWUsICR0aGlzLT51cmwoYXJyYXkoZ2JwX3RhYiA9PiAnYnVp
bGQnLCBnYnBfaWQgPT4gJGlkKSwgdHJ1ZSkpCgkJCQkJLCA3NSkuCgoJCQkJCXRkKCRtYW5h
Z2UsIDM1KS4KCgkJCQkJdGQoJHBsX3ByZXZpZXcsIDE3NSkuCgkJCQkJdGQoJHBsX3ByZWNl
ZGVuY2UuJyZuYnNwOycsIDUwKS4KCgkJCQkJdGQoCgkJCQkJCWZJbnB1dCgnY2hlY2tib3gn
LCAnc2VsZWN0ZWRbXScsICRpZCkKCQkJCQkpCgkJCQkpOwoJCQl9CgoJCQllY2hvIG4ubi50
cigKCQkJCXRkYSgKCQkJCQlzZWxlY3RfYnV0dG9ucygpLgoJCQkJCSR0aGlzLT5wZXJtbGlu
a3NfbXVsdGllZGl0X2Zvcm0oJHBhZ2UsICRzb3J0LCAkZGlyLCAkY3JpdCwgJHNlYXJjaF9t
ZXRob2QpCgkJCQksJyBjb2xzcGFuPSI0IiBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQ7IGJv
cmRlcjogbm9uZTsiJykKCQkJKS4KCgkJCW4uZW5kVGFibGUoKS4KCQkJbi4nPC9mb3JtPicu
CgoJCQluLiR0aGlzLT5uYXZfZm9ybSgkZXZlbnQsICRwYWdlLCAkbnVtUGFnZXMsICRzb3J0
LCAkZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2QpLgoKCQkJbi5wYWdlYnlfZm9ybSgkZXZl
bnQsICR0aGlzLT5wcmVmKCdsaXN0X3BhZ2VieScpKTsKCQl9Cgl9CgoJZnVuY3Rpb24gcGFn
ZXIgKCR0b3RhbCwgJGxpbWl0LCAkcGFnZSkgewoJCWlmIChmdW5jdGlvbl9leGlzdHMoJ3Bh
Z2VyJykpCgkJCXJldHVybiBwYWdlcigkdG90YWwsICRsaW1pdCwgJHBhZ2UpOwoKCQkvLyBU
aGlzIGlzIHRha2VuIGZyb20gdHhwbGliX21pc2MucGhwIHIxNTg4IGl0IGlzIHJlcXVpcmVk
IGZvciA0LjAuMyBjb21wYXRpYml0bHkKCQkkbnVtX3BhZ2VzID0gY2VpbCgkdG90YWwgLyAk
bGltaXQpOwoJCSRwYWdlID0gJHBhZ2UgPyAoaW50KSAkcGFnZSA6IDE7CgkJJHBhZ2UgPSBt
aW4obWF4KCRwYWdlLCAxKSwgJG51bV9wYWdlcyk7CgkJJG9mZnNldCA9IG1heCgoJHBhZ2Ug
LSAxKSAqICRsaW1pdCwgMCk7CgkJcmV0dXJuIGFycmF5KCRwYWdlLCAkb2Zmc2V0LCAkbnVt
X3BhZ2VzKTsKCX0KCglmdW5jdGlvbiBuYXZfZm9ybSAoJGV2ZW50LCAkcGFnZSwgJG51bVBh
Z2VzLCAkc29ydCwgJGRpciwgJGNyaXQsICRtZXRob2QpIHsKCQlpZiAoZnVuY3Rpb25fZXhp
c3RzKCduYXZfZm9ybScpKQoJCQlyZXR1cm4gbmF2X2Zvcm0oJGV2ZW50LCAkcGFnZSwgJG51
bVBhZ2VzLCAkc29ydCwgJGRpciwgJGNyaXQsICRtZXRob2QpOwoKCQkvLyBUaGlzIGlzIGJh
c2ljYWxseSBzdG9sZW4gZnJvbSB0aGUgNC4wLjMgdmVyc2lvbiBvZiBpbmNsdWRlcy90eHBf
bGlzdC5waHAKCQkvLyAtIGxpc3RfbmF2X2Zvcm0oKSBmb3IgNC4wLjMgY29tcGF0aWJpdGx5
CgkJJG5hdltdID0gKCRwYWdlID4gMSkKCQkJPyBQcmV2TmV4dExpbmsoJGV2ZW50LCAkcGFn
ZS0xLCBnVHh0KCdwcmV2JyksICdwcmV2JywgJHNvcnQsICRkaXIpIDogJyc7CgkJJG5hdltd
ID0gc3Auc21hbGwoJHBhZ2UuICcvJy4kbnVtUGFnZXMpLnNwOwoJCSRuYXZbXSA9ICgkcGFn
ZSAhPSAkbnVtUGFnZXMpCgkJCT8gUHJldk5leHRMaW5rKCRldmVudCwgJHBhZ2UrMSwgZ1R4
dCgnbmV4dCcpLCAnbmV4dCcsICRzb3J0LCAkZGlyKSA6ICcnOwoJCXJldHVybiAoJG5hdikK
CQkJPyBncmFmKGpvaW4oJycsICRuYXYpLCAnIGFsaWduPSJjZW50ZXIiJykgOiAnJzsKCX0K
CglmdW5jdGlvbiBwZXJtbGlua3NfbXVsdGllZGl0X2Zvcm0gKCRwYWdlLCAkc29ydCwgJGRp
ciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKSB7CgkJJG1ldGhvZHMgPSBhcnJheSgKCQkJJ2Rl
bGV0ZScgPT4gZ1R4dCgnZGVsZXRlJyksCgkJKTsKCgkJcmV0dXJuIGV2ZW50X211bHRpZWRp
dF9mb3JtKCR0aGlzLT5wYXJlbnQtPmV2ZW50LCAkbWV0aG9kcywgJHBhZ2UsICRzb3J0LCAk
ZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2QpOwoJfQoKCWZ1bmN0aW9uIHBlcm1saW5rc19j
aGFuZ2VfcGFnZWJ5ICgpIHsKCQkkdGhpcy0+c2V0X3ByZWZlcmVuY2UoJ2xpc3RfcGFnZWJ5
JywgZ3BzKCdxdHknKSk7Cgl9CgoJZnVuY3Rpb24gcGVybWxpbmtzX211bHRpX2VkaXQgKCkg
ewoJCSRtZXRob2QgPSBncHMoJ2VkaXRfbWV0aG9kJykKCQkJPyBncHMoJ2VkaXRfbWV0aG9k
JykgLy8gRnJvbSBUeHAgNC4wLjQgYW5kIGdyZWF0ZXIKCQkJOiBncHMoJ21ldGhvZCcpOyAv
LyBVcCB0byBUeHAgNC4wLjMKCgkJc3dpdGNoICgkbWV0aG9kKSB7CgkJCWNhc2UgJ2RlbGV0
ZSc6CgkJCQlmb3JlYWNoIChncHMoJ3NlbGVjdGVkJykgYXMgJGlkKSB7CgkJCQkJCQkkZGVs
ZXRlZFtdID0gJHRoaXMtPnBhcmVudC0+cmVtb3ZlX3Blcm1saW5rKCRpZCk7CgkJCQl9CgkJ
CWJyZWFrOwoJCX0KCgkJJHRoaXMtPnBhcmVudC0+bWVzc2FnZSA9IChpc3NldCgkZGVsZXRl
ZCkgJiYgaXNfYXJyYXkoJGRlbGV0ZWQpICYmIGNvdW50KCRkZWxldGVkKSkKCQkJPyBtZXNz
ZW5nZXIoJycsIGpvaW4oJywgJywgJGRlbGV0ZWQpICwnZGVsZXRlZCcpCgkJCTogbWVzc2Vu
Z2VyKCdhbiBlcnJvciBvY2N1cnJlZCcsICcnLCAnJyk7Cgl9Cn0KCmdsb2JhbCAkZ2JwX3Bs
OwokZ2JwX3BsID0gbmV3IFBlcm1hbmVudExpbmtzKCdQZXJtYW5lbnQgTGlua3MnLCAncGVy
bWxpbmtzJywgJ2FkbWluJyk7CmlmIChAdHhwaW50ZXJmYWNlID09ICdwdWJsaWMnKSB7Cgly
ZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJGdicF9wbCwgJ19mZWVkX2VudHJ5JyksICdyc3Nf
ZW50cnknKTsKCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkZ2JwX3BsLCAnX2ZlZWRfZW50
cnknKSwgJ2F0b21fZW50cnknKTsKCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkZ2JwX3Bs
LCAnX3RleHRwYXR0ZXJuJyksICd0ZXh0cGF0dGVybicpOwoJcmVnaXN0ZXJfY2FsbGJhY2so
YXJyYXkoJiRnYnBfcGwsICdfdGV4dHBhdHRlcm5fZW5kJyksICd0ZXh0cGF0dGVybl9lbmQn
KTsKCglmdW5jdGlvbiBnYnBfaWZfcmVnZXggKCRhdHRzLCAkdGhpbmcpIHsKCQlnbG9iYWwg
JHByZXRleHQ7CgkJZXh0cmFjdChsQXR0cyhhcnJheSgKCQkJJ25hbWUnID0+ICcnLAoJCQkn
dmFsJyAgPT4gJycsCgkJKSwkYXR0cykpOwoJCSRtYXRjaCA9IChAJHByZXRleHRbInBlcm1s
aW5rX3JlZ2V4X3skbmFtZX0iXSA9PSAkdmFsKTsKCQlyZXR1cm4gcGFyc2UoRXZhbEVsc2Uo
JHRoaW5nLCAkbWF0Y2gpKTsKCX0KCglmdW5jdGlvbiBnYnBfaWZfdGV4dCAoJGF0dHMsICR0
aGluZykgewoJCWdsb2JhbCAkcHJldGV4dDsKCQlleHRyYWN0KGxBdHRzKGFycmF5KAoJCQkn
bmFtZScgPT4gJycsCgkJCSd2YWwnICA9PiAnJywKCQkpLCRhdHRzKSk7CgoJCSRtYXRjaCA9
IGZhbHNlOwoJCWlmICghZW1wdHkoJG5hbWUpKSB7CgkJCWlmIChlbXB0eSgkdmFsKSkKCQkJ
CSRtYXRjaCA9IChpc3NldCgkcHJldGV4dFsicGVybWxpbmtfdGV4dF97JG5hbWV9Il0pKTsK
CQkJZWxzZQoJCQkJJG1hdGNoID0gKEAkcHJldGV4dFsicGVybWxpbmtfdGV4dF97JG5hbWV9
Il0gPT0gJHZhbCk7CgkJfQoJCXJldHVybiBwYXJzZShFdmFsRWxzZSgkdGhpbmcsICRtYXRj
aCkpOwoJfQoKCWZ1bmN0aW9uIGdicF91c2VfcGFnZWxpbmsgKCRhdHRzLCAkdGhpbmcgPSAn
JykgewoJCWdsb2JhbCAkZ2JwX3BsOwoJCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkJCSdydWxl
JyA9PiAnJywKCQkpLCRhdHRzKSk7CgkJcmV0dXJuICRnYnBfcGwtPl90ZXh0cGF0dGVybl9l
bmRfY2FsbGJhY2socGFyc2UoJHRoaW5nKSwgJHJ1bGUpOwoJfQoKCWZ1bmN0aW9uIGdicF9k
aXNhYmxlX3Blcm1saW5rcyAoJGF0dHMsICR0aGluZyA9ICcnKSB7CgkJZ2xvYmFsICRnYnBf
cGw7CgkJcmV0dXJuICRnYnBfcGwtPnRvZ2dsZV9wZXJtbGlua19tb2RlKCdwYXJzZScsICR0
aGluZyk7Cgl9Cn0KIjtzOjM6Im1kNSI7czozMjoiNzU1NzYzMzlhMjNiZGY4MmFkMTFjNzVl
YjQ0NDVjYjMiO30=
