# gbp_permanent_links_jrw v0.14_jrw
# Custom permanent links rules
# Graeme Porteous, modified by Jeffrey Woldan
# http://rgbp.co.uk/projects/textpattern/gbp_permanent_links/

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YTo5OntzOjQ6Im5hbWUiO3M6MjM6ImdicF9wZXJtYW5lbnRfbGlua3NfanJ3IjtzOjc6InZl
cnNpb24iO3M6ODoiMC4xNF9qcnciO3M6NjoiYXV0aG9yIjtzOjQzOiJHcmFlbWUgUG9ydGVv
dXMsIG1vZGlmaWVkIGJ5IEplZmZyZXkgV29sZGFuIjtzOjEwOiJhdXRob3JfdXJpIjtzOjU5
OiJodHRwOi8vcmdicC5jby51ay9wcm9qZWN0cy90ZXh0cGF0dGVybi9nYnBfcGVybWFuZW50
X2xpbmtzLyI7czoxMToiZGVzY3JpcHRpb24iO3M6Mjg6IkN1c3RvbSBwZXJtYW5lbnQgbGlu
a3MgcnVsZXMiO3M6NDoidHlwZSI7czoxOiIxIjtzOjQ6ImhlbHAiO3M6MTUxOiJoMS4gZ2Jw
X3Blcm1hbmVudF9saW5rcy4KClRoZXJlIGlzIG5vIHBsdWdpbiBkb2N1bWVudGF0aW9uLiBG
b3IgaGVscCBwbGVhc2UgdXNlIHRoZSAiZm9ydW0gdGhyZWFkIjpodHRwOi8vZm9ydW0udGV4
dHBhdHRlcm4uY29tL3ZpZXd0b3BpYy5waHA/aWQ9MTg5MTguIjtzOjQ6ImNvZGUiO3M6Njc3
ODE6IgovLyBDb25zdGFudHMKQGRlZmluZSgnZ2JwX3NhdmUnLCAnc2F2ZScpOwpAZGVmaW5l
KCdnYnBfcG9zdCcsICdwb3N0Jyk7CkBkZWZpbmUoJ2dicF9zZXBhcmF0b3InLCAnJn4mfiYn
KTsKCi8vIHJlcXVpcmVfcGx1Z2luKCkgd2lsbCByZXNldCB0aGUgJHR4cF9jdXJyZW50X3Bs
dWdpbiBnbG9iYWwKZ2xvYmFsICR0eHBfY3VycmVudF9wbHVnaW47CiRnYnBfY3VycmVudF9w
bHVnaW4gPSAkdHhwX2N1cnJlbnRfcGx1Z2luOwpyZXF1aXJlX3BsdWdpbignZ2JwX2FkbWlu
X2xpYnJhcnknKTsKJHR4cF9jdXJyZW50X3BsdWdpbiA9ICRnYnBfY3VycmVudF9wbHVnaW47
CgpjbGFzcyBQZXJtYW5lbnRMaW5rcyBleHRlbmRzIEdCUFBsdWdpbgp7Cgl2YXIgJHBlcm1p
c3Npb25zID0gJzEsMic7Cgl2YXIgJHByZWZlcmVuY2VzID0gYXJyYXkoCgkJJ3Nob3dfcHJl
Zml4JyA9PiBhcnJheSgndmFsdWUnID0+IDAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJ
CSdzaG93X3N1ZmZpeCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwLCAndHlwZScgPT4gJ3llc25v
cmFkaW8nKSwKCQknb21pdF90cmFpbGluZ19zbGFzaCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAw
ICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3JlZGlyZWN0X210X3N0eWxlX2xpbmtz
JyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQkn
Y2xlYW5fcGFnZV9hcmNoaXZlX2xpbmtzJyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlw
ZScgPT4gJ3llc25vcmFkaW8nKSwKCQknam9pbl9wcmV0ZXh0X3RvX3BhZ2VsaW5rcycgPT4g
YXJyYXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2NoZWNr
X3ByZXRleHRfY2F0ZWdvcnlfY29udGV4dCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwICwgJ3R5
cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2NoZWNrX3ByZXRleHRfc2VjdGlvbl9jb250ZXh0
JyA9PiBhcnJheSgndmFsdWUnID0+IDAgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQkn
Zm9yY2VfbG93ZXJjYXNlX3VybHMnID0+IGFycmF5KCd2YWx1ZScgPT4gMSAsICd0eXBlJyA9
PiAneWVzbm9yYWRpbycpLAoJCSdhdXRvbWF0aWNhbGx5X2FwcGVuZF90aXRsZScgPT4gYXJy
YXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3Blcm1saW5r
X3JlZGlyZWN0X2h0dHBfc3RhdHVzJyA9PiBhcnJheSgndmFsdWUnID0+ICczMDEnICwgJ3R5
cGUnID0+ICd0ZXh0X2lucHV0JyksCgkJJ3VybF9yZWRpcmVjdF9odHRwX3N0YXR1cycgPT4g
YXJyYXkoJ3ZhbHVlJyA9PiAnMzAyJyAsICd0eXBlJyA9PiAndGV4dF9pbnB1dCcpLAoJCSd0
ZXh0X2FuZF9yZWdleF9zZWdtZW50X3Njb3JlcycgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAnMCcg
LCAndHlwZScgPT4gJ3RleHRfaW5wdXQnKSwKCQknZGVidWcnID0+IGFycmF5KCd2YWx1ZScg
PT4gMCwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkpOwoJdmFyICRtYXRjaGVkX3Blcm1s
aW5rID0gYXJyYXkoKTsKCXZhciAkcGFydGlhbF9tYXRjaGVzID0gYXJyYXkoKTsKCXZhciAk
Y2xlYXZlcl9wYXJ0aWFsX21hdGNoOwoJdmFyICRidWZmZXJfZGVidWcgPSBhcnJheSgpOwoK
CWZ1bmN0aW9uIHByZWxvYWQgKCkgewoJCW5ldyBQZXJtYW5lbnRMaW5rc0xpc3RUYWJWaWV3
KCdsaXN0JywgJ2xpc3QnLCAkdGhpcyk7CgkJbmV3IFBlcm1hbmVudExpbmtzQnVpbGRUYWJW
aWV3KCdidWlsZCcsICdidWlsZCcsICR0aGlzKTsKCQluZXcgR0JQUHJlZmVyZW5jZVRhYlZp
ZXcoJHRoaXMpOwoJfQoKCWZ1bmN0aW9uIG1haW4gKCkgewoJCXJlcXVpcmVfcHJpdnMoJHRo
aXMtPmV2ZW50KTsKCX0KCglmdW5jdGlvbiBnZXRfYWxsX3Blcm1saW5rcyAoJHNvcnQgPSAw
LCAkZXhjbHVkZSA9IGFycmF5KCkpIHsKCQlzdGF0aWMgJHJzOwoJCWlmICghaXNzZXQoJHJz
KSkKCQkJJHJzID0gc2FmZV9jb2x1bW4oCgkJCQkiUkVQTEFDRShuYW1lLCAneyR0aGlzLT5w
bHVnaW5fbmFtZX1fJywgJycpIEFTIGlkIiwgJ3R4cF9wcmVmcycsCgkJCQkiYGV2ZW50YCA9
ICd7JHRoaXMtPmV2ZW50fScgQU5EIGBuYW1lYCBSRUdFWFAgJ157JHRoaXMtPnBsdWdpbl9u
YW1lfV8uezEzfSQnIgoJCQkpOwoKCQlpZiAoQHR4cGludGVyZmFjZSA9PSAncHVibGljJykK
CQkJJHRoaXMtPmRlYnVnKCdMb2FkaW5nIHBlcm1saW5rcyBmcm9tIGRiJyk7CgkJJGkgPSAw
OwoKCQkkcGVybWxpbmtzID0gYXJyYXkoKTsKCQlmb3JlYWNoICgkcnMgYXMgJGlkKSB7CgkJ
CSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJGlkKTsKCgkJCWlmIChjb3VudCgkZXhjbHVk
ZSkgPiAwKQoJCQkJZm9yZWFjaCAoJHBsWydjb21wb25lbnRzJ10gYXMgJHBsX2MpIHsKCQkJ
CQlpZiAoaXNfYXJyYXkoJGV4Y2x1ZGUpICYmIGluX2FycmF5KCRwbF9jWyd0eXBlJ10sICRl
eGNsdWRlKSkKCQkJCQkJY29udGludWUgMjsKCQkJCQlpZiAoaXNfc3RyaW5nKCRleGNsdWRl
KSAmJiAkcGxfY1sndHlwZSddID09PSAkZXhjbHVkZSkKCQkJCQkJY29udGludWUgMjsKCQkJ
CX0KCgkJCSRwZXJtbGlua3NbJGlkXSA9ICRwbDsKCgkJCWlmICgkc29ydCkKCQkJCSRwcmVj
ZWRlbmNlWyRpZF0gPSAkcGVybWxpbmtzWyRpZF1bJ3NldHRpbmdzJ11bJ3BsX3ByZWNlZGVu
Y2UnXTsKCQl9CgoJCS8vIElmIG1vcmUgdGhhbiBvbmUgcGVybWFuZW50IGxpbmssIHNvcnQg
YnkgdGhlaXIgcHJlY2VkZW5jZSB2YWx1ZS4KCQlpZiAoJHNvcnQgJiYgY291bnQoJHBlcm1s
aW5rcykgPiAxKQoJCQlhcnJheV9tdWx0aXNvcnQoJHByZWNlZGVuY2UsIFNPUlRfREVTQywg
JHBlcm1saW5rcyk7CgoJCWlmIChAdHhwaW50ZXJmYWNlID09ICdwdWJsaWMnKSB7CgkJCWZv
cmVhY2ggKCRwZXJtbGlua3MgYXMgJHBsKQoJCQkJJHRoaXMtPmRlYnVnKCRwbFsnc2V0dGlu
Z3MnXVsncGxfcHJlY2VkZW5jZSddLic6ICcuJHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ10u
JyAoJy4kcGxbJ3NldHRpbmdzJ11bJ3BsX3ByZXZpZXcnXS4nKScpOwoJCX0KCgkJcmV0dXJu
ICRwZXJtbGlua3M7Cgl9CgoJZnVuY3Rpb24gZ2V0X3Blcm1saW5rICgkaWQpIHsKCQkkcGVy
bWxpbmsgPSAkdGhpcy0+cHJlZigkaWQpOwoJCXJldHVybiBpc19hcnJheSgkcGVybWxpbmsp
ID8gJHBlcm1saW5rIDogYXJyYXkoKTsKCX0KCglmdW5jdGlvbiByZW1vdmVfcGVybWxpbmsg
KCRpZCkgewoJCSRwZXJtbGluayA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJGlkKTsKCQlzYWZl
X2RlbGV0ZSgndHhwX3ByZWZzJywgImBldmVudGAgPSAneyR0aGlzLT5ldmVudH0nIEFORCBg
bmFtZWAgTElLRSAneyR0aGlzLT5wbHVnaW5fbmFtZX1feyRpZH0lJyIpOwoJCXJldHVybiAk
cGVybWxpbmtbJ3NldHRpbmdzJ11bJ3BsX25hbWUnXTsKCX0KCglmdW5jdGlvbiBfZmVlZF9l
bnRyeSAoKSB7CgkJc3RhdGljICRzZXQ7CgkJaWYgKCFpc3NldCgkc2V0KSkgewoJCQkvLyBX
ZSdyZSBpbiBhIGZlZWQgZm9yY2UgZGVidWdnaW5nIG9mZi4KCQkJJHRoaXMtPnByZWZlcmVu
Y2VzWydkZWJ1ZyddWyd2YWx1ZSddID0gJEdMT0JBTFNbJ3ByZWZzJ11bJHRoaXMtPnBsdWdp
bl9uYW1lLidfZGVidWcnXSA9IDA7CgoJCQkkdGhpcy0+c2V0X3Blcm1saW5rX21vZGUodHJ1
ZSk7CgkJCSRzZXQgPSB0cnVlOwoJCX0KCX0KCglmdW5jdGlvbiBfdGV4dHBhdHRlcm4gKCkg
ewoJCWdsb2JhbCAkcGx1Z2luc192ZXIsICRwcmV0ZXh0LCAkcHJlZnMsICRwbHVnaW5fY2Fs
bGJhY2s7CgoJCSR0aGlzLT5kZWJ1ZygnUGx1Z2luOiAnLiR0aGlzLT5wbHVnaW5fbmFtZS4n
IC0gJy4kcGx1Z2luc192ZXJbJHRoaXMtPnBsdWdpbl9uYW1lXSk7CgkJJHRoaXMtPmRlYnVn
KCdGdW5jdGlvbjogJy5fX0ZVTkNUSU9OX18uJygpJyk7CgoJCS8vIFVSSQoJCSRyZXEgPSAk
cHJldGV4dFsncmVxJ107CgkJJHJlcSA9IHByZWdfcmVwbGFjZSgnJVw/W15cL10rJCUnLCAn
JywgJHJlcSk7CgkJJHRoaXMtPmRlYnVnKCdSZXF1ZXN0IFVSSTogJy4kcmVxKTsKCQkkdXJp
ID0gZXhwbG9kZSgnLycsIHRyaW0oJHJlcSwgJy8nKSk7CgoJCS8vIFRoZSBudW1iZXIgb2Yg
Y29tcG9uZW50cyBjb21lcyBpbiB1c2VmdWwgd2hlbiBkZXRlcm1pbmluZyB0aGUgYmVzdCBw
YXJ0aWFsIG1hdGNoLgoJCSR1cmlfY29tcG9uZW50X2NvdW50ID0gY291bnQoJHVyaSk7CgoJ
CS8vIFBlcm1hbmVudCBsaW5rcwoJCSRwZXJtbGlua3MgPSAkdGhpcy0+Z2V0X2FsbF9wZXJt
bGlua3MoMSk7CgoJCS8vIEZvcmNlIFRleHRwYXR0ZXJuIGFuZCB0YWdzIHRvIHVzZSBtZXNz
eSBVUkxzIC0gdGhlc2UgYXJlIGVhc2llciB0bwoJCS8vIGZpbmQgaW4gcmVnZXgKCQkkdGhp
cy0+c2V0X3Blcm1saW5rX21vZGUoKTsKCgkJaWYgKGNvdW50KCRwZXJtbGlua3MpKSB7CgoJ
CQkvLyBXZSBhbHNvIHdhbnQgdG8gbWF0Y2ggdGhlIGZyb250IHBhZ2Ugb2YgdGhlIHNpdGUg
KGZvciBwYWdlIG51bWJlcnMgLyBmZWVkcyBldGMuLikuCgkJCS8vIEFkZCBhIHBlcm1saW5r
cyBydWxlIHdoaWNoIHdpbGwgZG8gdGhhdC4KCQkJJHBlcm1saW5rc1snZGVmYXVsdCddID0g
YXJyYXkoCgkJCQknY29tcG9uZW50cycgPT4gYXJyYXkoKSwKCQkJCSdzZXR0aW5ncycgPT4g
YXJyYXkoCgkJCQkJJ3BsX25hbWUnID0+ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1bHQn
LCAncGxfcHJlY2VkZW5jZScgPT4gJycsICdwbF9wcmV2aWV3JyA9PiAnLycsCgkJCQkJJ2Nv
bl9zZWN0aW9uJyA9PiAnJywgJ2Nvbl9jYXRlZ29yeScgPT4gJycsICdkZXNfc2VjdGlvbicg
PT4gJycsICdkZXNfY2F0ZWdvcnknID0+ICcnLAoJCQkJCSdkZXNfcGVybWxpbmsnID0+ICcn
LCAnZGVzX2ZlZWQnID0+ICcnLCAnZGVzX2xvY2F0aW9uJyA9PiAnJywgJ2Rlc19wYWdlJyA9
PiAnJwoJCQkpKTsKCgkJCS8vIEV4dGVuZCB0aGUgcHJldGV4dF9yZXBsYWNlbWVudCBzY29w
ZSBvdXRzaWRlIHRoZSBmb3JlYWNoIHBlcm1saW5rIGxvb3AKCQkJJHByZXRleHRfcmVwbGFj
ZW1lbnQgPSBOVUxMOwoKCQkJZm9yZWFjaCgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGwpIHsK
CQkJCS8vIEV4dHJhY3QgdGhlIHBlcm1saW5rIHNldHRpbmdzCgkJCQkkcGxfc2V0dGluZ3Mg
PSAkcGxbJ3NldHRpbmdzJ107CgkJCQlleHRyYWN0KCRwbF9zZXR0aW5ncyk7CgoJCQkJJHRo
aXMtPmRlYnVnKCdQZXJtbGluayBuYW1lOiAnLiRwbF9uYW1lKTsKCQkJCSR0aGlzLT5kZWJ1
ZygnUGVybWxpbmsgaWQ6ICcuJGlkKTsKCQkJCSR0aGlzLT5kZWJ1ZygnUHJldmlldzogJy4k
cGxfcHJldmlldyk7CgoJCQkJJHBsX2NvbXBvbmVudHMgPSAkcGxbJ2NvbXBvbmVudHMnXTsK
CgkJCQkvLyBVUkkgY29tcG9uZW50cwoJCQkJJHVyaV9jb21wb25lbnRzID0gJHVyaTsKCgkJ
CQkkdGhpcy0+ZGVidWcoJ1BMIGNvbXBvbmVudCBjb3VudDogJy5jb3VudCgkcGxfY29tcG9u
ZW50cykpOwoJCQkJJHRoaXMtPmRlYnVnKCdVUkwgY29tcG9uZW50IGNvdW50OiAnLmNvdW50
KCR1cmlfY29tcG9uZW50cykpOwoKCQkJCSRkYXRlID0gZmFsc2U7ICR0aXRsZV9wYWdlX2Zl
ZWQgPSBmYWxzZTsKCQkJCWZvcmVhY2goJHBsX2NvbXBvbmVudHMgYXMgJHBsX2MpCgkJCQkJ
Ly8gQXJlIHdlIGV4cGVjdGluZyBhIGRhdGUgY29tcG9uZW50PyBJZiBzbyB0aGUgbnVtYmVy
IG9mIHBsIGFuZCB1cmkgY29tcG9uZW50cyB3b24ndCBtYXRjaAoJCQkJCWlmICgkcGxfY1sn
dHlwZSddID09ICdkYXRlJykKCQkJCQkgCSRkYXRlID0gdHJ1ZTsKCQkJCQkvLyBEbyB3ZSBo
YXZlIGVpdGhlciBhIHRpdGxlLCBwYWdlIG9yIGEgZmVlZCBjb21wb25lbnQ/CgkJCQkJZWxz
ZSBpZiAoaW5fYXJyYXkoJHBsX2NbJ3R5cGUnXSwgYXJyYXkoJ3RpdGxlJywgJ3BhZ2UnLCAn
ZmVlZCcpKSkKCQkJCQkJJHRpdGxlX3BhZ2VfZmVlZCA9IHRydWU7CgoJCQkJaWYgKCEkdGl0
bGVfcGFnZV9mZWVkKQoJCQkJCS8vIElmIHRoZXJlIGlzbid0IGEgdGl0bGUsIHBhZ2Ugb3Ig
ZmVlZCBjb21wb25lbnQgdGhlbiBhcHBlbmQgYSBzcGVjaWFsIHR5cGUgZm9yIGNsZWF2ZXIg
cGFydGlhbCBtYXRjaGluZwoJCQkJCSRwbF9jb21wb25lbnRzW10gPSBhcnJheSgndHlwZScg
PT4gJ3RpdGxlX3BhZ2VfZmVlZCcsICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywg
J3JlZ2V4JyA9PiAnJywgJ3RleHQnID0+ICcnKTsKCgkJCQkvLyBFeGl0IGVhcmx5IGlmIHRo
ZXJlIGFyZSBtb3JlIFVSTCBjb21wb25lbnRzIHRoYW4gUEwgY29tcG9uZW50cywKCQkJCS8v
IHRha2luZyBpbnRvIGFjY291bnQgd2hldGhlciB0aGVyZSBpcyBhIGRhdGEgY29tcG9uZW50
CgkJCQlpZiAoISR1cmlfY29tcG9uZW50c1swXSB8fCBjb3VudCgkdXJpX2NvbXBvbmVudHMp
ID4gY291bnQoJHBsX2NvbXBvbmVudHMpICsgKCRkYXRlID8gMiA6IDApKSB7CgkJCQkJJHRo
aXMtPmRlYnVnKCdNb3JlIFVSTCBjb21wb25lbnRzIHRoYW4gUEwgY29tcG9uZW50cycpOwoJ
CQkJCWNvbnRpbnVlOwoJCQkJfQoKCQkJCS8vIFJlc2V0IHByZXRleHRfcmVwbGFjZW1lbnQg
YXMgd2UgYXJlIGFib3V0IHRvIHN0YXJ0IGFub3RoZXIgY29tcGFyaXNvbgoJCQkJJHByZXRl
eHRfcmVwbGFjZW1lbnQgPSBhcnJheSgncGVybWxpbmtfaWQnID0+ICRpZCk7CgoJCQkJLy8g
UmVzZXQgdGhlIGFydGljbGUgY29udGV4dCBzdHJpbmcKCQkJCSRjb250ZXh0ID0gYXJyYXko
KTsKCQkJCXVuc2V0KCRjb250ZXh0X3N0cik7CgkJCQlpZiAoIWVtcHR5KCRkZXNfc2VjdGlv
bikpCgkJCQkJJGNvbnRleHRbXSA9ICJgU2VjdGlvbmAgPSAnJGRlc19zZWN0aW9uJyI7CgkJ
CQlpZiAoIWVtcHR5KCRkZXNfY2F0ZWdvcnkpKQoJCQkJCSRjb250ZXh0W10gPSAiKGBDYXRl
Z29yeTFgID0gJyRkZXNfY2F0ZWdvcnknIE9SIGBDYXRlZ29yeTJgID0gJyRkZXNfY2F0ZWdv
cnknKSI7CgkJCQkkY29udGV4dF9zdHIgPSAoY291bnQoJGNvbnRleHQpID4gMCA/ICdhbmQg
Jy5qb2luKCcgYW5kICcsICRjb250ZXh0KSA6ICcnKTsKCgkJCQkvLyBBc3N1bWUgdGhlcmUg
aXMgbm8gbWF0Y2gKCQkJCSRwYXJ0aWFsX21hdGNoID0gZmFsc2U7CgkJCQkkY2xlYXZlcl9w
YXJ0aWFsX21hdGNoID0gZmFsc2U7CgoJCQkJLy8gTG9vcCB0aHJvdWdoIHRoZSBwZXJtbGlu
ayBjb21wb25lbnRzCgkJCQlmb3JlYWNoICgkcGxfY29tcG9uZW50cyBhcyAkcGxfY19pbmRl
eCA9PiAkcGxfYykgewoJCQkJCS8vIEFzc3VtZSB0aGVyZSBpcyBubyBtYXRjaAoJCQkJCSRt
YXRjaCA9IGZhbHNlOwoKCQkJCQkvLyBDaGVjayB0byBzZWUgaWYgdGhlcmUgYXJlIHN0aWxs
IFVSSSBjb21wb25lbnRzIHRvIGJlIGNoZWNrZWQuCgkJCQkJaWYgKGNvdW50KCR1cmlfY29t
cG9uZW50cykpCgkJCQkJCS8vIEdldCB0aGUgbmV4dCBjb21wb25lbnQuCgkJCQkJCSR1cmlf
YyA9IGFycmF5X3NoaWZ0KCR1cmlfY29tcG9uZW50cyk7CgoJCQkJCWVsc2UgaWYgKCEkdGl0
bGVfcGFnZV9mZWVkICYmIGNvdW50KCRwbF9jb21wb25lbnRzKSAtIDEgPT0gJHVyaV9jb21w
b25lbnRfY291bnQpIHsKCQkJCQkJLy8gSWYgd2UgYXBwZW5kZWQgYSB0aXRsZV9wYWdlX2Zl
ZWQgY29tcG9uZW50IGVhcmxpZXIgYW5kIHBlcm1saW5rIGFuZCBVUkkgY29tcG9uZW50cwoJ
CQkJCQkvLyBjb3VudHMgYXJlIGVxdWFsLCB3ZSBtdXN0IG9mIGZpbmlzaGVkIGNoZWNraW5n
IHRoaXMgcGVybWxpbmssIGFuZCBpdCBtYXRjaGVzIHNvIGJyZWFrLgoJCQkJCQkkbWF0Y2gg
PSB0cnVlOwoJCQkJCQlicmVhazsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJLy8gSWYgdGhlcmUg
YXJlIG5vIG1vcmUgVVJJIGNvbXBvbmVudHMgdGhlbiB3ZSBoYXZlIGEgcGFydGlhbCBtYXRj
aC4KCQkJCQkJLy8gU3RvcmUgdGhlIHBhcnRpYWwgbWF0Y2ggZGF0YSB1bmxlc3MgdGhlcmUg
aGFzIGJlZW4gYSBwcmVjZWRpbmcgcGVybWxpbmsgd2l0aCB0aGUKCQkJCQkJLy8gc2FtZSBu
dW1iZXIgb2YgY29tcG9uZW50cywgYXMgcGVybWxpbmsgaGF2ZSBhbHJlYWR5IGJlZW4gc29y
dGVkIGJ5IHByZWNlZGVuY2UuCgkJCQkJCWlmICghYXJyYXlfa2V5X2V4aXN0cygkdXJpX2Nv
bXBvbmVudF9jb3VudCwgJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcykpCgkJCQkJCQkkdGhpcy0+
cGFydGlhbF9tYXRjaGVzWyR1cmlfY29tcG9uZW50X2NvdW50XSA9ICRwcmV0ZXh0X3JlcGxh
Y2VtZW50OwoKCQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2Vz
IGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJdW5z
ZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoKCQkJCQkJLy8gQnJlYWsgZWFybHkgZm9ybSB0
aGUgZm9yZWFjaCBwZXJtbGluayBjb21wb25lbnRzIGxvb3AuCgkJCQkJCSRwYXJ0aWFsX21h
dGNoID0gdHJ1ZTsKCQkJCQkJYnJlYWs7CgkJCQkJfQoKCQkJCQkvLyBFeHRyYWN0IHRoZSBw
ZXJtbGluayBjb21wb25lbnRzLgoJCQkJCWV4dHJhY3QoJHBsX2MpOwoKCQkJCQkvLyBJZiBp
dCdzIGEgZGF0ZSwgZ3JhYiBhbmQgY29tYmluZSB0aGUgbmV4dCB0d28gVVJJIGNvbXBvbmVu
dHMuCgkJCQkJaWYgKCR0eXBlID09ICdkYXRlJykKCQkJCQkJJHVyaV9jIC49ICcvJy5hcnJh
eV9zaGlmdCgkdXJpX2NvbXBvbmVudHMpLicvJy5hcnJheV9zaGlmdCgkdXJpX2NvbXBvbmVu
dHMpOwoKCQkJCQkvLyBEZWNvZGUgdGhlIFVSTAoJCQkJCSR1cmlfYyA9IHVybGRlY29kZSgk
dXJpX2MpOwoKCQkJCQkvLyBBbHdheXMgY2hlY2sgdGhlIHR5cGUgdW5sZXNzIHRoZSBwcmVm
aXggb3Igc3VmZml4IGFyZW4ndCB0aGVyZQoJCQkJCSRjaGVja190eXBlID0gdHJ1ZTsKCgkJ
CQkJLy8gQ2hlY2sgcHJlZml4CgkJCQkJaWYgKCRwcmVmaXggJiYgJHRoaXMtPnByZWYoJ3No
b3dfcHJlZml4JykpIHsKCQkJCQkJJHNhbml0aXplZF9wcmVmaXggPSB1cmxkZWNvZGUoJHRo
aXMtPmVuY29kZV91cmwoJHByZWZpeCkpOwoJCQkJCQlpZiAoKCRwb3MgPSBzdHJwb3MoJHVy
aV9jLCAkc2FuaXRpemVkX3ByZWZpeCkpID09PSBmYWxzZSB8fCAkcG9zICE9IDApIHsKCQkJ
CQkJCSRjaGVja190eXBlID0gZmFsc2U7CgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NhblwndCBm
aW5kIHByZWZpeDogJy4kcHJlZml4KTsKCQkJCQkJfSBlbHNlCgkJCQkJCQkvLyBDaGVjayBw
YXNzZWQsIHJlbW92ZSBwcmVmaXggcmVhZHkgZm9yIHRoZSBuZXh0IGNoZWNrCgkJCQkJCQkk
dXJpX2MgPSBzdWJzdHJfcmVwbGFjZSgkdXJpX2MsICcnLCAwLCBzdHJsZW4oJHNhbml0aXpl
ZF9wcmVmaXgpKTsKCQkJCQl9CgoJCQkJCS8vIENoZWNrIHN1ZmZpeAoJCQkJCWlmICgkY2hl
Y2tfdHlwZSAmJiAkc3VmZml4ICYmICR0aGlzLT5wcmVmKCdzaG93X3N1ZmZpeCcpKSB7CgkJ
CQkJCSRzYW5pdGl6ZWRfc3VmZml4ID0gdXJsZGVjb2RlKCR0aGlzLT5lbmNvZGVfdXJsKCRz
dWZmaXgpKTsKCQkJCQkJaWYgKCgkcG9zID0gc3RycnBvcygkdXJpX2MsICRzYW5pdGl6ZWRf
c3VmZml4KSkgPT09IGZhbHNlKSB7CgkJCQkJCQkkY2hlY2tfdHlwZSA9IGZhbHNlOwoJCQkJ
CQkJJHRoaXMtPmRlYnVnKCdDYW5cJ3QgZmluZCBzdWZmaXg6ICcuJHN1ZmZpeCk7CgkJCQkJ
CX0gZWxzZQoJCQkJCQkJLy8gQ2hlY2sgcGFzc2VkLCByZW1vdmUgc3VmZml4IHJlYWR5IGZv
ciB0aGUgbmV4dCBjaGVjawoJCQkJCQkJJHVyaV9jID0gc3Vic3RyX3JlcGxhY2UoJHVyaV9j
LCAnJywgJHBvcywgc3RybGVuKCRzYW5pdGl6ZWRfc3VmZml4KSk7CgkJCQkJfQoKCQkJCQkv
LyBCb3RoIHRoZSBwcmVmaXggYW5kIHN1ZmZpeCBzZXR0aW5ncyBoYXZlIHBhc3NlZAoJCQkJ
CWlmICgkY2hlY2tfdHlwZSkgewoJCQkJCQkkdGhpcy0+ZGVidWcoJ0NoZWNraW5nIGlmICIn
LiR1cmlfYy4nIiBpcyBvZiB0eXBlICInLiR0eXBlLiciJyk7CgkJCQkJCSR1cmlfYyA9IGRv
U2xhc2goJHVyaV9jKTsKCgkJCQkJCS8vCgkJCQkJCWlmICgkcHJlZnNbJ3Blcm1hbGlua190
aXRsZV9mb3JtYXQnXSkgewoJCQkJCQkJJG10X3NlYXJjaCA9IGFycmF5KCcvXy8nLCAnL1wu
aHRtbCQvJyk7CgkJCQkJCQkkbXRfcmVwbGFjZSA9IGFycmF5KCctJywgJycpOwoJCQkJCQl9
IGVsc2UgewoJCQkJCQkJJG10X3NlYXJjaCA9IGFycmF5KCcvKD86XnxfKSguKS9lJywgJy9c
Lmh0bWwkLycpOwoJCQkJCQkJJG10X3JlcGxhY2UgPSBhcnJheSgic3RydG91cHBlcignXFwx
JykiLCAnJyk7CgkJCQkJCX0KCQkJCQkJJG10X3VyaV9jID0gJHRoaXMtPnByZWYoJ3JlZGly
ZWN0X210X3N0eWxlX2xpbmtzJykKCQkJCQkJCT8gcHJlZ19yZXBsYWNlKCRtdF9zZWFyY2gs
ICRtdF9yZXBsYWNlLCAkdXJpX2MpCgkJCQkJCQk6ICcnOwoKCQkJCQkJLy8gQ29tcGFyZSBi
YXNlZCBvbiB0eXBlCgkJCQkJCXN3aXRjaCAoJHR5cGUpIHsKCQkJCQkJCWNhc2UgJ3NlY3Rp
b24nOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygnbmFtZScsICd0eHBfc2VjdGlvbics
ICIoYG5hbWVgIGxpa2UgJyR1cmlfYycgb3IgYG5hbWVgIGxpa2UgJyRtdF91cmlfYycpIGxp
bWl0IDEiKSkgewoJCQkJCQkJCQkkdGhpcy0+ZGVidWcoJ1NlY3Rpb24gbmFtZTogJy4kcnNb
J25hbWUnXSk7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ10gPSAkcnNbJ25h
bWUnXTsKCQkJCQkJCQkJJGNvbnRleHRbXSA9ICJgU2VjdGlvbmAgPSAneyRyc1snbmFtZSdd
fSciOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJ
CQkJCQkJY2FzZSAnY2F0ZWdvcnknOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygnbmFt
ZScsICd0eHBfY2F0ZWdvcnknLCAiKGBuYW1lYCBsaWtlICckdXJpX2MnIG9yIGBuYW1lYCBs
aWtlICckbXRfdXJpX2MnKSBhbmQgYHR5cGVgID0gJ2FydGljbGUnIGxpbWl0IDEiKSkgewoJ
CQkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NhdGVnb3J5IG5hbWU6ICcuJHJzWyduYW1lJ10pOwoJ
CQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYyddID0gJHJzWyduYW1lJ107CgkJCQkJ
CQkJCSRjb250ZXh0W10gPSAiKGBDYXRlZ29yeTFgID0gJ3skcnNbJ25hbWUnXX0nIE9SIGBD
YXRlZ29yeTJgID0gJyR1cmlfYycpIjsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJ
CQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3RpdGxlJzoKCQkJCQkJCQlpZiAoJHJz
ID0gc2FmZV9yb3coJ3VybF90aXRsZScsICd0ZXh0cGF0dGVybicsICIoYHVybF90aXRsZWAg
bGlrZSAnJHVyaV9jJyBvciBgdXJsX3RpdGxlYCBsaWtlICckbXRfdXJpX2MnKSAkY29udGV4
dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSR0aGlzLT5k
ZWJ1ZygnVVJMIFRpdGxlOiAnLiRyc1sndXJsX3RpdGxlJ10pOwoJCQkJCQkJCQkkbXRfcmVk
aXJlY3QgPSAoJHVyaV9jICE9ICRtdF91cmlfYyk7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxh
Y2VtZW50Wyd1cmxfdGl0bGUnXSA9ICRyc1sndXJsX3RpdGxlJ107CgkJCQkJCQkJCSRtYXRj
aCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdpZCc6CgkJ
CQkJCQkJaWYgKCRycyA9IHNhZmVfcm93KCdJRCwgUG9zdGVkJywgJ3RleHRwYXR0ZXJuJywg
ImBJRGAgPSAnJHVyaV9jJyAkY29udGV4dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgbGltaXQg
MSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCddID0gJHJzWydJRCdd
OwoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10gPSAkcnNbJ1Bvc3Rl
ZCddOwoJCQkJCQkJCQkkcHJldGV4dFsnbnVtUGFnZXMnXSA9IDE7CgkJCQkJCQkJCSRwcmV0
ZXh0Wydpc19hcnRpY2xlX2xpc3QnXSA9IGZhbHNlOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVl
OwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnYXV0aG9yJzoKCQkJCQkJ
CQlpZiAoJGF1dGhvciA9IHNhZmVfZmllbGQoJ25hbWUnLCAndHhwX3VzZXJzJywgIlJlYWxO
YW1lIGxpa2UgJyR1cmlfYycgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxh
Y2VtZW50WydhdXRob3InXSA9ICRhdXRob3I7CgkJCQkJCQkJCSRjb250ZXh0W10gPSAiYEF1
dGhvcklEYCA9ICckYXV0aG9yJyI7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJ
fQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdsb2dpbic6CgkJCQkJCQkJaWYgKCRhdXRo
b3IgPSBzYWZlX2ZpZWxkKCduYW1lJywgJ3R4cF91c2VycycsICJuYW1lIGxpa2UgJyR1cmlf
YycgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydhdXRob3In
XSA9ICRhdXRob3I7CgkJCQkJCQkJCSRjb250ZXh0W10gPSAiYEF1dGhvcklEYCA9ICckYXV0
aG9yJyI7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7
CgkJCQkJCQljYXNlICdjdXN0b20nOgoJCQkJCQkJCSRjdXN0b21fb3B0aW9ucyA9IGFycmF5
X3ZhbHVlcyhhcnJheV9tYXAoYXJyYXkoJHRoaXMsICJlbmNvZGVfdXJsIiksIHNhZmVfY29s
dW1uKCJjdXN0b21fJGN1c3RvbSIsICd0ZXh0cGF0dGVybicsICJjdXN0b21fJGN1c3RvbSAh
PSAnJyIpKSk7CgkJCQkJCQkJaWYgKCR0aGlzLT5wcmVmKCdmb3JjZV9sb3dlcmNhc2VfdXJs
cycpKQoJCQkJCQkJCQkkY3VzdG9tX29wdGlvbnMgPSBhcnJheV9tYXAoInN0cnRvbG93ZXIi
LCAkY3VzdG9tX29wdGlvbnMpOwoJCQkJCQkJCWlmIChpbl9hcnJheSgkdXJpX2MsICRjdXN0
b21fb3B0aW9ucykpIHsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJ
CQlicmVhazsKCQkJCQkJCWNhc2UgJ2RhdGUnOgoJCQkJCQkJCWlmIChwcmVnX21hdGNoKCcv
XlxkezR9XC9cZHsyfVwvXGR7Mn0kLycsICR1cmlfYykpIHsKCQkJCQkJCQkJJHByZXRleHRf
cmVwbGFjZW1lbnRbJ2RhdGUnXSA9IHN0cl9yZXBsYWNlKCcvJywgJy0nLCAkdXJpX2MpOwoJ
CQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJ
Y2FzZSAneWVhcic6CgkJCQkJCQkJaWYgKHByZWdfbWF0Y2goJy9eXGR7NH0kLycsICR1cmlf
YykpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3llYXInXSA9ICR1cmlfYzsK
CQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJ
CWNhc2UgJ21vbnRoJzoKCQkJCQkJCWNhc2UgJ2RheSc6CgkJCQkJCQkJaWYgKHByZWdfbWF0
Y2goJy9eXGR7Mn0kLycsICR1cmlfYykpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1l
bnRbJHR5cGVdID0gJHVyaV9jOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0K
CQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAncGFnZSc6CgkJCQkJCQkJaWYgKGlzX251bWVy
aWMoJHVyaV9jKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncGcnXSA9ICR1
cmlfYzsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsK
CQkJCQkJCWNhc2UgJ2ZlZWQnOgoJCQkJCQkJCWlmIChpbl9hcnJheSgkdXJpX2MsIGFycmF5
KCdyc3MnLCAnYXRvbScpKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFskdXJp
X2NdID0gMTsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVh
azsKCQkJCQkJCWNhc2UgJ3NlYXJjaCc6CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50
WydxJ10gPSAkdXJpX2M7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQlicmVhazsK
CQkJCQkJCWNhc2UgJ3RleHQnOgoJCQkJCQkJCWlmICgkdGhpcy0+ZW5jb2RlX3VybCgkdGV4
dCkgPT0gJHVyaV9jKSB7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJCSRwcmV0
ZXh0X3JlcGxhY2VtZW50WyJwZXJtbGlua190ZXh0X3skbmFtZX0iXSA9ICR1cmlfYzsKCQkJ
CQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3JlZ2V4JzoKCQkJCQkJCQkvLyBD
aGVjayB0byBzZWUgaWYgcmVnZXggaXMgdmFsaWQgd2l0aG91dCBvdXRwdXR0aW5nIGVycm9y
IG1lc3NhZ2VzLgoJCQkJCQkJCW9iX3N0YXJ0KCk7CgkJCQkJCQkJcHJlZ19tYXRjaCgkcmVn
ZXgsICR1cmlfYywgJHJlZ2V4X21hdGNoZXMpOwoJCQkJCQkJCSRpc192YWxpZF9yZWdleCA9
ICEob2JfZ2V0X2NsZWFuKCkpOwoJCQkJCQkJCWlmICgkaXNfdmFsaWRfcmVnZXggJiYgQCRy
ZWdleF9tYXRjaGVzWzBdKSB7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJCSRw
cmV0ZXh0X3JlcGxhY2VtZW50WyJwZXJtbGlua19yZWdleF97JG5hbWV9Il0gPSAkcmVnZXhf
bWF0Y2hlc1swXTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJfSAvLyBzd2l0Y2gg
dHlwZSBlbmQKCgkJCQkJCS8vIFVwZGF0ZSB0aGUgYXJ0aWNsZSBjb250ZXh0IHN0cmluZwoJ
CQkJCQkkY29udGV4dF9zdHIgPSAoY291bnQoJGNvbnRleHQpID4gMCA/ICdhbmQgJy5qb2lu
KCcgYW5kICcsICRjb250ZXh0KSA6ICcnKTsKCgkJCQkJCSR0aGlzLT5kZWJ1ZygoJG1hdGNo
ID09IHRydWUpID8gJ1lFUycgOiAnTk8nKTsKCgkJCQkJCWlmICghJG1hdGNoICYmICEkY2xl
YXZlcl9wYXJ0aWFsX21hdGNoKSB7CgkJCQkJCQkvLyBUaGVyZSBoYXNuJ3QgYmVlbiBhIG1h
dGNoIG9yIGEgY29tcGxldGUgY2xlYXZlciBwYXJ0aWFsIG1hdGNoLiBMZXRzIHRyeSB0byBi
ZSBjbGVhdmVyIGFuZAoJCQkJCQkJLy8gY2hlY2sgdG8gc2VlIGlmIHRoaXMgY29tcG9uZW50
IGlzIGVpdGhlciBhIHRpdGxlLCBwYWdlIG9yIGEgZmVlZC4gVGhpcyBtYWtlcyBpdCBtb3Jl
IHByb2JhYmxlCgkJCQkJCQkvLyBhIHN1Y2Nlc3NmdWwgbWF0Y2ggZm9yIGEgZ2l2ZW4gcGVy
bWxpbmsgcnVsZSBvY2N1cnMuCgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NoZWNraW5nIGlmICIn
LiR1cmlfYy4nIiBpcyBvZiB0eXBlICJ0aXRsZV9wYWdlX2ZlZWQiJyk7CgoJCQkJCQkJaWYg
KCR0eXBlICE9ICd0aXRsZScgJiYgJHVybF90aXRsZSA9IHNhZmVfZmllbGQoJ3VybF90aXRs
ZScsICd0ZXh0cGF0dGVybicsICJgdXJsX3RpdGxlYCBsaWtlICckdXJpX2MnICRjb250ZXh0
X3N0ciBhbmQgYFN0YXR1c2AgPj0gNCBsaW1pdCAxIikpIHsKCQkJCQkJCQkkcHJldGV4dF9y
ZXBsYWNlbWVudFsndXJsX3RpdGxlJ10gPSAkdXJsX3RpdGxlOwoJCQkJCQkJCSRwcmV0ZXh0
WydudW1QYWdlcyddID0gMTsKCQkJCQkJCQkkcHJldGV4dFsnaXNfYXJ0aWNsZV9saXN0J10g
PSBmYWxzZTsKCQkJCQkJCQkkY2xlYXZlcl9wYXJ0aWFsX21hdGNoID0gdHJ1ZTsKCQkJCQkJ
CX0gZWxzZSBpZiAoJHRoaXMtPnByZWYoJ2NsZWFuX3BhZ2VfYXJjaGl2ZV9saW5rcycpICYm
ICR0eXBlICE9ICdwYWdlJyAmJiBpc19udW1lcmljKCR1cmlfYykpIHsKCQkJCQkJCQkkcHJl
dGV4dF9yZXBsYWNlbWVudFsncGcnXSA9ICR1cmlfYzsKCQkJCQkJCQkkY2xlYXZlcl9wYXJ0
aWFsX21hdGNoID0gdHJ1ZTsKCQkJCQkJCX0gZWxzZSBpZiAoJHR5cGUgIT0gJ2ZlZWQnICYm
IGluX2FycmF5KCR1cmlfYywgYXJyYXkoJ3JzcycsICdhdG9tJykpKSB7CgkJCQkJCQkJJHBy
ZXRleHRfcmVwbGFjZW1lbnRbJHVyaV9jXSA9IDE7CgkJCQkJCQkJJGNsZWF2ZXJfcGFydGlh
bF9tYXRjaCA9IHRydWU7CgkJCQkJCQl9CgoJCQkJCQkJJHRoaXMtPmRlYnVnKCgkY2xlYXZl
cl9wYXJ0aWFsX21hdGNoID09IHRydWUpID8gJ1lFUycgOiAnTk8nKTsKCgkJCQkJCQlpZiAo
JGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkgewoJCQkJCQkJCSR0aGlzLT5jbGVhdmVyX3BhcnRp
YWxfbWF0Y2ggPSAkcHJldGV4dF9yZXBsYWNlbWVudDsKCgkJCQkJCQkJLy8gVW5zZXQgcHJl
dGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2VzIGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBhIHBy
ZWNlZGluZyBjb21wb25lbnQKCQkJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudCk7
CgoJCQkJCQkJCSRjbGVhdmVyX3BhcnRpYWxfbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCWNvbnRp
bnVlIDI7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9IC8vIGNoZWNrIHR5cGUgZW5kCgoJCQkJ
CS8vIEJyZWFrIGVhcmx5IGlmIHRoZSBjb21wb25lbnQgZG9lc24ndCBtYXRjaCwgYXMgdGhl
cmUgaXMgbm8gcG9pbnQgY29udGludWluZwoJCQkJCWlmICgkbWF0Y2ggPT0gZmFsc2UpIHsK
CQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2VzIGNvdWxkIG9m
IGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJdW5zZXQoJHByZXRl
eHRfcmVwbGFjZW1lbnQpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9IC8vIGZvcmVhY2gg
cGVybWxpbmsgY29tcG9uZW50IGVuZAoKCQkJCWlmICghaXNzZXQoJHByZXRleHRfcmVwbGFj
ZW1lbnRbJ2lkJ10pKSB7CgkJCQkJaWYoaXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Vy
bF90aXRsZSddKSkgewoJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudFsneWVh
ciddKSkgewoJCQkJCQkJJGRhdGVfdmFsID0gJHByZXRleHRfcmVwbGFjZW1lbnRbJ3llYXIn
XTsKCQkJCQkJCWlmKGlzc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50Wydtb250aCddKSkgewoJ
CQkJCQkJCSRkYXRlX3ZhbCAuPSAnLScgLiAkcHJldGV4dF9yZXBsYWNlbWVudFsnbW9udGgn
XTsKCQkJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5J10pKSB7CgkJ
CQkJCQkJCSRkYXRlX3ZhbCAuPSAnLScgLiAkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5J107
CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCWlmICgkcnMgPSBzYWZlX3Jvdygn
SUQsIFBvc3RlZCcsICd0ZXh0cGF0dGVybicsICJgdXJsX3RpdGxlYCBsaWtlICckcHJldGV4
dF9yZXBsYWNlbWVudFt1cmxfdGl0bGVdJyAkY29udGV4dF9zdHIgYW5kIGBQb3N0ZWRgIGxp
a2UgJyRkYXRlX3ZhbCUnIGFuZCBgU3RhdHVzYCA+PSA0IG9yZGVyIGJ5IGBJRGAgZGVzYyBs
aW1pdCAxIikpIHsKCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCddID0gJHJzWydJ
RCddOwoJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ1Bvc3RlZCddID0gJHJzWydQb3N0
ZWQnXTsKCQkJCQkJCSRwcmV0ZXh0WydudW1QYWdlcyddID0gMTsKCQkJCQkJCSRwcmV0ZXh0
Wydpc19hcnRpY2xlX2xpc3QnXSA9IGZhbHNlOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoKCQkJ
CWlmICgkbWF0Y2ggfHwgJHBhcnRpYWxfbWF0Y2ggfHwgJGNsZWF2ZXJfcGFydGlhbF9tYXRj
aCkgewoJCQkJCS8vIEV4dHJhY3QgdGhlIHNldHRpbmdzIGZvciB0aGlzIHBlcm1saW5rCgkJ
CQkJQGV4dHJhY3QoJHBlcm1saW5rc1skcHJldGV4dF9yZXBsYWNlbWVudFsncGVybWxpbmtf
aWQnXV1bJ3NldHRpbmdzJ10pOwoKCQkJCQkvLyBDaGVjayB0aGUgcGVybWxpbmsgc2VjdGlv
biBhbmQgY2F0ZWdvcnkgY29uZGl0aW9ucwoJCQkJCWlmICgoIWVtcHR5KCRjb25fc2VjdGlv
bikgJiYgJGNvbl9zZWN0aW9uICE9IEAkcHJldGV4dF9yZXBsYWNlbWVudFsncyddKSB8fAoJ
CQkJCSghZW1wdHkoJGNvbl9jYXRlZ29yeSkgJiYgJGNvbl9jYXRlZ29yeSAhPSBAJHByZXRl
eHRfcmVwbGFjZW1lbnRbJ2MnXSkpIHsKCQkJCQkJJHRoaXMtPmRlYnVnKCdQZXJtbGluayBj
b25kaXRpb25zIGZhaWxlZCcpOwoJCQkJCQlpZiAoQCRjb25fc2VjdGlvbikgICR0aGlzLT5k
ZWJ1ZygnY29uX3NlY3Rpb24gPSAnLiAkY29uX3NlY3Rpb24pOwoJCQkJCQlpZiAoQCRjb25f
Y2F0ZWdvcnkpICR0aGlzLT5kZWJ1ZygnY29uX2NhdGVnb3J5ID0gJy4gJGNvbl9jYXRlZ29y
eSk7CgoJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudCk7CgkJCQkJfQoJCQkJCWVs
c2UgaWYgKCRtYXRjaCAmJiBpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQkJCSR0
aGlzLT5kZWJ1ZygnV2UgaGF2ZSBhIG1hdGNoIScpOwoKCQkJCQllbHNlIGlmICgkcGFydGlh
bF9tYXRjaCAmJiBjb3VudCgkdGhpcy0+cGFydGlhbF9tYXRjaGVzKSkKCQkJCQkJJHRoaXMt
PmRlYnVnKCdXZSBoYXZlIGEgXCdwYXJ0aWFsIG1hdGNoXCcnKTsKCgkJCQkJZWxzZSBpZiAo
JGNsZWF2ZXJfcGFydGlhbF9tYXRjaCAmJiBpc3NldCgkY2xlYXZlcl9wYXJ0aWFsX21hdGNo
KSkKCQkJCQkJJHRoaXMtPmRlYnVnKCdXZSBoYXZlIGEgXCdjbGVhdmVyIHBhcnRpYWwgbWF0
Y2hcJycpOwoKCQkJCQllbHNlIHsKCQkJCQkJJHRoaXMtPmRlYnVnKCdFcnJvcjogQ2FuXCd0
IGRldGVybWluZSB0aGUgY29ycmVjdCB0eXBlIG1hdGNoJyk7CgkJCQkJCS8vIFRoaXMgcGVy
bWxpbmsgaGFzIGZhaWxlZCwgY29udGludWUgZXhlY3V0aW9uIG9mIHRoZSBmb3JlYWNoIHBl
cm1saW5rcyBsb29wCgkJCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50KTsKCQkJCQl9
CgkJCQl9CgoJCQkJLy8gV2UgaGF2ZSBhIG1hdGNoCgkJCQlpZiAoQCRwcmV0ZXh0X3JlcGxh
Y2VtZW50KQoJCQkJCWJyZWFrOwoKCQkJfSAvLyBmb3JlYWNoIHBlcm1saW5rcyBlbmQKCgkJ
CS8vIElmIHRoZXJlIGlzIG5vIG1hdGNoIHJlc3RvcmUgdGhlIG1vc3QgbGlrZWx5IHBhcnRp
YWwgbWF0Y2guIFNvcnRlZCBieSBudW1iZXIgb2YgY29tcG9uZW50cyBhbmQgdGhlbiBwcmVj
ZWRlbmNlCgkJCWlmICghQCRwcmV0ZXh0X3JlcGxhY2VtZW50ICYmIGNvdW50KCR0aGlzLT5w
YXJ0aWFsX21hdGNoZXMpKQoJCQkJJHByZXRleHRfcmVwbGFjZW1lbnQgPSBhcnJheV9zaGlm
dChhcnJheV9zbGljZSgkdGhpcy0+cGFydGlhbF9tYXRjaGVzLCAtMSkpOwoJCQl1bnNldCgk
dGhpcy0+cGFydGlhbF9tYXRjaGVzKTsKCgkJCS8vIFJlc3RvcmUgdGhlIGNsZWF2ZXJfcGFy
dGlhbF9tYXRjaCBpZiB0aGVyZSBpcyBubyBvdGhlciBtYXRjaGVzCgkJCWlmICghQCRwcmV0
ZXh0X3JlcGxhY2VtZW50ICYmICR0aGlzLT5jbGVhdmVyX3BhcnRpYWxfbWF0Y2gpCgkJCQkk
cHJldGV4dF9yZXBsYWNlbWVudCA9ICR0aGlzLT5jbGVhdmVyX3BhcnRpYWxfbWF0Y2g7CgkJ
CXVuc2V0KCR0aGlzLT5jbGVhdmVyX3BhcnRpYWxfbWF0Y2gpOwoKCQkJLy8gRXh0cmFjdCB0
aGUgc2V0dGluZ3MgZm9yIHRoaXMgcGVybWxpbmsKCQkJQGV4dHJhY3QoJHBlcm1saW5rc1sk
cHJldGV4dF9yZXBsYWNlbWVudFsncGVybWxpbmtfaWQnXV1bJ3NldHRpbmdzJ10pOwoKCQkJ
Ly8gSWYgcHJldGV4dF9yZXBsYWNlbWVudCBpcyBzdGlsbCBzZXQgaGVyZSB0aGVuIHdlIGhh
dmUgYSBtYXRjaAoJCQlpZiAoQCRwcmV0ZXh0X3JlcGxhY2VtZW50KSB7CgkJCQkkdGhpcy0+
ZGVidWcoJ1ByZXRleHQgUmVwbGFjZW1lbnQgJy5wcmludF9yKCRwcmV0ZXh0X3JlcGxhY2Vt
ZW50LCAxKSk7CgoJCQkJaWYgKCFlbXB0eSgkZGVzX3NlY3Rpb24pKQoJCQkJCSRwcmV0ZXh0
X3JlcGxhY2VtZW50WydzJ10gPSAkZGVzX3NlY3Rpb247CgkJCQlpZiAoIWVtcHR5KCRkZXNf
Y2F0ZWdvcnkpKQoJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydjJ10gPSAkZGVzX2NhdGVn
b3J5OwoJCQkJaWYgKCFlbXB0eSgkZGVzX2ZlZWQpKQoJCQkJCSRwcmV0ZXh0X3JlcGxhY2Vt
ZW50WyRkZXNfZmVlZF0gPSAxOwoKCQkJCWlmIChAJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lk
J10gJiYgQCRwcmV0ZXh0X3JlcGxhY2VtZW50WydQb3N0ZWQnXSkgewoJCQkJIAlpZiAoJG5w
ID0gZ2V0TmV4dFByZXYoJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10sICRwcmV0ZXh0X3Jl
cGxhY2VtZW50WydQb3N0ZWQnXSwgQCRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ10pKQoJCQkJ
CQkkcHJldGV4dF9yZXBsYWNlbWVudCA9IGFycmF5X21lcmdlKCRwcmV0ZXh0X3JlcGxhY2Vt
ZW50LCAkbnApOwoJCQkJfQoJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ1Bvc3Rl
ZCddKTsKCgkJCQkvLyBJZiB0aGVyZSBpcyBhIG1hdGNoIHRoZW4gd2UgbW9zdCBzZXQgdGhl
IGh0dHAgc3RhdHVzIGNvcnJlY3RseSBhcyB0eHAncyBwcmV0ZXh0IG1pZ2h0IHNldCBpdCB0
byA0MDQKCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydzdGF0dXMnXSA9ICcyMDAnOwoKCQkJ
CS8vIFN0b3JlIHRoZSBvcmdpbmlhbCBIVFRQIHN0YXR1cyBjb2RlCgkJCQkvLyBXZSBtaWdo
dCBuZWVkIHRvIGxvZyB0aGUgcGFnZSBoaXQgaWYgaXQgZXF1YWxzIDQwNAoJCQkJJG9yZ2lu
aWFsX3N0YXR1cyA9ICRwcmV0ZXh0WydzdGF0dXMnXTsKCgkJCQkvLyBUeHAgb25seSBsb29r
cyBhdCB0aGUgbW9udGgsIGJ1dCBkdWUgdG8gaG93IHdlIHBoYXNlIHRoZSBtb250aCB3ZSBj
YW4gbWFuaXB1bGF0ZSB0aGUgc3FsIHRvIG91ciBuZWVkcwoJCQkJaWYgKGFycmF5X2tleV9l
eGlzdHMoJ2RhdGUnLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpIHsKCQkJCQkkcHJldGV4dF9y
ZXBsYWNlbWVudFsnbW9udGgnXSA9ICRwcmV0ZXh0X3JlcGxhY2VtZW50WydkYXRlJ107CgkJ
CQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ2RhdGUnXSk7CgkJCQl9IGVsc2UgaWYg
KGFycmF5X2tleV9leGlzdHMoJ3llYXInLCAkcHJldGV4dF9yZXBsYWNlbWVudCkgfHwKCQkJ
CWFycmF5X2tleV9leGlzdHMoJ21vbnRoJywgJHByZXRleHRfcmVwbGFjZW1lbnQpIHx8CgkJ
CQlhcnJheV9rZXlfZXhpc3RzKCdkYXknLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpIHsKCQkJ
CQkkbW9udGggPSAnJzsKCQkJCQkkbW9udGggLj0gKGFycmF5X2tleV9leGlzdHMoJ3llYXIn
LCAkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQkJCT8gJHByZXRleHRfcmVwbGFjZW1lbnRb
J3llYXInXS4nLScgOiAnX19fXy0nOwoJCQkJCSRtb250aCAuPSAoYXJyYXlfa2V5X2V4aXN0
cygnbW9udGgnLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQkJCT8gJHByZXRleHRfcmVw
bGFjZW1lbnRbJ21vbnRoJ10uJy0nIDogJ19fLSc7CgkJCQkJJG1vbnRoIC49IChhcnJheV9r
ZXlfZXhpc3RzKCdkYXknLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQkJCT8gJHByZXRl
eHRfcmVwbGFjZW1lbnRbJ2RheSddLicgJyA6ICdfXyAnOwoKCQkJCQkkcHJldGV4dF9yZXBs
YWNlbWVudFsnbW9udGgnXSA9ICRtb250aDsKCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNl
bWVudFsneWVhciddKTsKCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5J10p
OwoJCQkJfQoKCQkJCS8vIFNlY3Rpb24gbmVlZHMgdG8gYmUgZGVmaW5lZCBzbyB3ZSBjYW4g
YWx3YXlzIGdldCBhIHBhZ2UgdGVtcGxhdGUuCgkJCQlpZiAoIWFycmF5X2tleV9leGlzdHMo
J3MnLCAkcHJldGV4dF9yZXBsYWNlbWVudCkpCgkJCQl7CgkJCQkJaWYgKCFAJHByZXRleHRf
cmVwbGFjZW1lbnRbJ2lkJ10pCgkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ10gPSAn
ZGVmYXVsdCc7CgkJCQkJZWxzZQoJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncyddID0g
c2FmZV9maWVsZCgnU2VjdGlvbicsICd0ZXh0cGF0dGVybicsICdJRCA9ICcuJHByZXRleHRf
cmVwbGFjZW1lbnRbJ2lkJ10pOwoJCQkJfQoKCQkJCS8vIFNldCB0aGUgY3NzIGFuZCBwYWdl
IHRlbXBsYXRlLCBvdGhlcndpc2Ugd2UgZ2V0IGFuIHVua25vd24gc2VjdGlvbgoJCQkJJHNl
Y3Rpb25fc2V0dGluZ3MgPSBzYWZlX3JvdygnY3NzLCBwYWdlJywgJ3R4cF9zZWN0aW9uJywg
Im5hbWUgPSAneyRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ119JyBsaW1pdCAxIik7CgkJCQkk
cHJldGV4dF9yZXBsYWNlbWVudFsncGFnZSddID0gKEAkZGVzX3BhZ2UpID8gJGRlc19wYWdl
IDogJHNlY3Rpb25fc2V0dGluZ3NbJ3BhZ2UnXTsKCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50
Wydjc3MnXSAgPSAkc2VjdGlvbl9zZXR0aW5nc1snY3NzJ107CgoJCQkJJHRoaXMtPm1hdGNo
ZWRfcGVybWxpbmsgPSAkcHJldGV4dF9yZXBsYWNlbWVudDsKCgkJCQlnbG9iYWwgJHBlcm1s
aW5rX21vZGU7CgoJCQkJaWYgKGluX2FycmF5KCRwcmVmc1sncGVybWxpbmtfbW9kZSddLCBh
cnJheSgnaWRfdGl0bGUnLCAnc2VjdGlvbl9pZF90aXRsZScpKSAmJiBAJHByZXRleHRfcmVw
bGFjZW1lbnRbJ3BnJ10gJiYgIUAkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSkgewoJCQkJ
CSRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCddID0gJyc7CgkJCQkJJHByZXRleHRfcmVwbGFj
ZW1lbnRbJ2lzX2FydGljbGVfbGlzdCddID0gdHJ1ZTsKCQkJCX0KCgkJCQkvLyBNZXJnZSBw
cmV0ZXh0X3JlcGxhY2VtZW50IHdpdGggcHJldGV4dAoJCQkJJHByZXRleHQgPSBhcnJheV9t
ZXJnZSgkcHJldGV4dCwgJHByZXRleHRfcmVwbGFjZW1lbnQpOwoKCQkJCWlmIChpc19udW1l
cmljKEAkcHJldGV4dFsnaWQnXSkpIHsKCQkJCQkkYSA9IHNhZmVfcm93KCcqLCB1bml4X3Rp
bWVzdGFtcChQb3N0ZWQpIGFzIHVQb3N0ZWQsIHVuaXhfdGltZXN0YW1wKEV4cGlyZXMpIGFz
IHVFeHBpcmVzLCB1bml4X3RpbWVzdGFtcChMYXN0TW9kKSBhcyB1TGFzdE1vZCcsICd0ZXh0
cGF0dGVybicsICdJRD0nLmludHZhbCgkcHJldGV4dFsnaWQnXSkuJyBhbmQgU3RhdHVzID49
IDQnKTsKCQkJCQlwb3B1bGF0ZUFydGljbGVEYXRhKCRhKTsKCQkJCX0KCgkJCQkvLyBFeHBv
cnQgcmVxdWlyZWQgdmFsdWVzIHRvIHRoZSBnbG9iYWwgbmFtZXNwYWNlCgkJCQlmb3JlYWNo
IChhcnJheSgnaWQnLCAncycsICdjJywgJ3BnJywgJ2lzX2FydGljbGVfbGlzdCcsICdwcmV2
X2lkJywgJ3ByZXZfdGl0bGUnLCAnbmV4dF9pZCcsICduZXh0X3RpdGxlJywgJ2NzcycpIGFz
ICRrZXkpIHsKCQkJCQlpZiAoYXJyYXlfa2V5X2V4aXN0cygka2V5LCAkcHJldGV4dCkpCgkJ
CQkJCSRHTE9CQUxTWyRrZXldID0gJHByZXRleHRbJGtleV07CgkJCQl9CgoJCQkJaWYgKGNv
dW50KCR0aGlzLT5tYXRjaGVkX3Blcm1saW5rKSB8fCBAJG10X3JlZGlyZWN0KSB7CgkJCQkJ
JHBsX2luZGV4ID0gJHByZXRleHRbJ3Blcm1saW5rX2lkJ107CgkJCQkJaWYgKCFAJG10X3Jl
ZGlyZWN0IHx8ICEkdGhpcy0+cHJlZigncmVkaXJlY3RfbXRfc3R5bGVfbGlua3MnKSkgewoJ
CQkJCQkkcGwgPSAkdGhpcy0+Z2V0X3Blcm1saW5rKCRwcmV0ZXh0WydwZXJtbGlua19pZCdd
KTsKCQkJCQkJJHBsX2luZGV4ID0gQCRwbFsnc2V0dGluZ3MnXVsnZGVzX3Blcm1saW5rJ107
CgkJCQkJfQoKCQkJCQlpZiAoQCRwcmV0ZXh0WydpZCddICYmICRwbF9pbmRleCkgewoJCQkJ
CQlpZiAoY291bnQoJHRoaXMtPmdldF9wZXJtbGluaygkcGxfaW5kZXgpKSA+IDApIHsKCQkJ
CQkJCW9iX2NsZWFuKCk7CgkJCQkJCQlnbG9iYWwgJHNpdGV1cmw7CgkJCQkJCQkkcnMgPSBz
YWZlX3JvdygnKiwgSUQgYXMgdGhpc2lkLCB1bml4X3RpbWVzdGFtcChQb3N0ZWQpIGFzIHBv
c3RlZCcsICd0ZXh0cGF0dGVybicsICJJRCA9ICd7JHByZXRleHRbJ2lkJ119JyIpOwoJCQkJ
CQkJJGhvc3QgPSBydHJpbShzdHJfcmVwbGFjZShydHJpbShkb1N0cmlwKCRwcmV0ZXh0Wydz
dWJwYXRoJ10pLCAnLycpLCAnJywgaHUpLCAnLycpOwoJCQkJCQkJJHRoaXMtPnJlZGlyZWN0
KCRob3N0LiR0aGlzLT5fcGVybWxpbmt1cmwoJHJzLCBQRVJNTElOS1VSTCwgJHBsX2luZGV4
KSwgJHRoaXMtPnByZWYoJ3Blcm1saW5rX3JlZGlyZWN0X2h0dHBfc3RhdHVzJykpOwoJCQkJ
CQl9CgkJCQkJfSBlbHNlIGlmICgkdXJsID0gQCRwbFsnc2V0dGluZ3MnXVsnZGVzX2xvY2F0
aW9uJ10pIHsKCQkJCQkJb2JfY2xlYW4oKTsKCQkJCQkJJHRoaXMtPnJlZGlyZWN0KCR1cmws
ICR0aGlzLT5wcmVmKCd1cmxfcmVkaXJlY3RfaHR0cF9zdGF0dXMnKSk7CgkJCQkJfQoJCQkJ
fQoKCQkJCWlmIChAJHByZXRleHRbJ3JzcyddKSB7CgkJCQkJaWYgKEAkcHJldGV4dFsncydd
KQoJCQkJCQkkX1BPU1RbJ3NlY3Rpb24nXSA9ICRwcmV0ZXh0WydzJ107CgkJCQkJaWYgKEAk
cHJldGV4dFsnYyddKQoJCQkJCQkkX1BPU1RbJ2NhdGVnb3J5J10gPSAkcHJldGV4dFsnYydd
OwoJCQkJCW9iX2NsZWFuKCk7CgkJCQkJaW5jbHVkZSB0eHBhdGguJy9wdWJsaXNoL3Jzcy5w
aHAnOwoJCQkJCWV4aXQocnNzKCkpOwoJCQkJfQoKCQkJCWlmIChAJHByZXRleHRbJ2F0b20n
XSkgewoJCQkJCWlmIChAJHByZXRleHRbJ3MnXSkKCQkJCQkJJF9QT1NUWydzZWN0aW9uJ10g
PSAkcHJldGV4dFsncyddOwoJCQkJCWlmIChAJHByZXRleHRbJ2MnXSkKCQkJCQkJJF9QT1NU
WydjYXRlZ29yeSddID0gJHByZXRleHRbJ2MnXTsKCQkJCQlvYl9jbGVhbigpOwoJCQkJCWlu
Y2x1ZGUgdHhwYXRoLicvcHVibGlzaC9hdG9tLnBocCc7CgkJCQkJZXhpdChhdG9tKCkpOwoJ
CQkJfQoKCQkJCSR0aGlzLT5kZWJ1ZygnUHJldGV4dCAnLnByaW50X3IoJHByZXRleHQsIDEp
KTsKCQkJfSBlbHNlIHsKCQkJCSR0aGlzLT5kZWJ1ZygnTk8gQ0hBTkdFUyBNQURFJyk7CgkJ
CX0KCgkJCS8vIExvZyB0aGlzIHBhZ2UgaGl0CgkJCWlmIChAJG9yZ2luaWFsX3N0YXR1cyA9
PSA0MDQpCgkJCQlsb2dfaGl0KCRwcmV0ZXh0WydzdGF0dXMnXSk7CgoJCQkvLyBTdGFydCBv
dXRwdXQgYnVmZmVyaW5nIGFuZCBwc2V1ZG8gY2FsbGJhY2sgdG8gdGV4dHBhdHRlcm5fZW5k
CgkJCW9iX3N0YXJ0KGFycmF5KCYkdGhpcywgJ190ZXh0cGF0dGVybl9lbmRfY2FsbGJhY2sn
KSk7CgoJCQkvLyBUeFAgNC4wLjUgKHIyNDM2KSBpbnRyb2R1Y2VkIHRoZSB0ZXh0cGF0dGVy
bl9lbmQgY2FsbGJhY2sgbWFraW5nIHRoZSBmb2xsb3dpbmcgcmVkdW5kYW50CgkJCSR2ZXJz
aW9uID0gYXJyYXlfc3VtKGFycmF5X21hcCgKCQkJCWNyZWF0ZV9mdW5jdGlvbignJGxpbmUn
LCAnaWYgKHByZWdfbWF0Y2goXCcvXlwkJy4nTGFzdENoYW5nZWRSZXZpc2lvbjogKFx3Kykg
XCQvXCcsICRsaW5lLCAkbWF0Y2gpKSByZXR1cm4gJG1hdGNoWzFdOycpLAoJCQkJQGZpbGUo
dHhwYXRoIC4gJy9wdWJsaXNoLnBocCcpCgkJCSkpOwoJCQlpZiAoJHZlcnNpb24gPj0gJzI0
MzYnKSByZXR1cm47CgoJCQkvLyBSZW1vdmUgdGhlIHBsdWdpbiBjYWxsYmFja3Mgd2hpY2gg
aGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkCgkJCWZ1bmN0aW9uIGZpbHRlcl9jYWxsYmFja3Mo
JGMpIHsKCQkJCWlmICgkY1snZXZlbnQnXSE9J3RleHRwYXR0ZXJuJykgcmV0dXJuIHRydWU7
CgkJCQlpZiAoQCRjWydmdW5jdGlvbiddWzBdLT5wbHVnaW5fbmFtZSA9PSAnZ2JwX3Blcm1h
bmVudF9saW5rcycgJiYKCQkJCQkJQCRjWydmdW5jdGlvbiddWzFdID09ICdfdGV4dHBhdHRl
cm4nKQoJCQkJewoJCQkJCSRHTE9CQUxTWydnYnBfZm91bmRfc2VsZiddID0gdHJ1ZTsKCQkJ
CQlyZXR1cm4gZmFsc2U7CgkJCQl9CgkJCQlyZXR1cm4gQCRHTE9CQUxTWydnYnBfZm91bmRf
c2VsZiddOwoJCQl9CgkJCSRwbHVnaW5fY2FsbGJhY2sgPSBhcnJheV9maWx0ZXIoJHBsdWdp
bl9jYWxsYmFjaywgJ2ZpbHRlcl9jYWxsYmFja3MnKTsKCQkJdW5zZXQoJEdMT0JBTFNbJ2di
cF9mb3VuZF9zZWxmJ10pOwoKCQkJLy8gUmUtY2FsbCB0ZXh0cGF0dGVybgoJCQl0ZXh0cGF0
dGVybigpOwoKCQkJLy8gQ2FsbCBjdXN0b20gdGV4dHBhdHRlcm5fZW5kIGNhbGxiYWNrCgkJ
CSR0aGlzLT5fdGV4dHBhdHRlcm5fZW5kKCk7CgoJCQkvLyB0ZXh0cGF0dGVybigpIGhhcyBy
dW4sIGtpbGwgdGhlIGNvbm5lY3Rpb24KCQkJZGllKCk7CgkJfQoKCX0gLy8gZnVuY3Rpb24g
X3RleHRwYXR0ZXJuIGVuZAoKCWZ1bmN0aW9uIF90ZXh0cGF0dGVybl9lbmQgKCkgewoJCS8v
IFJlZGlyZWN0IHRvIGEgNDA0IGlmIHRoZSBwYWdlIG51bWJlciBpcyBncmVhdGVyIHRoYW4g
dGhlIG1heCBudW1iZXIgb2YgcGFnZXMKCQkvLyBIYXMgdG8gYmUgYWZ0ZXIgdGV4dHBhdHRl
cm4oKSBhcyAkdGhpc3BhZ2UgaXMgc2V0IGR1cmluZyA8dHhwOmFydGljbGUgLz4KCQlnbG9i
YWwgJHRoaXNwYWdlLCAkcHJldGV4dDsKCQlpZiAoKEAkcHJldGV4dFsncGcnXSAmJiBpc3Nl
dCgkdGhpc3BhZ2UpKSAmJgoJCSgkdGhpc3BhZ2VbJ251bVBhZ2VzJ10gPCAkcHJldGV4dFsn
cGcnXSkpIHsKCQkJb2JfZW5kX2NsZWFuKCk7CgkJCXR4cF9kaWUoZ1R4dCgnNDA0X25vdF9m
b3VuZCcpLCAnNDA0Jyk7CgkJfQoKCQkvLyBTdG9wIG91dHB1dCBidWZmZXJpbmcsIHRoaXMg
c2VuZHMgdGhlIGJ1ZmZlciB0byBfdGV4dHBhdHRlcm5fZW5kX2NhbGxiYWNrKCkKCQl3aGls
ZSAoQG9iX2VuZF9mbHVzaCgpKTsKCgl9IC8vIGZ1bmN0aW9uIF90ZXh0cGF0dGVybl9lbmQg
ZW5kCgoJZnVuY3Rpb24gX3RleHRwYXR0ZXJuX2VuZF9jYWxsYmFjayAoJGh0bWwsICRvdmVy
cmlkZSA9ICcnKSB7CgkJZ2xvYmFsICRwcmV0ZXh0LCAkcHJvZHVjdGlvbl9zdGF0dXM7CgoJ
CWlmICgkb3ZlcnJpZGUpICRwcmV0ZXh0WydwZXJtbGlua19vdmVycmlkZSddID0gJG92ZXJy
aWRlOwoJCSRodG1sID0gcHJlZ19yZXBsYWNlX2NhbGxiYWNrKAoJCQknJWhyZWY9IignLmh1
Lid8XD8pKFteIl0qKSIlJywKCQkJYXJyYXkoJiR0aGlzLCAnX3BhZ2VsaW5rdXJsJyksCgkJ
CSRodG1sCgkJKTsKCQl1bnNldCgkcHJldGV4dFsncGVybWxpbmtfb3ZlcnJpZGUnXSk7CgoJ
CWlmICgkdGhpcy0+cHJlZignZGVidWcnKSAmJiBpbl9hcnJheSgkcHJvZHVjdGlvbl9zdGF0
dXMsIGFycmF5KCdkZWJ1ZycsICd0ZXN0aW5nJykpKSB7CgkJCSRkZWJ1ZyA9IGpvaW4obiwg
JHRoaXMtPmJ1ZmZlcl9kZWJ1Zyk7CgkJCSR0aGlzLT5idWZmZXJfZGVidWcgPSBhcnJheSgp
OwoJCQlpZiAoJGRlYnVnKQoJCQkJJGh0bWwgPSBjb21tZW50KG4uJGRlYnVnLm4pIC4gJGh0
bWw7CgkJfQoKCQlyZXR1cm4gJGh0bWw7Cgl9IC8vIGZ1bmN0aW9uIF90ZXh0cGF0dGVybl9l
bmRfY2FsbGJhY2sgZW5kCgoJZnVuY3Rpb24gY2hlY2tfcGVybWxpbmtfY29uZGl0aW9ucyAo
JHBsLCAkYXJ0aWNsZV9hcnJheSkgewoJCWlmIChlbXB0eSgkYXJ0aWNsZV9hcnJheVsnc2Vj
dGlvbiddKSkgJGFydGljbGVfYXJyYXlbJ3NlY3Rpb24nXSA9IEAkYXJ0aWNsZV9hcnJheVsn
U2VjdGlvbiddOwoJCWlmIChlbXB0eSgkYXJ0aWNsZV9hcnJheVsnY2F0ZWdvcnkxJ10pKSAk
YXJ0aWNsZV9hcnJheVsnY2F0ZWdvcnkxJ10gPSBAJGFydGljbGVfYXJyYXlbJ0NhdGVnb3J5
MSddOwoJCWlmIChlbXB0eSgkYXJ0aWNsZV9hcnJheVsnY2F0ZWdvcnkyJ10pKSAkYXJ0aWNs
ZV9hcnJheVsnY2F0ZWdvcnkyJ10gPSBAJGFydGljbGVfYXJyYXlbJ0NhdGVnb3J5MiddOwoK
CQlpZiAoQCRwbFsnc2V0dGluZ3MnXVsnY29uX2NhdGVnb3J5J10gJiYgKCRwbFsnc2V0dGlu
Z3MnXVsnY29uX2NhdGVnb3J5J10gIT0gJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MSddIHx8
ICRwbFsnc2V0dGluZ3MnXVsnY29uX2NhdGVnb3J5J10gIT0gJGFydGljbGVfYXJyYXlbJ2Nh
dGVnb3J5MiddKSkKCQkJcmV0dXJuIGZhbHNlOwoJCWlmIChAJHBsWydzZXR0aW5ncyddWydj
b25fc2VjdGlvbiddICYmICRwbFsnc2V0dGluZ3MnXVsnY29uX3NlY3Rpb24nXSAhPSAkYXJ0
aWNsZV9hcnJheVsnc2VjdGlvbiddKQoJCQlyZXR1cm4gZmFsc2U7CgoJCXJldHVybiB0cnVl
OwoJfQoKCWZ1bmN0aW9uIF9wZXJtbGlua3VybCAoJGFydGljbGVfYXJyYXksICR0eXBlID0g
UEVSTUxJTktVUkwsICRwbF9pbmRleCA9IE5VTEwpIHsKCQlnbG9iYWwgJHByZXRleHQsICRw
cmVmcywgJHByb2R1Y3Rpb25fc3RhdHVzOwoKCQlpZiAoJHR5cGUgPT0gUEFHRUxJTktVUkwp
CgkJCXJldHVybiAkdGhpcy0+dG9nZ2xlX2N1c3RvbV91cmxfZnVuYygncGFnZWxpbmt1cmwn
LCAkYXJ0aWNsZV9hcnJheSk7CgoJCWlmIChlbXB0eSgkYXJ0aWNsZV9hcnJheSkpIHJldHVy
bjsKCgkJaWYgKCRwbF9pbmRleCkKCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkcGxf
aW5kZXgpOwoJCWVsc2UgewoJCQkvLyBHZXQgdGhlIG1hdGNoZWQgcHJldGV4dCByZXBsYWNl
bWVudCBhcnJheS4KCQkJJG1hdGNoZWQgPSAoY291bnQoJHRoaXMtPm1hdGNoZWRfcGVybWxp
bmspKQoJCQk/ICR0aGlzLT5tYXRjaGVkX3Blcm1saW5rCgkJCTogQGFycmF5X3NoaWZ0KGFy
cmF5X3NsaWNlKCR0aGlzLT5wYXJ0aWFsX21hdGNoZXMsIC0xKSk7CgoJCQlpZiAoIWlzc2V0
KCRwbCkgJiYgJG1hdGNoZWQgJiYgYXJyYXlfa2V5X2V4aXN0cygnaWQnLCAkbWF0Y2hlZCkp
IHsKCQkJCS8vIFRoZSBwZXJtbGluayBpZCBpcyBzdG9yZWQgaW4gdGhlIHByZXRleHQgcmVw
bGFjZW1lbnQgYXJyYXksIHNvIHdlIGNhbiBmaW5kIHRoZSBwZXJtbGluay4KCQkJCSRwbCA9
ICR0aGlzLT5nZXRfcGVybWxpbmsoJG1hdGNoZWRbJ3Blcm1saW5rX2lkJ10pOwoJCQkJZm9y
ZWFjaCAoJHBsWydjb21wb25lbnRzJ10gYXMgJHBsX2MpCgkJCQkJaWYgKGluX2FycmF5KCRw
bF9jWyd0eXBlJ10sIGFycmF5KCdmZWVkJywgJ3BhZ2UnKSkgfHwgISR0aGlzLT5jaGVja19w
ZXJtbGlua19jb25kaXRpb25zKCRwbCwgJGFydGljbGVfYXJyYXkpKSB7CgkJCQkJCXVuc2V0
KCRwbCk7CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJfQoKCQkJaWYgKCFpc3NldCgkcGwpKSB7
CgkJCQkvLyBXZSBoYXZlIG5vIHBlcm1saW5rIGlkIHNvIGdyYWIgdGhlIHBlcm1saW5rIHdp
dGggdGhlIGhpZ2hlc3QgcHJlY2VkZW5jZS4KCQkJCSRwZXJtbGlua3MgPSAkdGhpcy0+Z2V0
X2FsbF9wZXJtbGlua3MoMSwgYXJyYXkoJ2ZlZWQnLCAncGFnZScpKTsKCQkJCWZvcmVhY2gg
KCRwZXJtbGlua3MgYXMgJGtleSA9PiAkcGwpCgkJCQkJaWYgKCEkdGhpcy0+Y2hlY2tfcGVy
bWxpbmtfY29uZGl0aW9ucygkcGwsICRhcnRpY2xlX2FycmF5KSkKCQkJCQkJdW5zZXQoJHBl
cm1saW5rc1ska2V5XSk7CgkJCQkkcGwgPSBhcnJheV9zaGlmdCgkcGVybWxpbmtzKTsKCQkJ
fQoJCX0KCgkJJHVyaSA9ICcnOwoKCQlpZiAoaXNfYXJyYXkoJHBsKSAmJiBhcnJheV9rZXlf
ZXhpc3RzKCdjb21wb25lbnRzJywgJHBsKSkgewoJCQlleHRyYWN0KCRhcnRpY2xlX2FycmF5
KTsKCgkJCWlmICghaXNzZXQoJHRpdGxlKSkgJHRpdGxlID0gJFRpdGxlOwoJCQlpZiAoZW1w
dHkoJHVybF90aXRsZSkpICR1cmxfdGl0bGUgPSBzdHJpcFNwYWNlKCR0aXRsZSk7CgkJCWlm
IChlbXB0eSgkc2VjdGlvbikpICRzZWN0aW9uID0gJFNlY3Rpb247CgkJCWlmIChlbXB0eSgk
cG9zdGVkKSkgJHBvc3RlZCA9ICRQb3N0ZWQ7CgkJCWlmIChlbXB0eSgkYXV0aG9yaWQpKSAk
YXV0aG9yaWQgPSBAJEF1dGhvcklEOwoJCQlpZiAoZW1wdHkoJGNhdGVnb3J5MSkpICRjYXRl
Z29yeTEgPSBAJENhdGVnb3J5MTsKCQkJaWYgKGVtcHR5KCRjYXRlZ29yeTIpKSAkY2F0ZWdv
cnkyID0gQCRDYXRlZ29yeTI7CgkJCWlmIChlbXB0eSgkdGhpc2lkKSkgJHRoaXNpZCA9ICRJ
RDsKCgkJCSRwbF9jb21wb25lbnRzID0gJHBsWydjb21wb25lbnRzJ107CgoJCQkvLyBDaGVj
ayB0byBzZWUgaWYgdGhlcmUgaXMgYSB0aXRsZSBjb21wb25lbnQuCgkJCSR0aXRsZSA9IGZh
bHNlOwoJCQlmb3JlYWNoKCRwbF9jb21wb25lbnRzIGFzICRwbF9jKQoJCQkJaWYgKCRwbF9j
Wyd0eXBlJ10gPT0gJ3RpdGxlJyB8fCAkcGxfY1sndHlwZSddID09ICdpZCcpCgkJCQkJJHRp
dGxlID0gdHJ1ZTsKCgkJCS8vIElmIHRoZXJlIGlzbid0IGEgdGl0bGUgY29tcG9uZW50IHRo
ZW4gd2UgbmVlZCB0byBhcHBlbmQgb25lIHRvIHRoZSBlbmQgb2YgdGhlIFVSSQoJCQlpZiAo
ISR0aXRsZSAmJiAkdGhpcy0+cHJlZignYXV0b21hdGljYWxseV9hcHBlbmRfdGl0bGUnKSkK
CQkJCSRwbF9jb21wb25lbnRzW10gPSBhcnJheSgndHlwZScgPT4gJ3RpdGxlJywgJ3ByZWZp
eCcgPT4gJycsICdzdWZmaXgnID0+ICcnLCAncmVnZXgnID0+ICcnLCAndGV4dCcgPT4gJycp
OwoKCQkJJHVyaSA9IHJ0cmltKGRvU3RyaXAoQCRwcmV0ZXh0WydzdWJwYXRoJ10pLCAnLycp
OwoJCQlmb3JlYWNoICgkcGxfY29tcG9uZW50cyBhcyAkcGxfYykgewoJCQkJJHVyaSAuPSAn
Lyc7CgoJCQkJJHR5cGUgPSAkcGxfY1sndHlwZSddOwoJCQkJc3dpdGNoICgkdHlwZSkgewoJ
CQkJCWNhc2UgJ2NhdGVnb3J5JzoKCQkJCQkJaWYgKCFAJHBsX2NbJ2NhdGVnb3J5J10pICRw
bF9jWydjYXRlZ29yeSddID0gMTsKCQkJCQkJJHByaW1hcnkgPSAnY2F0ZWdvcnknLiAkcGxf
Y1snY2F0ZWdvcnknXTsKCQkJCQkJJHNlY29uZGFyeSA9ICdjYXRlZ29yeScuICgzLShpbnQp
JHBsX2NbJ2NhdGVnb3J5J10pOwoJCQkJCQkkY2hlY2tfY29udGV4dCA9ICgkdGhpcy0+cHJl
Zignam9pbl9wcmV0ZXh0X3RvX3BhZ2VsaW5rcycpICYmICR0aGlzLT5wcmVmKCdjaGVja19w
cmV0ZXh0X2NhdGVnb3J5X2NvbnRleHQnKSk7CgkJCQkJCWlmICghJGNoZWNrX2NvbnRleHQg
fHwgJCRwcmltYXJ5ID09ICRwcmV0ZXh0WydjJ10pCgkJCQkJCQkkdXJpX2MgPSAkJHByaW1h
cnk7CgkJCQkJCWVsc2UgaWYgKCEkY2hlY2tfY29udGV4dCB8fCAkJHNlY29uZGFyeSA9PSAk
cHJldGV4dFsnYyddKQoJCQkJCQkJJHVyaV9jID0gJCRzZWNvbmRhcnk7CgkJCQkJCWVsc2Ug
aWYgKCR0aGlzLT5wcmVmKCdkZWJ1ZycpICYmIGluX2FycmF5KCRwcm9kdWN0aW9uX3N0YXR1
cywgYXJyYXkoJ2RlYnVnJywgJ3Rlc3RpbmcnKSkpCgkJCQkJCQkkdXJpX2MgPSAnLS1JTlZB
TElEX0NBVEVHT1JZLS0nOwoJCQkJCQllbHNlIHsKCQkJCQkJCXVuc2V0KCR1cmkpOwoJCQkJ
CQkJYnJlYWsgMjsKCQkJCQkJfQoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3NlY3Rpb24nOgoJ
CQkJCQkkY2hlY2tfY29udGV4dCA9ICgkdGhpcy0+cHJlZignam9pbl9wcmV0ZXh0X3RvX3Bh
Z2VsaW5rcycpICYmICR0aGlzLT5wcmVmKCdjaGVja19wcmV0ZXh0X3NlY3Rpb25fY29udGV4
dCcpKTsKCQkJCQkJaWYgKCEkY2hlY2tfY29udGV4dCB8fCAkc2VjdGlvbiA9PSAkcHJldGV4
dFsncyddKQoJCQkJCQkJJHVyaV9jID0gJHNlY3Rpb247CgkJCQkJCWVsc2UgewoJCQkJCQkJ
dW5zZXQoJHVyaSk7CgkJCQkJCQlicmVhayAyOwoJCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQkJ
Y2FzZSAndGl0bGUnOiAkdXJpX2MgPSAkdXJsX3RpdGxlOyBicmVhazsKCQkJCQljYXNlICdp
ZCc6ICR1cmlfYyA9ICR0aGlzaWQ7IGJyZWFrOwoJCQkJCWNhc2UgJ2F1dGhvcic6ICR1cmlf
YyA9IHNhZmVfZmllbGQoJ1JlYWxOYW1lJywgJ3R4cF91c2VycycsICJuYW1lIGxpa2UgJ3sk
YXV0aG9yaWR9JyIpOyBicmVhazsKCQkJCQljYXNlICdsb2dpbic6ICR1cmlfYyA9ICRhdXRo
b3JpZDsgYnJlYWs7CgkJCQkJY2FzZSAnZGF0ZSc6ICR1cmlfYyA9IGV4cGxvZGUoJy8nLCBk
YXRlKCdZL20vZCcsICRwb3N0ZWQpKTsgYnJlYWs7CgkJCQkJY2FzZSAneWVhcic6ICR1cmlf
YyA9IGRhdGUoJ1knLCAkcG9zdGVkKTsgYnJlYWs7CgkJCQkJY2FzZSAnbW9udGgnOiAkdXJp
X2MgPSBkYXRlKCdtJywgJHBvc3RlZCk7IGJyZWFrOwoJCQkJCWNhc2UgJ2RheSc6ICR1cmlf
YyA9IGRhdGUoJ2QnLCAkcG9zdGVkKTsgYnJlYWs7CgkJCQkJY2FzZSAnY3VzdG9tJzoKCQkJ
CQkJaWYgKCR1cmlfYyA9IEAkYXJ0aWNsZV9hcnJheVskcHJlZnNbImN1c3RvbV97JHBsX2Nb
J2N1c3RvbSddfV9zZXQiXV0pOwoJCQkJCQllbHNlIGlmICgkdXJpX2MgPSBAJGFydGljbGVf
YXJyYXlbImN1c3RvbV97JHBsX2NbJ2N1c3RvbSddfSJdKTsKCQkJCQkJZWxzZSBpZiAoJHRo
aXMtPnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rpb25fc3RhdHVzLCBhcnJh
eSgnZGVidWcnLCAndGVzdGluZycpKSkKCQkJCQkJCSR1cmlfYyA9ICctLVVOU0VUX0NVU1RP
TV9GSUVMRC0tJzsKCQkJCQkJZWxzZSB7CgkJCQkJCQl1bnNldCgkdXJpKTsKCQkJCQkJCWJy
ZWFrIDI7CgkJCQkJCX0KCQkJCQlicmVhazsKCQkJCQljYXNlICd0ZXh0JzogJHVyaV9jID0g
JHBsX2NbJ3RleHQnXTsgYnJlYWs7CgkJCQkJY2FzZSAncmVnZXgnOgoJCQkJCQkvLyBDaGVj
ayB0byBzZWUgaWYgcmVnZXggaXMgdmFsaWQgd2l0aG91dCBvdXRwdXR0aW5nIGVycm9yIG1l
c3NhZ2VzLgoJCQkJCQlvYl9zdGFydCgpOwoJCQkJCQlwcmVnX21hdGNoKCRwbF9jWydyZWdl
eCddLCAkcGxfY1sncmVnZXgnXSwgJHJlZ2V4X21hdGNoZXMpOwoJCQkJCQkkaXNfdmFsaWRf
cmVnZXggPSAhKG9iX2dldF9jbGVhbigpKTsKCQkJCQkJaWYgKCRpc192YWxpZF9yZWdleCkg
ewoJCQkJCQkJJGtleSA9ICJwZXJtbGlua19yZWdleF97JHBsX2NbJ25hbWUnXX0iOwoJCQkJ
CQkJJHVyaV9jID0gKGFycmF5X2tleV9leGlzdHMoJGtleSwgJHByZXRleHQpKSA/ICRwcmV0
ZXh0WyRrZXldIDogJHJlZ2V4X21hdGNoZXNbMF07CgkJCQkJCX0gZWxzZSBpZiAoJHRoaXMt
PnByZWYoJ2RlYnVnJykpCgkJCQkJCQkkdXJpX2MgPSAnLS1JTlZBTElEX1JFR0VYLS0nOwoJ
CQkJCWJyZWFrOwoJCQkJfQoKCQkJCWlmIChlbXB0eSgkdXJpX2MpKQoJCQkJCWlmICgkdGhp
cy0+cHJlZignZGVidWcnKSAmJiBpbl9hcnJheSgkcHJvZHVjdGlvbl9zdGF0dXMsIGFycmF5
KCdkZWJ1ZycsICd0ZXN0aW5nJykpKQoJCQkJCQkkdXJpX2MgPSAnLS1QRVJNTElOS19GT1JN
QVRfRVJST1ItLSc7CgkJCQkJZWxzZSB7CgkJCQkJCXVuc2V0KCR1cmkpOwoJCQkJCQlicmVh
azsKCQkJCQl9CgoJCQkJaWYgKEAkcGxfY1sncHJlZml4J10pCgkJCQkJJHVyaSAuPSAkdGhp
cy0+ZW5jb2RlX3VybCgkcGxfY1sncHJlZml4J10pOwoKCQkJCWlmIChpc19hcnJheSgkdXJp
X2MpKSB7CgkJCQkJZm9yZWFjaCAoJHVyaV9jIGFzICR1cmlfYzIpCgkJCQkJCSR1cmkgLj0g
JHRoaXMtPmVuY29kZV91cmwoJHVyaV9jMikgLiAnLyc7CgkJCQkJJHVyaSA9IHJ0cmltKCR1
cmksICcvJyk7CgkJCQl9IGVsc2UKCQkJCQkkdXJpIC49ICR0aGlzLT5lbmNvZGVfdXJsKCR1
cmlfYyk7CgoJCQkJaWYgKEAkcGxfY1snc3VmZml4J10pCgkJCQkJJHVyaSAuPSAkdGhpcy0+
ZW5jb2RlX3VybCgkcGxfY1snc3VmZml4J10pOwoKCQkJCXVuc2V0KCR1cmlfYyk7CgkJCX0K
CgkJCWlmIChpc3NldCgkdXJpKSkKCQkJCSR1cmkgLj0gJy8nOwoJCX0KCgkJaWYgKCR1cmlf
ZW1wdHkgPSBlbXB0eSgkdXJpKSkgewoJCQkvLyBJdCBpcyBwb3NzaWJsZSB0aGUgdXJpIGlz
IHN0aWxsIGVtcHR5IGlmIHRoZXJlIGlzIG5vIG1hdGNoIG9yIGlmIHdlJ3JlIHVzaW5nCgkJ
CS8vIHN0cmljdCBtYXRjaGluZyBpZiBzbyB0cnkgdGhlIGRlZmF1bHQgcGVybWxpbmsgbW9k
ZS4KCQkJJHVyaSA9ICR0aGlzLT50b2dnbGVfcGVybWxpbmtfbW9kZSgncGVybWxpbmt1cmwn
LCAkYXJ0aWNsZV9hcnJheSk7CgkJfQoKCQlpZiAoJHRoaXMtPnByZWYoJ29taXRfdHJhaWxp
bmdfc2xhc2gnKSkKCQkJJHVyaSA9IHJ0cmltKCR1cmksICcvJyk7CgoJCWlmICghJHVyaV9l
bXB0eSAmJiBpbl9hcnJheSh0eHBhdGguJy9wdWJsaXNoL3Jzcy5waHAnLCBnZXRfaW5jbHVk
ZWRfZmlsZXMoKSkgfHwgaW5fYXJyYXkodHhwYXRoLicvcHVibGlzaC9hdG9tLnBocCcsIGdl
dF9pbmNsdWRlZF9maWxlcygpKSB8fCB0eHBpbnRlcmZhY2UgPT0gJ2FkbWluJykgewoJCQkk
aG9zdCA9IHJ0cmltKHN0cl9yZXBsYWNlKHJ0cmltKGRvU3RyaXAoQCRwcmV0ZXh0WydzdWJw
YXRoJ10pLCAnLycpLCAnJywgaHUpLCAnLycpOwoJCQkkdXJpID0gJGhvc3QgLiAkdXJpOwoJ
CX0KCgkJcmV0dXJuICgkdGhpcy0+cHJlZignZm9yY2VfbG93ZXJjYXNlX3VybHMnKSkgPyBz
dHJ0b2xvd2VyKCR1cmkpIDogJHVyaTsKCX0KCglmdW5jdGlvbiBfcGFnZWxpbmt1cmwgKCRw
YXJ0cykgewoJCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkJCSdwYXRoJwkJPT4gJ2luZGV4LnBo
cCcsCgkJCSdxdWVyeScJCT0+ICcnLAoJCQknZnJhZ21lbnQnCT0+ICcnLAoJCSksIHBhcnNl
X3VybChodG1sX2VudGl0eV9kZWNvZGUoc3RyX3JlcGxhY2UoJyYjMzg7JywgJyYnLCAkcGFy
dHNbMl0pKSkpKTsKCgkJLy8gVGlkeSB1cCBsaW5rcyBiYWNrIHRvIHRoZSBzaXRlIGhvbWVw
YWdlCgkJaWYgKCRwYXRoID09ICdpbmRleC5waHAnICYmIGVtcHR5KCRxdWVyeSkpCgkJCXJl
dHVybiAnaHJlZj0iJyAuaHUuICciJzsKCgkJLy8gRml4IG1hdGNoZXMgbGlrZSBocmVmPSI/
cz1mb28iCgkJZWxzZSBpZiAoJHBhdGggJiYgZW1wdHkoJHF1ZXJ5KSAmJiAkcGFydHNbMV0g
PT0gJz8nKSB7CgkJCSRxdWVyeSA9ICRwYXRoOwoJCQkkcGF0aCA9ICdpbmRleC5waHAnOwoJ
CX0KCgkJLy8gQ2hlY2sgdG8gc2VlIGlmIHRoZXJlIGlzIHF1ZXJ5IHRvIHdvcmsgd2l0aC4K
CQllbHNlIGlmIChlbXB0eSgkcXVlcnkpIHx8ICRwYXRoICE9ICdpbmRleC5waHAnIHx8IHN0
cnBvcygkcXVlcnksICcvJykgPT09IHRydWUpCgkJCXJldHVybiAkcGFydHNbMF07CgoJCS8v
ICcmYW1wOycgd2lsbCBicmVhayBwYXJzZV9zdHIoKSBpZiB0aGV5IGFyZSBmb3VuZCBpbiBh
IHF1ZXJ5IHN0cmluZwoJCSRxdWVyeSA9IHN0cl9yZXBsYWNlKCcmYW1wOycsICcmJywgJHF1
ZXJ5KTsKCgkJaWYgKCRmcmFnbWVudCkKCQkJJGZyYWdtZW50ID0gJyMnLiRmcmFnbWVudDsK
CgkJZ2xvYmFsICRwcmV0ZXh0OwoJCXBhcnNlX3N0cigkcXVlcnksICRxdWVyeV9wYXJ0KTsK
CQlpZiAoIWFycmF5X2tleV9leGlzdHMoJ3BnJywgJHF1ZXJ5X3BhcnQpKQoJCQkkcXVlcnlf
cGFydFsncGcnXSA9IDA7CgkJaWYgKCFhcnJheV9rZXlfZXhpc3RzKCdpZCcsICRxdWVyeV9w
YXJ0KSkKCQkJJHF1ZXJ5X3BhcnRbJ2lkJ10gPSAwOwoJCWlmICghYXJyYXlfa2V5X2V4aXN0
cygncnNzJywgJHF1ZXJ5X3BhcnQpKQoJCQkkcXVlcnlfcGFydFsncnNzJ10gPSAwOwoJCWlm
ICghYXJyYXlfa2V5X2V4aXN0cygnYXRvbScsICRxdWVyeV9wYXJ0KSkKCQkJJHF1ZXJ5X3Bh
cnRbJ2F0b20nXSA9IDA7CgkJaWYgKCR0aGlzLT5wcmVmKCdqb2luX3ByZXRleHRfdG9fcGFn
ZWxpbmtzJykpCgkJCWV4dHJhY3QoYXJyYXlfbWVyZ2UoJHByZXRleHQsICRxdWVyeV9wYXJ0
KSk7CgkJZWxzZQoJCQlleHRyYWN0KCRxdWVyeV9wYXJ0KTsKCgkJLy8gV2UgaGF2ZSBhIGlk
LCBwYXNzIHRvIHBlcm1saW5rdXJsKCkKCQlpZiAoJGlkKSB7CgkJCWlmIChAJHMgPT0gJ2Zp
bGVfZG93bmxvYWQnKSB7CgkJCQkkdGl0bGUgPSAodmVyc2lvbl9jb21wYXJlKCRkYnZlcnNp
b24sICc0LjInLCAnPj0nKSkgPyBOVUxMIDogc2FmZV9maWVsZCgnZmlsZW5hbWUnLCAndHhw
X2ZpbGUnLCAiaWQgPSAneyRpZH0nIik7CgkJCQkkdXJsID0gJHRoaXMtPnRvZ2dsZV9wZXJt
bGlua19tb2RlKCdmaWxlZG93bmxvYWR1cmwnLCBhcnJheSgkaWQsICR0aXRsZSksIHRydWUp
OwoJCQl9IGVsc2UgewoJCQkJJHJzID0gc2FmZV9yb3coJyosIElEIGFzIHRoaXNpZCwgdW5p
eF90aW1lc3RhbXAoUG9zdGVkKSBhcyBwb3N0ZWQnLCAndGV4dHBhdHRlcm4nLCAiSUQgPSAn
eyRpZH0nIik7CgkJCQkkdXJsID0gJHRoaXMtPl9wZXJtbGlua3VybCgkcnMsIFBFUk1MSU5L
VVJMKSAuICRmcmFnbWVudDsKCQkJfQoJCQlyZXR1cm4gJ2hyZWY9IicuICR1cmwgLiciJzsK
CQl9CgoJCWlmIChAJHMgPT0gJ2RlZmF1bHQnKQoJCQl1bnNldCgkcyk7CgoJCS8vIFNvbWUg
VHhQIHRhZ3MsIGUuZy4gPHR4cDpmZWVkX2xpbmsgLz4gdXNlICdzZWN0aW9uJyBvciAnY2F0
ZWdvcnknIGluY29uc2lzdGVudAoJCS8vIHdpdGggbW9zdCBvdGhlciB0YWdzLiBQcm9jZXNz
IHRoZXNlIG5vdyBzbyB3ZSBvbmx5IGhhdmUgdG8gY2hlY2sgJHMgYW5kICRjLgoJCWlmIChA
JHNlY3Rpb24gJiYgISRzKQoJCQkkcyA9ICRzZWN0aW9uOwoJCWlmIChAJGNhdGVnb3J5ICYm
ICEkYykKCQkJJGMgPSAkY2F0ZWdvcnk7CgoJCS8vIERlYnVnZ2luZyBmb3IgYnVmZmVycwoJ
CSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICd1cmw6ICcuc3RyX3JlcGxhY2UoJyZhbXA7Jywg
JyYnLCAkcGFydHNbMV0uJHBhcnRzWzJdKTsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAn
cGF0aDogJy4kcGF0aDsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncXVlcnk6ICcuJHF1
ZXJ5OwoJCWlmICgkZnJhZ21lbnQpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdmcmFnbWVu
dDogJy4kZnJhZ21lbnQ7CgoJCWlmIChAJGlkKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAn
aWQ6ICcuJGlkOwoJCWlmIChAJHMpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdzOiAnLiRz
OwoJCWlmIChAJGMpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdjOiAnLiRjOwoJCWlmIChA
JHJzcykgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3JzczogJy4kcnNzOwoJCWlmIChAJGF0
b20pICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdhdG9tOiAnLiRhdG9tOwoJCWlmIChAJHBn
KSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncGc6ICcuJHBnOwoJCWlmIChAJHEpICR0aGlz
LT5idWZmZXJfZGVidWdbXSA9ICdxOiAnLiRxOwoKCQlpZiAoQCRwcmV0ZXh0WydwZXJtbGlu
a19vdmVycmlkZSddKSB7CgkJCSRvdmVycmlkZV9pZHMgPSBleHBsb2RlKCcsJywgJHByZXRl
eHRbJ3Blcm1saW5rX292ZXJyaWRlJ10pOwoJCQlmb3JlYWNoICgkb3ZlcnJpZGVfaWRzIGFz
ICRvdmVycmlkZV9pZCkgewoJCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkb3ZlcnJp
ZGVfaWQpOwoJCQkJaWYgKGNvdW50KCRwbCkgPiAwKSAkcGVybWxpbmtzW10gPSAkcGw7CgkJ
CX0KCQl9CgoJCWlmIChlbXB0eSgkcGVybWxpbmtzKSkgewoJCQkkcGVybWxpbmtzID0gJHRo
aXMtPmdldF9hbGxfcGVybWxpbmtzKDEpOwoKCQkJJHBlcm1saW5rc1snZ2JwX3Blcm1hbmVu
dF9saW5rc19kZWZhdWx0J10gPSBhcnJheSgKCQkJCSdjb21wb25lbnRzJyA9PiBhcnJheSgK
CQkJCQlhcnJheSgndHlwZScgPT4gJ3RleHQnLCAndGV4dCcgPT4gc3RydG9sb3dlcih1cmxl
bmNvZGUoZ1R4dCgnY2F0ZWdvcnknKSkpKSwKCQkJCQlhcnJheSgndHlwZScgPT4gJ2NhdGVn
b3J5JyksCgkJCQkpLAoJCQkJJ3NldHRpbmdzJyA9PiBhcnJheSgKCQkJCQkncGxfbmFtZScg
PT4gJ2dicF9wZXJtYW5lbnRfbGlua3NfZGVmYXVsdCcsICdwbF9wcmVjZWRlbmNlJyA9PiAn
JywgJ3BsX3ByZXZpZXcnID0+ICcnLAoJCQkJCSdjb25fc2VjdGlvbicgPT4gJycsICdjb25f
Y2F0ZWdvcnknID0+ICcnLCAnZGVzX3NlY3Rpb24nID0+ICcnLCAnZGVzX2NhdGVnb3J5JyA9
PiAnJywKCQkJCQknZGVzX3Blcm1saW5rJyA9PiAnJywgJ2Rlc19mZWVkJyA9PiAnJywgJ2Rl
c19sb2NhdGlvbicgPT4gJycsCgkJCSkpOwoJCX0KCgkJJGN1cnJlbnRfc2VnbWVudHMgPSBl
eHBsb2RlKCcvJywgbHRyaW0oJHByZXRleHRbJ3JlcXVlc3RfdXJpJ10sICcvJykpOwoKCQkk
aGlnaGVzdF9tYXRjaF9jb3VudCA9IG51bGw7CgkJZm9yZWFjaCAoJHBlcm1saW5rcyBhcyAk
a2V5ID0+ICRwbCkgewoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnVGVzdGluZyBwZXJt
bGluazogJy4gJHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ10gLicgLSAnLiAka2V5OwoJCQkk
dGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnUHJldmlldzogJy4gJHBsWydzZXR0aW5ncyddWydw
bF9wcmV2aWV3J107CgkJCSRvdXQgPSBhcnJheSgpOyAka2V5cyA9IGFycmF5KCk7ICRtYXRj
aF9jb3VudCA9IDA7CgkJCWZvcmVhY2ggKCRwbFsnY29tcG9uZW50cyddIGFzICRpID0+ICRw
bF9jKSB7CgkJCQlzd2l0Y2ggKCRwbF9jWyd0eXBlJ10pIHsKCQkJCQljYXNlICd0ZXh0JzoK
CQkJCQkJJG91dFtdID0gJHBsX2NbJ3RleHQnXTsKCQkJCQlicmVhazsKCQkJCQljYXNlICdy
ZWdleCc6CgkJCQkJCSRvdXRbXSA9ICRwcmV0ZXh0WydwZXJtbGlua19yZWdleF8nLiRwbF9j
WyduYW1lJ11dOwoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3NlY3Rpb24nOgoJCQkJCQlpZiAo
QCRzKSAkb3V0W10gPSAkczsKCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJyZWFrOwoJCQkJ
CWNhc2UgJ2NhdGVnb3J5JzoKCQkJCQkJaWYgKEAkYykgJG91dFtdID0gJGM7CgkJCQkJCWVs
c2UgYnJlYWsgMjsKCQkJCQlicmVhazsKCQkJCQljYXNlICdmZWVkJzoKCQkJCQkJaWYgKEAk
cnNzKSAka2V5c1tdID0gJG91dFtdID0gJ3Jzcyc7CgkJCQkJCWVsc2UgaWYgKEAkYXRvbSkg
JGtleXNbXSA9ICRvdXRbXSA9ICdhdG9tJzsKCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJy
ZWFrOwoJCQkJCWNhc2UgJ3NlYXJjaCc6CgkJCQkJCWlmIChAJHEpICRvdXRbXSA9ICRxOwoJ
CQkJCQllbHNlIGJyZWFrIDI7CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAncGFnZSc6CgkJCQkJ
CWlmIChAJHBnKSB7CgkJCQkJCQkkb3V0W10gPSAkcGc7CgkJCQkJCQkka2V5c1tdID0gJ3Bn
JzsKCQkJCQkJfQoJCQkJCQllbHNlIGJyZWFrIDI7CgkJCQkJYnJlYWs7CgkJCQkJZGVmYXVs
dDogYnJlYWsgMjsKCQkJCX0KCQkJCWlmIChpbl9hcnJheSgkcGxfY1sndHlwZSddLCBhcnJh
eSgndGV4dCcsICdyZWdleCcpKSkgewoJCQkJCWlmICgkY3VycmVudF9zZWdtZW50c1skaV0g
PT0gZW5kKCRvdXQpICYmIHN0cmxlbihlbmQoJG91dCkpID4gMCkKCQkJCQkJJG1hdGNoX2Nv
dW50ICs9ICR0aGlzLT5wcmVmKCd0ZXh0X2FuZF9yZWdleF9zZWdtZW50X3Njb3JlcycpOwoJ
CQkJfQoJCQkJZWxzZWlmICghaW5fYXJyYXkoJHBsX2NbJ3R5cGUnXSwgYXJyYXkoJ3RpdGxl
JywgJ2lkJykpKQoJCQkJCSRtYXRjaF9jb3VudCsrOwoJCQkJZWxzZSBicmVhazsKCQkJfQoK
CQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ01hdGNoIGNvdW50OiAnLiAkbWF0Y2hfY291
bnQ7CgoJCQkvLyBUb2RvOiBTdG9yZSBhY2NvcmRpbmcgdG8gdGhlIHByZWNlZGVuY2UgdmFs
dWUKCQkJaWYgKGNvdW50KCRvdXQpID4gMCAmJiAoJG1hdGNoX2NvdW50ID4gJGhpZ2hlc3Rf
bWF0Y2hfY291bnQgfHwgIWlzc2V0KCRoaWdoZXN0X21hdGNoX2NvdW50KSkgJiYKCQkJISgk
a2V5ID09ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1bHQnICYmICEkbWF0Y2hfY291bnQp
KSB7CgkJCQlleHRyYWN0KCRwbFsnc2V0dGluZ3MnXSk7CgkJCQlpZiAoKGVtcHR5KCRzKSAm
JiBlbXB0eSgkYykpIHx8CgkJCQkoZW1wdHkoJGNvbl9zZWN0aW9uKSB8fCBAJHMgPT0gJGNv
bl9zZWN0aW9uKSB8fAoJCQkJKGVtcHR5KCRjb25fY2F0ZWdvcnkpIHx8IEAkYyA9PSAkY29u
X2NhdGVnb3J5KSkgewoJCQkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdOZXcgaGlnaGVz
dCBtYXRjaCEgJy4gaW1wbG9kZSgnLycsICRvdXQpOwoJCQkJCSRoaWdoZXN0X21hdGNoX2Nv
dW50ID0gJG1hdGNoX2NvdW50OwoJCQkJCSRtYXRjaCA9ICRvdXQ7CgkJCQkJJG1hdGNoX2tl
eXMgPSAka2V5czsKCQkJCX0KCQkJfQoJCX0KCgkJaWYgKGVtcHR5KCRtYXRjaCkgJiYgKCEo
QCRwZyAmJiAkdGhpcy0+cHJlZignY2xlYW5fcGFnZV9hcmNoaXZlX2xpbmtzJykpIHx8IChA
JHBnICYmIEAkcSkpKSB7CgkJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0LCAkcGVybWxpbmtf
bW9kZTsKCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ05vIG1hdGNoJzsKCQkJJHRoaXMt
PmJ1ZmZlcl9kZWJ1Z1tdID0gJy0tLS0nOwoJCQkkcHJldGV4dFsncGVybWxpbmtfbW9kZSdd
ID0gJHBlcm1saW5rX21vZGUgPSAkcHJlZnNbJ3Blcm1saW5rX21vZGUnXTsKCQkJJHVybCA9
IHBhZ2VsaW5rdXJsKCRxdWVyeV9wYXJ0KTsKCQkJJHByZXRleHRbJ3Blcm1saW5rX21vZGUn
XSA9ICRwZXJtbGlua19tb2RlID0gJ21lc3N5JzsKCQkJcmV0dXJuICdocmVmPSInLiAkdXJs
IC4nIic7CgkJfQoKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnbWF0Y2g6ICcuICAgICAg
c2VyaWFsaXplKCRtYXRjaCk7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ21hdGNoX2tl
eXM6ICcuIHNlcmlhbGl6ZSgkbWF0Y2hfa2V5cyk7CgoJCSR1cmwgPSAnLycuam9pbignLycs
ICRtYXRjaCk7CgkJJHVybCA9IHJ0cmltKGh1LCAnLycpLnJ0cmltKCR1cmwsICcvJykuJy8n
OwoKCQlpZiAoJHJzcyAmJiAhaW5fYXJyYXkoJ3JzcycsICRtYXRjaF9rZXlzKSkKCQkJJHVy
bCAuPSAncnNzJzsKCQllbHNlIGlmICgkYXRvbSAmJiAhaW5fYXJyYXkoJ2F0b20nLCAkbWF0
Y2hfa2V5cykpCgkJCSR1cmwgLj0gJ2F0b20nOwoJCWVsc2UgaWYgKCRwZyAmJiAhaW5fYXJy
YXkoJ3BnJywgJG1hdGNoX2tleXMpKSB7CgkJCWlmICgkdGhpcy0+cHJlZignY2xlYW5fcGFn
ZV9hcmNoaXZlX2xpbmtzJykpCgkJCQkkdXJsIC49ICRwZzsKCQkJZWxzZSB7CgkJCQkkdXJs
IC49ICc/cGc9Jy4gJHBnOwoJCQkJJG9taXRfdHJhaWxpbmdfc2xhc2ggPSB0cnVlOwoJCQl9
CgkJfQoKCQkkdXJsID0gcnRyaW0oJHVybCwgJy8nKSAuICcvJzsKCgkJaWYgKEAkb21pdF90
cmFpbGluZ19zbGFzaCB8fCAkdGhpcy0+cHJlZignb21pdF90cmFpbGluZ19zbGFzaCcpKQoJ
CQkkdXJsID0gcnRyaW0oJHVybCwgJy8nKTsKCgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0g
JHVybDsKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnLS0tLSc7CgoJCWlmICgkcGF0aCA9
PSAnaW5kZXgucGhwJyAmJiAkdXJsICE9IGh1KQoJCQlyZXR1cm4gJ2hyZWY9IicuICR1cmwg
LiAkZnJhZ21lbnQgLiciJzsKCgkJLyoKCQkxID0gaW5kZXgsIHRleHRwYXR0ZXJuL2Nzcywg
TlVMTCAoPWluZGV4KQoJCTIgPSBpZCwgcywgc2VjdGlvbiwgYywgY2F0ZWdvcnksIHJzcywg
YXRvbSwgcGcsIHEsIChuLCBwLCBtb250aCwgYXV0aG9yKQoJCSovCgoJCXJldHVybiAoJHRo
aXMtPnByZWYoJ2ZvcmNlX2xvd2VyY2FzZV91cmxzJykpID8gc3RydG9sb3dlcigkcGFydHNb
MF0pIDogJHBhcnRzWzBdOwoJfQoKCWZ1bmN0aW9uIHNldF9wZXJtbGlua19tb2RlICgkcmVz
ZXRfZnVuY3Rpb24gPSBmYWxzZSkgewoJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0LCAkcGVy
bWxpbmtfbW9kZTsKCQkkcHJlZnNbJ2N1c3RvbV91cmxfZnVuYyddID0gYXJyYXkoJiR0aGlz
LCAnX3Blcm1saW5rdXJsJyk7CgoJCWlmICghJHJlc2V0X2Z1bmN0aW9uKQoJCQkkcHJldGV4
dFsncGVybWxpbmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAnbWVzc3knOwoJCWVsc2UK
CQkJJHByZXRleHRbJ3Blcm1saW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJHByZWZz
WydwZXJtbGlua19tb2RlJ107Cgl9CgoJZnVuY3Rpb24gcmVzZXRfcGVybWxpbmtfbW9kZSAo
KSB7CgkJZ2xvYmFsICRwcmVmcywgJHByZXRleHQsICRwZXJtbGlua19tb2RlOwoJCXVuc2V0
KCRwcmVmc1snY3VzdG9tX3VybF9mdW5jJ10pOwoJCSRwcmV0ZXh0WydwZXJtbGlua19tb2Rl
J10gPSAkcGVybWxpbmtfbW9kZSA9ICRwcmVmc1sncGVybWxpbmtfbW9kZSddOwoJfQoKCWZ1
bmN0aW9uIHRvZ2dsZV9jdXN0b21fdXJsX2Z1bmMgKCRmdW5jLCAkYXR0cyA9IE5VTEwsICR0
b29nbGVfcGVybWxpbmtfbW9kZSA9IGZhbHNlLCAkZXhwYW5kX2FyZ3VtZW50cyA9IGZhbHNl
KSB7CgkJZ2xvYmFsICRwcmVmcywgJHByZXRleHQ7CgoJCWlmICgkdG9vZ2xlX3Blcm1saW5r
X21vZGUpIHsKCQkJZ2xvYmFsICRwZXJtbGlua19tb2RlOwoJCQkkX3Blcm1saW5rX21vZGUg
PSAkcGVybWxpbmtfbW9kZTsKCQl9CgoJCSRfY2FsbF91c2VyX2Z1bmMgPSBAJHByZWZzWydj
dXN0b21fdXJsX2Z1bmMnXTsKCgkJdW5zZXQoJHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXSk7
CgkJaWYgKCR0b29nbGVfcGVybWxpbmtfbW9kZSkKCQkJJHByZXRleHRbJ3Blcm1saW5rX21v
ZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJHByZWZzWydwZXJtbGlua19tb2RlJ107CgoJCWlm
IChpc19jYWxsYWJsZSgkZnVuYykpIHsKCQkJaWYgKGlzX2FycmF5KCRhdHRzKSBhbmQgJGV4
cGFuZF9hcmd1bWVudHMpCgkJCQkkcnMgPSBjYWxsX3VzZXJfZnVuY19hcnJheSgkZnVuYywg
JGF0dHMpOwoJCQllbHNlCgkJCQkkcnMgPSBjYWxsX3VzZXJfZnVuYygkZnVuYywgJGF0dHMp
OwoJCX0KCgkJJHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXSA9ICRfY2FsbF91c2VyX2Z1bmM7
CgoJCWlmICgkdG9vZ2xlX3Blcm1saW5rX21vZGUpCgkJCSRwcmV0ZXh0WydwZXJtbGlua19t
b2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICRfcGVybWxpbmtfbW9kZTsKCgkJcmV0dXJuICRy
czsKCX0KCglmdW5jdGlvbiB0b2dnbGVfcGVybWxpbmtfbW9kZSAoJGZ1bmMsICRhdHRzID0g
TlVMTCwgJGV4cGFuZF9hcmd1bWVudHMgPSBmYWxzZSkgewoJCXJldHVybiAkdGhpcy0+dG9n
Z2xlX2N1c3RvbV91cmxfZnVuYygkZnVuYywgJGF0dHMsIHRydWUsICRleHBhbmRfYXJndW1l
bnRzKTsKCX0KCglmdW5jdGlvbiBlbmNvZGVfdXJsICgkdGV4dCkgewoJCXJldHVybiB1cmxl
bmNvZGUodHJpbShkdW1iRG93bih1cmxkZWNvZGUoJHRleHQpKSkpOwoJfQoKCWZ1bmN0aW9u
IGRlYnVnICgpIHsKCQlpZiAoJHRoaXMtPnByZWYoJ2RlYnVnJykpIHsKCQkJZ2xvYmFsICRw
cm9kdWN0aW9uX3N0YXR1czsKCQkJJGEgPSBmdW5jX2dldF9hcmdzKCk7CgoJCQlpZiAoQHR4
cGludGVyZmFjZSA9PSAnYWRtaW4nKQoJCQkJZm9yZWFjaCAoJGEgYXMgJHRoaW5nKQoJCQkJ
CWRtcCgkdGhpbmcpOwoKCQkJaWYgKEB0eHBpbnRlcmZhY2UgPT0gJ3B1YmxpYycgJiYgaW5f
YXJyYXkoJHByb2R1Y3Rpb25fc3RhdHVzLCBhcnJheSgnZGVidWcnLCAndGVzdGluZycpKSkK
CQkJCWZvcmVhY2ggKCRhIGFzICR0aGluZykKCQkJCQllY2hvIGNvbW1lbnQoaXNfc2NhbGFy
KCR0aGluZykgPyBzdHJ2YWwoJHRoaW5nKSA6IHZhcl9leHBvcnQoJHRoaW5nLCB0cnVlKSks
bjsKCQl9Cgl9Cn0KCmNsYXNzIFBlcm1hbmVudExpbmtzQnVpbGRUYWJWaWV3IGV4dGVuZHMg
R0JQQWRtaW5UYWJWaWV3CnsKCXZhciAkcGVybWlzc2lvbnMgPSAnMSwyJzsKCWZ1bmN0aW9u
IHByZWxvYWQgKCkgewoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhpcywgJ3Bvc3Rf
c2F2ZV9wZXJtbGluaycpLCAkdGhpcy0+cGFyZW50LT5ldmVudCwgZ2JwX3NhdmUsIDEpOwoJ
CXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhpcywgJ3Bvc3Rfc2F2ZV9wZXJtbGluaycp
LCAkdGhpcy0+cGFyZW50LT5ldmVudCwgZ2JwX3Bvc3QsIDEpOwoJfQoKCWZ1bmN0aW9uIG1h
aW4gKCkgewoJCWdsb2JhbCAkcHJlZnM7CgkJZXh0cmFjdChncHNhKGFycmF5KCdzdGVwJywg
Z2JwX2lkKSkpOwoKCQkvLyBXaXRoIGhhdmUgYW4gSUQsIGVpdGhlciB0aGUgcGVybWxpbmsg
aGFzIGp1c3QgYmVlbiBzYXZlZCBvciB0aGUgdXNlciB3YW50cyB0byBlZGl0IGl0CgkJaWYg
KCRpZCkgewoJCQkvLyBOZXdseSBzYXZlZCBvciBiZWVuaW5nIGVkaXRlZCwgZWl0aGVyIHdh
eSB3ZSdyZSBlZGl0aW5nIGEgcGVybWxpbmsKCQkJJHN0ZXAgPSBnYnBfc2F2ZTsKCgkJCS8v
IFVzZSB0aGUgSUQgdG8gZ3JhYiB0aGUgcGVybWxpbmsgZGF0YSAoY29tcG9uZW50cyAmIHNl
dHRpbmdzKQoJCQkkcGVybWxpbmsgPSAkdGhpcy0+cGFyZW50LT5nZXRfcGVybWxpbmsoJGlk
KTsKCQkJJGNvbXBvbmVudHMgPSAkdGhpcy0+cGhwQXJyYXlUb0pzQXJyYXkoJ2NvbXBvbmVu
dHMnLCAkcGVybWxpbmtbJ2NvbXBvbmVudHMnXSk7CgkJCSRzZXR0aW5ncyA9ICRwZXJtbGlu
a1snc2V0dGluZ3MnXTsKCQl9IGVsc2UgewoJCQkvLyBDcmVhdGluZyBhIG5ldyBJRCBhbmQg
cGVybWxpbmsuCgkJCSRzdGVwID0gZ2JwX3Bvc3Q7CgkJCSRpZCA9IHVuaXFpZCgnJyk7CgoJ
CQkvLyBTZXQgdGhlIGRlZmF1bHQgc2V0IG9mIGNvbXBvbmVudHMgZGVwZW5kaW5nIG9uIHdo
ZXRoZXIgdGhlcmUgaXMgcGFyZW50IHBlcm1saW5rCgkJCSRjb21wb25lbnRzID0gJHRoaXMt
PnBocEFycmF5VG9Kc0FycmF5KCdjb21wb25lbnRzJywgYXJyYXkoCgkJCQlhcnJheSgndHlw
ZScgPT4gJ3NlY3Rpb24nLCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4gJycsICdyZWdl
eCcgPT4gJycsICd0ZXh0JyA9PiAnJyksCgkJCQlhcnJheSgndHlwZScgPT4gJ2NhdGVnb3J5
JywgJ3ByZWZpeCcgPT4gJycsICdzdWZmaXgnID0+ICcnLCAncmVnZXgnID0+ICcnLCAndGV4
dCcgPT4gJycsICdjYXRlZ29yeScgPT4gJzEnKSwKCQkJCWFycmF5KCd0eXBlJyA9PiAndGl0
bGUnLCAncHJlZml4JyA9PiAnJywgJ3N1ZmZpeCcgPT4gJycsICdyZWdleCcgPT4gJycsICd0
ZXh0JyA9PiAnJyksCgkJCSkpOwoKCQkJJHNldHRpbmdzID0gYXJyYXkoCgkJCQkncGxfbmFt
ZScgPT4gJ1VudGl0bGVkJywgJ3BsX3ByZWNlZGVuY2UnID0+ICcwJywKCQkJCSdjb25fc2Vj
dGlvbicgPT4gJycsICdjb25fY2F0ZWdvcnknID0+ICcnLAoJCQkJJ2Rlc19zZWN0aW9uJyA9
PiAnJywgJ2Rlc19jYXRlZ29yeScgPT4gJycsICdkZXNfcGFnZScgPT4gJycsCgkJCQknZGVz
X3Blcm1saW5rJyA9PiAnJywgJ2Rlc19mZWVkJyA9PiAnJywgJ2Rlc19sb2NhdGlvbicgPT4g
JycsCgkJCSk7CgkJfQoKCQkvLyBFeHRyYWN0IHNldHRpbmdzIC0gdGhpcyB3aWxsIGJlIHVz
ZWZ1bCB3aGVuIGNyZWF0aW5nIHRoZSB1c2VyIGludGVyZmFjZQoJCWV4dHJhY3QoJHNldHRp
bmdzKTsKCgkJLy8gUEhQICYgSmF2YXNjcmlwdCBjb25zdGFudHM7CgkJJHNlcGFyYXRvciA9
IGdicF9zZXBhcmF0b3I7CgkJJGNvbXBvbmVudHNfZGl2ID0gJ3Blcm1saW5rX2NvbXBvbmVu
dHNfdWknOwoJCSRjb21wb25lbnRzX2Zvcm0gPSAncGVybWxpbmtfY29tcG9uZW50cyc7CgkJ
JHNldHRpbmdzX2Zvcm0gPSAncGVybWxpbmtfc2V0dGluZ3MnOwoJCSRzaG93X3ByZWZpeCA9
ICR0aGlzLT5wcmVmKCdzaG93X3ByZWZpeCcpOwoJCSRzaG93X3N1ZmZpeCA9ICR0aGlzLT5w
cmVmKCdzaG93X3N1ZmZpeCcpOwoKCQkvLyBBIGxpdHRsZSBjcmVkaXQgaGVyZSBhbmQgdGhl
cmUgZG9lc24ndCBodXJ0CgkJJG91dFtdID0gIjwhLS0geyR0aGlzLT5wYXJlbnQtPnBsdWdp
bl9uYW1lfSBieSBHcmFlbWUgUG9ydGVvdXMgLS0+IjsKCgkJLy8gVGhlIEphdmFzY3JpcHQK
JG91dFtdID0gPDw8SFRNTAoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGxhbmd1
YWdlPSJqYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCI+CgkvLyA8IVtDREFUQVsKCgkvLyBH
bG9iYWwgdmFyaWFibGVzCnZhciB7JGNvbXBvbmVudHN9Ly8gY29tcG9uZW50cyBhcnJheSBm
b3IgYWxsIHRoZSBkYXRhCgoJdmFyIF9jdXJyZW50ID0gMDsgLy8gSW5kZXggb2YgdGhlIGNv
bXBvbmVudHMgYXJyYXksIG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgY29tcG9uZW50Cgl2
YXIgY192YWxzID0gbmV3IEFycmF5KCd0eXBlJywgJ2N1c3RvbScsICdjYXRlZ29yeScsICdu
YW1lJywgJ3ByZWZpeCcsICdzdWZmaXgnLCAncmVnZXgnLCAndGV4dCcpOwoKCXdpbmRvdy5v
bmxvYWQgPSBmdW5jdGlvbigpIHsKCQljb21wb25lbnRfcmVmcmVzaF9hbGwoKTsKCQljb21w
b25lbnRfc3dpdGNoKGNvbXBvbmVudChfY3VycmVudCkpOwoJfQoKCWZ1bmN0aW9uIGNvbXBv
bmVudF9hZGQgKCkgewoJCS8vIENyZWF0ZSBkYXRhIHNldAoJCXZhciBkYXRhID0gbmV3IEFy
cmF5KCk7CgkJZm9yIChrZXkgaW4gY192YWxzKSB7CgkJCWRhdGFbY192YWxzW2tleV1dID0g
Jyc7CgkJfQoKCQkvLyBBZGQgZGF0YQoJCWNvbXBvbmVudHMucHVzaChkYXRhKTsKCgkJLy8g
UmVzZXQgY29tcG9uZW50IHR5cGUgbGlzdAoJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScp
LnR5cGUudmFsdWUgPSAnJzsKCgkJLy8gU3dpdGNoIHRvIHRoZSBuZXcgY29tcG9uZW50CgkJ
X2N1cnJlbnQgPSBjb21wb25lbnRzLmxlbmd0aCAtIDE7CgoJCS8vIFJlZnJlc2ggVUkKCQlj
b21wb25lbnRfcmVmcmVzaF9hbGwoKTsKCQljb21wb25lbnRfdXBkYXRlKCk7Cgl9CgoJZnVu
Y3Rpb24gY29tcG9uZW50X3JlZnJlc2ggKGVsZW1lbnQpIHsKCQl2YXIgYyA9IGNvbXBvbmVu
dHNbZWxlbWVudC5pZF07CgoJCS8vIENTUwoJCWlmIChfY3VycmVudCA9PSBlbGVtZW50Lmlk
KQoJCQllbGVtZW50LnN0eWxlWydiYWNrZ3JvdW5kQ29sb3InXSA9ICdyZ2IoMjQ5LCAyMDYs
IDczKSc7CgkJZWxzZQoJCQllbGVtZW50LnN0eWxlWydiYWNrZ3JvdW5kQ29sb3InXSA9ICdy
Z2IoMjU1LCAyNTQsIDIxMSknOwoJCWVsZW1lbnQuc3R5bGVbJ2NvbG9yJ10gPSAncmdiKDAs
IDAsIDApJzsKCQllbGVtZW50LnN0eWxlWydmb250RmFtaWx5J10gPSAnQXJpYWwnOwoJCWVs
ZW1lbnQuc3R5bGVbJ2ZvbnRXZWlnaHQnXSA9ICdib2xkJzsKCQllbGVtZW50LnN0eWxlWyd2
ZXJ0aWNhbEFsaWduJ10gPSAnbWlkZGxlJzsKCQllbGVtZW50LnN0eWxlWyd0ZXh0QWxpZ24n
XSA9ICdjZW50ZXInOwoJCWVsZW1lbnQuc3R5bGVbJ2xpbmVIZWlnaHQnXSA9ICcxLjVlbSc7
CgkJZWxlbWVudC5zdHlsZVsnaGVpZ2h0J10gPSAnMS41ZW0nOwoJCWVsZW1lbnQuc3R5bGVb
J3BhZGRpbmcnXSA9ICcwIDVweCc7CgkJZWxlbWVudC5zdHlsZVsnbWFyZ2luUmlnaHQnXSA9
ICc1cHgnOwoJCWVsZW1lbnQuc3R5bGVbJ2Nzc0Zsb2F0J10gPSAnbGVmdCc7CgkJZWxlbWVu
dC5zdHlsZVsnZGlzcGxheSddID0gJ2lubGluZSc7CgoJCS8vIFJlbW92ZSBhbGwgY2hpbGQg
bm9kZXMKCQl3aGlsZSAoZWxlbWVudC5oYXNDaGlsZE5vZGVzKCkpIHsgZWxlbWVudC5yZW1v
dmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpOyB9CgoJCS8vIENyZWF0ZSB0aGUgdmlzaWJs
ZSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoaXMgY29tcG9uZW50CgkJc3dpdGNoIChjWyd0eXBl
J10pIHsKCQkJY2FzZSAnJyA6CgkJCQlzdHJpbmcgPSAnLyc7CgkJCQlicmVhazsKCQkJY2Fz
ZSAncmVnZXgnIDoKCQkJY2FzZSAndGV4dCcgOgoJCQkJc3RyaW5nID0gY1tjWyd0eXBlJ11d
ICsgJyAvJzsKCQkJCWJyZWFrOwoJCQljYXNlICdkYXRlJyA6CgkJCQlzdHJpbmcgPSBjWyd0
eXBlJ10gKyAnIC8nOwoJCQkJYnJlYWs7CgkJCWNhc2UgJ2N1c3RvbScgOgoJCQkJc3RyaW5n
ID0gY1sncHJlZml4J10gKyAnY3VzdG9tXycgKyBjWydjdXN0b20nXSArIGNbJ3N1ZmZpeCdd
ICsgJyAvJzsKCQkJCWJyZWFrOwoJCQlkZWZhdWx0IDoKCQkJCXN0cmluZyA9IGNbJ3ByZWZp
eCddICsgY1sndHlwZSddICsgY1snc3VmZml4J10gKyAnIC8nOwoJCQlicmVhazsKCQl9CgoJ
CS8vIFNldCB0aGUgdmlzaWJsZSBzdHJpbmcKCQllbGVtZW50LmFwcGVuZENoaWxkKGRvY3Vt
ZW50LmNyZWF0ZVRleHROb2RlKHN0cmluZykpOwoKCQlyZXR1cm4gZWxlbWVudDsKCX0KCglm
dW5jdGlvbiBjb21wb25lbnRfcmVmcmVzaF9hbGwgKCkgewoJCS8vIFJlbW92ZSBhbGwgY2hp
bGQgbm9kZXMKCQl3aGlsZSAocGVybWxpbmtfZGl2KCkuaGFzQ2hpbGROb2RlcygpKSB7IHBl
cm1saW5rX2RpdigpLnJlbW92ZUNoaWxkKHBlcm1saW5rX2RpdigpLmZpcnN0Q2hpbGQpOyB9
CgoJCWZvciAodmFyIGkgPSAwOyBpIDwgY29tcG9uZW50cy5sZW5ndGg7IGkrKykgewoJCQl2
YXIgYyA9IGNvbXBvbmVudHNbaV07CgoJCQkvLyBDcmVhdGUgdGhlIG5ldyBjb21wb25lbnQK
CQkJdmFyIG5ld19jb21wb25lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsK
CgkJCS8vIFNldCB0aGUgaWQgaW50ZXJnZXIgZm9yIHRoaXMgY29tcG9uZW50CgkJCW5ld19j
b21wb25lbnQuaWQgPSBpOwoKCQkJLy8gSmF2YXNjcmlwdCwgb25tb3VzZXVwIHNldHRpbmcK
CQkJbmV3X2NvbXBvbmVudC5zZXRBdHRyaWJ1dGUoJ29ubW91c2Vkb3duJywgJ2NvbXBvbmVu
dF9zd2l0Y2godGhpcyk7Jyk7CgkJCW5ld19jb21wb25lbnQub25tb3VzZWRvd24gPSBmdW5j
dGlvbigpIHsgY29tcG9uZW50X3N3aXRjaCh0aGlzKTsgfTsKCgkJCS8vIFJlZnJlc2ggdGhl
IGxvb2sgb2YgdGhlIGNvbXBvbmVudAoJCQluZXdfY29tcG9uZW50ID0gY29tcG9uZW50X3Jl
ZnJlc2gobmV3X2NvbXBvbmVudCk7CgoJCQkvLyBBbmQgYWRkIHRoZSBuZXcgY29tcG9uZW50
IHRvIHRoZSB1aQoJCQlwZXJtbGlua19kaXYoKS5hcHBlbmRDaGlsZChuZXdfY29tcG9uZW50
KTsKCQl9Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3JlbW92ZSAoKSB7CgkJaWYgKGNvbXBv
bmVudHMubGVuZ3RoID4gMSkgewoJCQljb21wb25lbnRzLnNwbGljZShfY3VycmVudCwgMSk7
CgoJCQlpZiAoX2N1cnJlbnQgPj0gY29tcG9uZW50cy5sZW5ndGgpCgkJCQlfY3VycmVudCA9
IGNvbXBvbmVudHMubGVuZ3RoIC0gMTsKCgkJCWNvbXBvbmVudF9yZWZyZXNoX2FsbCgpOwoJ
CX0KCX0KCglmdW5jdGlvbiBjb21wb25lbnRfc3dpdGNoIChlbGVtZW50KSB7CgkJLy8gVXBk
YXRlIGN1cnJlbnQgaW5kZXgKCQlfY3VycmVudCA9IGVsZW1lbnQuaWQ7CgoJCS8vIFJlZnJl
c2ggVUkKCQljb21wb25lbnRfcmVmcmVzaF9hbGwoKTsKCgkJLy8gU2V0IGZvcm0gaW5wdXQg
dmFsdWVzCgkJdmFyIGMgPSBjb21wb25lbnRzW19jdXJyZW50XTsKCQlmb3IgKGtleSBpbiBj
X3ZhbHMpIHsKCQkJdmFyIGsgPSBjX3ZhbHNba2V5XTsKCQkJdmFyIGUgPSBmb3JtKCd7JGNv
bXBvbmVudHNfZm9ybX0nKS5lbGVtZW50cy5uYW1lZEl0ZW0oayk7CgoJCQlpZiAoY1trXSkg
ZS52YWx1ZSA9IGNba107CgkJCWVsc2UgZS52YWx1ZSA9ICcnOwoJCX0KCgkJLy8gSGlkZSB1
bm5lZWRlZCBmb3JtIGlucHV0cwoJCWNvbXBvbmVudF91cGRhdGUoKTsKCX0KCglmdW5jdGlv
biBjb21wb25lbnRfdXBkYXRlIChlbGVtZW50KSB7CgkJLy8gU3RvcmUgdGhlIGRhdGEgaW4g
Zm9ybSBpbnB1dHMsIGFuZCBoaWRlIGFsbCBmb3JtIGlucHV0cwoJCXZhciBjID0gbmV3IEFy
cmF5KCkKCQlmb3IgKGtleSBpbiBjX3ZhbHMpIHsKCQkJdmFyIGsgPSBjX3ZhbHNba2V5XTsK
CQkJdmFyIGUgPSBmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5lbGVtZW50cy5uYW1lZEl0
ZW0oayk7CgoJCQljW2tdID0gZS52YWx1ZTsKCgkJCWUucGFyZW50Tm9kZS5zdHlsZVsnZGlz
cGxheSddID0gJ25vbmUnOwoJCX0KCgkJLy8gUmVzaG93IHR5cGUgb3B0aW9uIGxpc3QKCQlm
b3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS50eXBlLnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3Bs
YXknXSA9ICcnOwoKCQkvLyBTZXQgb3RoZXIgZm9ybSBpbnB1dHMgdG8gdGhlIGNvcnJlY3Qg
dmlzaWJpbGl0eSBzdGF0ZSwgZGVwZW5kZW50IG9uIHR5cGUKCQlzd2l0Y2ggKGNbJ3R5cGUn
XSkgewoJCQljYXNlICcnIDoKCQkJY2FzZSAnZGF0ZScgOiBicmVhazsKCQkJY2FzZSAncmVn
ZXgnIDoKCQkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLm5hbWUucGFyZW50Tm9kZS5z
dHlsZVsnZGlzcGxheSddID0gJyc7CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5y
ZWdleC5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJYnJlYWs7CgkJCWNh
c2UgJ3RleHQnIDoKCQkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLm5hbWUucGFyZW50
Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9y
bX0nKS50ZXh0LnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQlicmVhazsK
CQkJY2FzZSAnY3VzdG9tJyA6CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5jdXN0
b20ucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCQlkaXNwbGF5X2ZpeGVz
KCk7CgkJCWJyZWFrOwoJCQljYXNlICdjYXRlZ29yeScgOgoJCQkJZm9ybSgneyRjb21wb25l
bnRzX2Zvcm19JykuY2F0ZWdvcnkucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7
CgkJCQlkaXNwbGF5X2ZpeGVzKCk7CgkJCWJyZWFrOwoJCQlkZWZhdWx0IDoKCQkJCWRpc3Bs
YXlfZml4ZXMoKTsKCQkJYnJlYWs7CgkJfQoKCQkvLyBTYXZlIGRhdGEKCQljb21wb25lbnRz
W19jdXJyZW50XSA9IGM7CgoJCS8vIFJlZnJlc2ggY29tcG9uZW50IHRvIHJlZmxlY3QgbmV3
IGRhdGEKCQljb21wb25lbnRfcmVmcmVzaChjb21wb25lbnQoX2N1cnJlbnQpKTsKCgkJLy8g
UmUtZm9jdXMgdGhlIGFjdGl2ZSBmb3JtIGlucHV0CgkJaWYgKGVsZW1lbnQpCgkJCWVsZW1l
bnQuZm9jdXMoKTsKCX0KCglmdW5jdGlvbiBkaXNwbGF5X2ZpeGVzICgpIHsKCQlpZiAoJ3sk
c2hvd19wcmVmaXh9JykKCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19JykucHJlZml4LnBh
cmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCWlmICgneyRzaG93X3N1ZmZpeH0n
KQoJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5zdWZmaXgucGFyZW50Tm9kZS5zdHls
ZVsnZGlzcGxheSddID0gJyc7Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X2xlZnQgKCkgewoJ
CWlmIChjb21wb25lbnRzLmxlbmd0aCA+IDEgJiYgX2N1cnJlbnQgPiAwKSB7CgkJCS8vIFN0
b3JlIGN1cnJlbnQgY29tcG9uZW50CgkJCXZhciBjID0gY29tcG9uZW50c1tfY3VycmVudF07
CgoJCQkvLyBSZW1vdmUgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50cy5zcGxpY2Uo
X2N1cnJlbnQsIDEpOwoKCQkJLy8gVXBkYXRlIGN1cnJlbnQgaW5kZXgKCQkJX2N1cnJlbnQt
LTsKCgkJCS8vIFJlLWFkZCBjdXJyZW50IGNvbXBvbmVudAoJCQljb21wb25lbnRzLnNwbGlj
ZShfY3VycmVudCwgMCwgYyk7CgoJCQkvLyBSZWZyZXNoIFVJCgkJCWNvbXBvbmVudF9yZWZy
ZXNoX2FsbCgpOwoJCX0KCX0KCglmdW5jdGlvbiBjb21wb25lbnRfcmlnaHQgKCkgewoJCWlm
IChfY3VycmVudCA8IGNvbXBvbmVudHMubGVuZ3RoIC0gMSkgewoJCQkvLyBTdG9yZSBjdXJy
ZW50IGNvbXBvbmVudAoJCQl2YXIgYyA9IGNvbXBvbmVudHNbX2N1cnJlbnRdOwoKCQkJLy8g
UmVtb3ZlIGN1cnJlbnQgY29tcG9uZW50CgkJCWNvbXBvbmVudHMuc3BsaWNlKF9jdXJyZW50
LCAxKTsKCgkJCS8vIFVwZGF0ZSBjdXJyZW50IGluZGV4CgkJCV9jdXJyZW50Kys7CgoJCQkv
LyBSZS1hZGQgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50cy5zcGxpY2UoX2N1cnJl
bnQsIDAsIGMpOwoKCQkJLy8gUmVmcmVzaCBVSQoJCQljb21wb25lbnRfcmVmcmVzaF9hbGwo
KTsKCQl9Cgl9CgoJZnVuY3Rpb24gc2F2ZSAoZm9ybSkgewoJCXZhciBjID0gJyc7IHZhciBp
c19wZXJtbGluayA9IGZhbHNlOyB2YXIgaGFzX3BhZ2Vfb3Jfc2VhcmNoID0gZmFsc2U7CgkJ
Zm9yICh2YXIgaSA9IDA7IGkgPCBjb21wb25lbnRzLmxlbmd0aDsgaSsrKSB7CgkJCWlmIChj
b21wb25lbnRzW2ldWyd0eXBlJ10gPT0gJ3RpdGxlJyB8fCBjb21wb25lbnRzW2ldWyd0eXBl
J10gPT0gJ2lkJykKCQkJCWlzX3Blcm1saW5rID0gdHJ1ZTsKCQkJaWYgKGNvbXBvbmVudHNb
aV1bJ3R5cGUnXSA9PSAncGFnZScgfHwgY29tcG9uZW50c1tpXVsndHlwZSddID09ICdmZWVk
JyB8fCBjb21wb25lbnRzW2ldWyd0eXBlJ10gPT0gJ3NlYXJjaCcpCgkJCQloYXNfcGFnZV9m
ZWVkX3NlYXJjaCA9IHRydWU7CgkJCWMgPSBjICsganNBcnJheVRvUGhwQXJyYXkoY29tcG9u
ZW50c1tpXSkgKyAneyRzZXBhcmF0b3J9JzsKCQl9CgoJCWlmIChpc19wZXJtbGluayAmJiBo
YXNfcGFnZV9vcl9zZWFyY2gpCgkJCWFsZXJ0KCJZb3VyIHBlcm1hbmVudCBsaW5rIGNhbid0
IGNvbnRhaW4gZWl0aGVyIGEgJ3BhZ2UnLCAnZmVlZCcgb3IgYSAnc2VhcmNoJyBjb21wb25l
bnQgd2l0aCAndGl0bGUnIG9yICdpZCcgY29tcG9uZW50cy4iKTsKCgkJZWxzZSBpZiAoaXNf
cGVybWxpbmsgJiYgKGZvcm0ucGxfbmFtZS52YWx1ZSA9PSAnJyB8fCBmb3JtLnBsX25hbWUu
dmFsdWUgPT0gJ1VudGl0bGVkJykpIHsKCQkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Nl
dHRpbmdzJykuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQlmb3JtLnBsX25hbWUuc3R5bGVb
J2JvcmRlciddID0gJzNweCBzb2xpZCByZ2IoMjIxLCAwLCAwKSc7CgkJCWZvcm0ucGxfcHJl
Y2VkZW5jZS5zdHlsZVsnYm9yZGVyJ10gPSAnJzsKCQkJYWxlcnQoJ1BsZWFzZSBlbnRlciBh
IG5hbWUgZm9yIHRoaXMgcGVybWFuZW50IGxpbmsgcnVsZS4nKTsKCQl9IGVsc2UgaWYgKGZv
cm0ucGxfcHJlY2VkZW5jZS52YWx1ZSA9PSAnJykgewoJCQlkb2N1bWVudC5nZXRFbGVtZW50
QnlJZCgnc2V0dGluZ3MnKS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCWZvcm0ucGxfcHJl
Y2VkZW5jZS5zdHlsZVsnYm9yZGVyJ10gPSAnM3B4IHNvbGlkIHJnYigyMjEsIDAsIDApJzsK
CQkJZm9ybS5wbF9uYW1lLnN0eWxlWydib3JkZXInXSA9ICcnOwoJCQlhbGVydCgnUGxlYXNl
IGVudGVyIGEgcHJlY2VkZW5jZSB2YWx1ZSBmb3IgdGhpcyBwZXJtYW5lbnQgbGluayBydWxl
LicpOwoJCX0gZWxzZSB7CgkJCWZvcm0uY29tcG9uZW50cy52YWx1ZSA9IGM7CgkJCWlmIChw
ZXJtbGlua19kaXYoKS50ZXh0Q29udGVudCkKCQkJCWZvcm0ucGxfcHJldmlldy52YWx1ZSA9
IHBlcm1saW5rX2RpdigpLnRleHRDb250ZW50OwoJCQllbHNlIGlmIChwZXJtbGlua19kaXYo
KS5pbm5lclRleHQpCgkJCQlmb3JtLnBsX3ByZXZpZXcudmFsdWUgPSBwZXJtbGlua19kaXYo
KS5pbm5lclRleHQ7CgkJCXJldHVybiB0cnVlOwoJCX0KCgkJcmV0dXJuIGZhbHNlOwoJfQoK
CWZ1bmN0aW9uIGpzQXJyYXlUb1BocEFycmF5IChhcnJheSkgewoJCS8vIGh0dHA6Ly9mYXJt
LnR1Y293cy5jb20vYmxvZy9fYXJjaGl2ZXMvMjAwNS81LzMwLzg5NTkwMS5odG1sCgkJdmFy
IGFycmF5X3BocCA9ICIiOwoJCXZhciB0b3RhbCA9IDA7CgkJZm9yICh2YXIga2V5IGluIGFy
cmF5KSB7CgkJCSsrIHRvdGFsOwoJCQlhcnJheV9waHAgPSBhcnJheV9waHAgKyAiczoiICsK
CQkJCVN0cmluZyhrZXkpLmxlbmd0aCArICI6XCIiICsgU3RyaW5nKGtleSkgKyAiXCI7czoi
ICsKCQkJCVN0cmluZyhhcnJheVtrZXldKS5sZW5ndGggKyAiOlwiIiArIFN0cmluZyhhcnJh
eVtrZXldKSArICJcIjsiOwoJCX0KCQlhcnJheV9waHAgPSAiYToiICsgdG90YWwgKyAiOnsi
ICsgYXJyYXlfcGhwICsgIn0iOwoJCXJldHVybiBhcnJheV9waHA7Cgl9CgoJZnVuY3Rpb24g
cGVybWxpbmtfZGl2ICgpIHsKCQkvLyBSZXR1cm4gdGhlIHBlcm1saW5rIHJ1bGUgZWxlbWVu
dAoJCXJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgneyRjb21wb25lbnRzX2Rpdn0n
KTsKCX0KCglmdW5jdGlvbiBmb3JtIChuYW1lKSB7CgkJaWYgKCFuYW1lKQoJCQluYW1lID0g
J3skY29tcG9uZW50c19mb3JtfScKCQkvLyBSZXR1cm4gdGhlIGZvcm0gZWxlbWVudCB3aXRo
IG5hbWUKCQlyZXR1cm4gZG9jdW1lbnQuZm9ybXMubmFtZWRJdGVtKG5hbWUpOwoJfQoKCWZ1
bmN0aW9uIGNvbXBvbmVudCAoaW5kZXgpIHsKCQkvLyBSZXR1cm4gY29tcG9uZW50IHdpdGgg
aW5kZXgKCQlyZXR1cm4gcGVybWxpbmtfZGl2KCkuY2hpbGROb2Rlc1tpbmRleF07Cgl9CgoJ
Ly8gXV0+Cgk8L3NjcmlwdD4KSFRNTDsKCgkJLy8gLS0tIFJ1bGUgLS0tIC8vCgoJCSRvdXRb
XSA9IGhlZCgnUGVybWFuZW50IGxpbmsgcnVsZScsIDIpOwoJCSRvdXRbXSA9ICc8ZGl2IGlk
PSInLiRjb21wb25lbnRzX2Rpdi4nIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogcmdiKDIz
MCwgMjMwLCAyMzApOyB3aWR0aDogYXV0bzsgaGVpZ2h0OiAxLjVlbTsgbWFyZ2luOiAxMHB4
IDA7IHBhZGRpbmc6IDVweDsiPjwvZGl2Pic7CgkJJG91dFtdID0gZ3JhZgoJCQkoCgkJCSR0
aGlzLT5mSW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfYWRkJywgJ0FkZCBjb21wb25lbnQn
LCBhcnJheSgnY2xpY2snID0+ICdjb21wb25lbnRfYWRkKCk7JykpLm4uCgkJCSR0aGlzLT5m
SW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfcmVtb3ZlJywgJ1JlbW92ZSBjb21wb25lbnQn
LCBhcnJheSgnY2xpY2snID0+ICdjb21wb25lbnRfcmVtb3ZlKCk7JykpLm4uCgkJCSR0aGlz
LT5mSW5wdXQoJ2J1dHRvbicsICdjb21wb25lbnRfbGVmdCcsICdNb3ZlIGxlZnQnLCBhcnJh
eSgnY2xpY2snID0+ICdjb21wb25lbnRfbGVmdCgpOycpKS5uLgoJCQkkdGhpcy0+ZklucHV0
KCdidXR0b24nLCAnY29tcG9uZW50X3JpZ2h0JywgJ01vdmUgcmlnaHQnLCBhcnJheSgnY2xp
Y2snID0+ICdjb21wb25lbnRfcmlnaHQoKTsnKSkKCQkJKTsKCgkJLy8gLS0tIENvbXBvbmVu
dCBmb3JtIC0tLSAvLwoKCQkkb3V0W10gPSAnPGZvcm0gYWN0aW9uPSJpbmRleC5waHAiIG5h
bWU9IicuJGNvbXBvbmVudHNfZm9ybS4nIiBvbnN1Ym1pdD0icmV0dXJuIGZhbHNlOyI+JzsK
CgkJLy8gLS0tIENvbXBvbmVudCB0eXBlIC0tLSAvLwoKCQkkY29tcG9uZW50X3R5cGVzID0g
YXJyYXkgKAoJCQknc2VjdGlvbicgPT4gJ1NlY3Rpb24nLCAnY2F0ZWdvcnknID0+ICdDYXRl
Z29yeScsCgkJCSd0aXRsZScgPT4gJ1RpdGxlJywgJ2lkJyA9PiAnSUQnLAoJCQknZGF0ZScg
PT4gJ0RhdGUgKHl5eXkvbW0vZGQpJywgJ3llYXInID0+ICdZZWFyJywKCQkJJ21vbnRoJyA9
PiAnTW9udGgnLCAnZGF5JyA9PiAnRGF5JywKCQkJJ2F1dGhvcicgPT4gJ0F1dGhvciAoUmVh
bCBuYW1lKScsICdsb2dpbicgPT4gJ0F1dGhvciAoTG9naW4pJywKCQkJJ2N1c3RvbScgPT4g
J0N1c3RvbSBGaWVsZCcsICdwYWdlJyA9PiAnUGFnZSBOdW1iZXInLAoJCQknZmVlZCcgPT4g
J0ZlZWQnLCAnc2VhcmNoJyA9PiAnU2VhcmNoIHJlcXVlc3QnLAoJCQkndGV4dCcgPT4gJ1Bs
YWluIFRleHQnLCAncmVnZXgnID0+ICdSZWd1bGFyIEV4cHJlc3Npb24nCgkJKTsKCQkkb3V0
W10gPSBncmFmKCR0aGlzLT5mU2VsZWN0KCd0eXBlJywgJGNvbXBvbmVudF90eXBlcywgJycs
IDEsICdDb21wb25lbnQgdHlwZScsICcgb25jaGFuZ2U9ImNvbXBvbmVudF91cGRhdGUoKTsi
JykpOwoKCQkvLyAtLS0gQ29tcG9uZW50IGRhdGEgLS0tIC8vCgoJCS8vIEdyYWIgdGhlIGN1
c3RvbSBmaWVsZCB0aXRsZXMKCQkkY3VzdG9tX2ZpZWxkcyA9IGFycmF5KCk7CgkJZm9yICgk
aSA9IDE7ICRpIDw9IDEwOyAkaSsrKSB7CgkJCWlmICgkdiA9ICRwcmVmc1siY3VzdG9tX3sk
aX1fc2V0Il0pCgkJCQkkY3VzdG9tX2ZpZWxkc1skaV0gPSAkdjsKCQl9CgoJCSRvdXRbXSA9
IGdyYWYgKAoJCQkkdGhpcy0+ZlNlbGVjdCgnY3VzdG9tJywgJGN1c3RvbV9maWVsZHMsICcn
LCAwLCAnQ3VzdG9tJywgJyBvbmNoYW5nZT0iY29tcG9uZW50X3VwZGF0ZSh0aGlzKTsiJyku
bi4KCQkJJHRoaXMtPmZTZWxlY3QoJ2NhdGVnb3J5JywgYXJyYXkoJzEnID0+ICdDYXRlZ29y
eSAxJywgJzInID0+ICdDYXRlZ29yeSAyJyksICcnLCAwLCAnUHJpbWFyeSBDYXRlZ29yeScs
ICcgb25jaGFuZ2U9ImNvbXBvbmVudF91cGRhdGUodGhpcyk7IicpLm4uCgkJCSR0aGlzLT5m
SW5wdXQoJ3RleHQnLCAnbmFtZScsICcnLCBhcnJheSgna2V5dXAnID0+ICdjb21wb25lbnRf
dXBkYXRlKHRoaXMpOycpLCAnTmFtZScpLm4uCgkJCSR0aGlzLT5mSW5wdXQoJ3RleHQnLCAn
cHJlZml4JywgJycsIGFycmF5KCdrZXl1cCcgPT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7
JyksICdQcmVmaXgnKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3JlZ2V4JywgJycs
IGFycmF5KCdrZXl1cCcgPT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7JyksICdSZWd1bGFy
IEV4cHJlc3Npb24nKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ3N1ZmZpeCcsICcn
LCBhcnJheSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRlKHRoaXMpOycpLCAnU3VmZml4
Jykubi4KCQkJJHRoaXMtPmZJbnB1dCgndGV4dCcsICd0ZXh0JywgJycsIGFycmF5KCdrZXl1
cCcgPT4gJ2NvbXBvbmVudF91cGRhdGUodGhpcyk7JyksICdUZXh0JykKCQkpOwoJCSRociA9
ICc8aHIgc3R5bGU9ImJvcmRlcjogMDsgaGVpZ2h0OiAxcHg7IGJhY2tncm91bmQtY29sb3I6
IHJnYigyMDAsIDIwMCwgMjAwKTsgY29sb3I6IHJnYigyMDAsIDIwMCwgMjAwKTsgbWFyZ2lu
LWJvdHRvbTogMTBweDsiIC8+JzsKCQkkb3V0W10gPSAkaHI7CgkJJG91dFtdID0gJzwvZm9y
bT4nOwoKCQkvLyAtLS0gU2V0dGluZ3MgZm9ybSAtLS0gLy8KCgkJJG91dFtdID0gJzxmb3Jt
IGFjdGlvbj0iaW5kZXgucGhwIiBtZXRob2Q9InBvc3QiIG5hbWU9IicuJHNldHRpbmdzX2Zv
cm0uJyIgb25zdWJtaXQ9InJldHVybiBzYXZlKHRoaXMpOyI+JzsKCgkJLy8gLS0tIFNldHRp
bmdzIC0tLSAvLwoKCQkkb3V0W10gPSBoZWQoJzxhIGhyZWY9IiMiIG9uY2xpY2s9InRvZ2ds
ZURpc3BsYXkoXCdzZXR0aW5nc1wnKTsgcmV0dXJuIGZhbHNlOyI+U2V0dGluZ3M8L2E+Jywg
Mik7CgkJJG91dFtdID0gJzxkaXYgaWQ9InNldHRpbmdzIj4nOwoJCSRvdXRbXSA9IGdyYWYo
JHRoaXMtPmZJbnB1dCgndGV4dCcsICdwbF9uYW1lJywgJHBsX25hbWUsIE5VTEwsICdOYW1l
JykpOwoJCSRvdXRbXSA9IGdyYWYoJHRoaXMtPmZJbnB1dCgndGV4dCcsICdwbF9wcmVjZWRl
bmNlJywgJHBsX3ByZWNlZGVuY2UsIE5VTEwsICdQcmVjZWRlbmNlJykpOwoJCSRvdXRbXSA9
ICc8L2Rpdj4nOwoJCSRvdXRbXSA9ICRocjsKCgkJLy8gLS0tIENvbmRpdGlvbnMgLS0tIC8v
CgoJCSRvdXRbXSA9IGhlZCgnPGEgaHJlZj0iIyIgb25jbGljaz0idG9nZ2xlRGlzcGxheShc
J2NvbmRpdGlvbnNcJyk7IHJldHVybiBmYWxzZTsiPkNvbmRpdGlvbnM8L2E+JywgMik7CgkJ
JG91dFtdID0gJzxkaXYgaWQ9ImNvbmRpdGlvbnMiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPic7
CgkJJG91dFtdID0gZ3JhZihzdHJvbmcoJ09ubHkgdXNlIHRoaXMgcGVybWFuZW50IGxpbmsg
aWYgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFwcGx5Li4uJykpOwoKCQkvLyBHZW5lcmF0
ZSBhIHNlY3Rpb25zIGFycmF5IChuYW1lPT50aXRsZSkKCQkkc2VjdGlvbnMgPSBhcnJheSgp
OwoJCSRycyA9IHNhZmVfcm93cygnbmFtZSwgdGl0bGUnLCAndHhwX3NlY3Rpb24nLCAibmFt
ZSAhPSAnZGVmYXVsdCcgb3JkZXIgYnkgbmFtZSIpOwoJCWZvcmVhY2ggKCRycyBhcyAkc2Vj
KSB7CgkJCSRzZWN0aW9uc1skc2VjWyduYW1lJ11dID0gJHNlY1sndGl0bGUnXTsKCQl9CgoJ
CS8vIEdlbmVyYXRlIGEgY2F0ZWdvcmllcyBhcnJheSAobmFtZT0+dGl0bGUpCgkJJGNhdGVn
b3JpZXMgPSBhcnJheSgpOwoJCSRycyA9IHNhZmVfcm93cygnbmFtZSwgdGl0bGUnLCAndHhw
X2NhdGVnb3J5JywgInR5cGUgPSAnYXJ0aWNsZScgYW5kIG5hbWUgIT0gJ3Jvb3QnIG9yZGVy
IGJ5IG5hbWUiKTsKCQlmb3JlYWNoICgkcnMgYXMgJHNlYykgewoJCQkkY2F0ZWdvcmllc1sk
c2VjWyduYW1lJ11dID0gJHNlY1sndGl0bGUnXTsKCQl9CgoJCSRvdXRbXSA9IGdyYWYgKAoJ
CQkkdGhpcy0+ZlNlbGVjdCgnY29uX3NlY3Rpb24nLCAkc2VjdGlvbnMsICRjb25fc2VjdGlv
biwgMSwgJ1dpdGhpbiBzZWN0aW9uJykubi4KCQkJJHRoaXMtPmZTZWxlY3QoJ2Nvbl9jYXRl
Z29yeScsICRjYXRlZ29yaWVzLCAkY29uX2NhdGVnb3J5LCAxLCAnV2l0aGluIGNhdGVnb3J5
JykKCQkpOwoJCSRvdXRbXSA9ICc8L2Rpdj4nOwoJCSRvdXRbXSA9ICRocjsKCgkJLy8gLS0t
IERlc3RpbmF0aW9uIC0tLSAvLwoKCQkkb3V0W10gPSBoZWQoJzxhIGhyZWY9IiMiIG9uY2xp
Y2s9InRvZ2dsZURpc3BsYXkoXCdkZXN0aW5hdGlvblwnKTsgcmV0dXJuIGZhbHNlOyI+RGVz
dGluYXRpb248L2E+JywgMik7CgkJJG91dFtdID0gJzxkaXYgaWQ9ImRlc3RpbmF0aW9uIiBz
dHlsZT0iZGlzcGxheTpub25lIj4nOwoJCSRvdXRbXSA9IGdyYWYoc3Ryb25nKCdGb3J3YXJk
IHRoaXMgcGVybWFuZW50IGxpbmsgdG8uLi4nKSk7CgkJJG91dFtdID0gZ3JhZiAoCgkJCSR0
aGlzLT5mU2VsZWN0KCdkZXNfc2VjdGlvbicsICRzZWN0aW9ucywgJGRlc19zZWN0aW9uLCAx
LCAnU2VjdGlvbicpLm4uCgkJCSR0aGlzLT5mU2VsZWN0KCdkZXNfY2F0ZWdvcnknLCAkY2F0
ZWdvcmllcywgJGRlc19jYXRlZ29yeSwgMSwgJ0NhdGVnb3J5JykKCQkpOwoJCSRvdXRbXSA9
IGdyYWYoJHRoaXMtPmZTZWxlY3QoJ2Rlc19wYWdlJywgc2FmZV9jb2x1bW4oJ25hbWUnLCAn
dHhwX3BhZ2UnLCAiMSIpLCBAJGRlc19wYWdlLCAxLCAnUGFnZScpKTsKCQkkb3V0W10gPSBn
cmFmKCR0aGlzLT5mQm94ZXMoJ2Rlc19mZWVkJywgYXJyYXkoJ3JzcycsICdhdG9tJywgJycp
LCAkZGVzX2ZlZWQsIE5VTEwsIGFycmF5KCdSU1MgZmVlZCcsICdBdG9tIGZlZWQnLCAnTmVp
dGhlcicpKSk7CgkJJG91dFtdID0gZ3JhZihzdHJvbmcoJ1JlZGlyZWN0IHRoaXMgcGVybWFu
ZW50IGxpbmsgdG8uLi4nKSk7CgkJLy8gR2VuZXJhdGUgYSBwZXJtbGlua3MgYXJyYXkKCQkk
cGVybWxpbmtzID0gJHRoaXMtPnBhcmVudC0+Z2V0X2FsbF9wZXJtbGlua3MoMSk7CgkJZm9y
ZWFjaCAoJHBlcm1saW5rcyBhcyAka2V5ID0+ICRwbCkgewoJCQkkcGVybWxpbmtzWyRrZXld
ID0gJHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ107CgkJfQoJCXVuc2V0KCRwZXJtbGlua3Nb
JGlkXSk7CgkJJG91dFtdID0gZ3JhZigkdGhpcy0+ZlNlbGVjdCgnZGVzX3Blcm1saW5rJywg
JHBlcm1saW5rcywgQCRkZXNfcGVybWxpbmssIDEsICdQZXJtYW5lbnQgbGluaycpKTsKCQkk
b3V0W10gPSBncmFmKCR0aGlzLT5mSW5wdXQoJ3RleHQnLCAnZGVzX2xvY2F0aW9uJywgJGRl
c19sb2NhdGlvbiwgTlVMTCwgJ0hUVFAgbG9jYXRpb24nKSk7CgkJJG91dFtdID0gJzwvZGl2
Pic7CgkJJG91dFtdID0gJGhyOwoKCQkvLyBTYXZlIGJ1dHRvbgoJCSRvdXRbXSA9IGZJbnB1
dCgnc3VibWl0JywgJycsICdTYXZlIHBlcm1hbmVudCBsaW5rJyk7CgoJCS8vIEV4dHJhIGZv
cm0gaW5wdXRzIHdoaWNoIGdldCBmaWxsZWQgb24gc3VibWl0CgkJJG91dFtdID0gaElucHV0
KCdjb21wb25lbnRzJywgJycpOwoJCSRvdXRbXSA9IGhJbnB1dCgncGxfcHJldmlldycsICcn
KTsKCQkvLyBFdmVudCBhbmQgdGFiIGZvcm0gaW5wdXRzCgkJJG91dFtdID0gJHRoaXMtPmZv
cm1faW5wdXRzKCk7CgkJLy8gU3RlcCBhbmQgSUQgZm9ybSBpbnB1dHMKCQkkb3V0W10gPSBz
SW5wdXQoJHN0ZXApOwoJCSRvdXRbXSA9IGhJbnB1dChnYnBfaWQsICRpZCk7CgoJCSRvdXRb
XSA9ICc8L2Zvcm0+JzsKCgkJLy8gTGV0cyBlY2hvIGV2ZXJ5dGhpbmcgb3V0LiBZYWghCgkJ
ZWNobyBqb2luKG4sICRvdXQpOwoJfQoKCWZ1bmN0aW9uIGZMYWJlbCAoJGxhYmVsLCAkY29u
dGVudHMgPSAnJywgJGxhYmVsX3JpZ2h0ID0gZmFsc2UpIHsKCQkvLyA8bGFiZWw+IHRoZSBj
b250ZW50cyB3aXRoIHRoZSBuYW1lICRsYWJsZQoJCSRjb250ZW50cyA9ICgkbGFiZWxfcmln
aHQpCgkJPyAkY29udGVudHMuJGxhYmVsCgkJOiAkbGFiZWwuKCRjb250ZW50cyA/ICc6ICcu
JGNvbnRlbnRzIDogJycpOwoJCXJldHVybiB0YWcoJGNvbnRlbnRzLCAnbGFiZWwnKTsKCX0K
CglmdW5jdGlvbiBmQm94ZXMgKCRuYW1lID0gJycsICR2YWx1ZSA9ICcnLCAkY2hlY2tlZF92
YWx1ZSA9ICcnLCAkb24gPSBhcnJheSgpLCAkbGFiZWwgPSAnJykgewoJCSRvdXQgPSBhcnJh
eSgpOwoJCWlmIChpc19hcnJheSgkdmFsdWUpKSB7CgkJCSRpID0gMDsKCQkJZm9yZWFjaCAo
JHZhbHVlIGFzICR2YWwpIHsKCQkJCSRvID0gJzxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0i
Jy4kbmFtZS4nIiB2YWx1ZT0iJy4kdmFsLiciJzsKCQkJCSRvIC49ICgkY2hlY2tlZF92YWx1
ZSA9PSAkdmFsKSA/ICcgY2hlY2tlZD0iY2hlY2tlZCInIDogJyc7CgkJCQlpZiAoaXNfYXJy
YXkoJG9uKSkgZm9yZWFjaCgkb24gYXMgJGsgPT4gJHYpCgkJCQkJJG8gLj0gKCRvbikgPyAn
IG9uJy4kay4nPSInLiR2LiciJyA6ICcnOwoJCQkJJG8gLj0gJyAvPic7CgkJCQkkb3V0W10g
PSAkdGhpcy0+ZkxhYmVsKCRsYWJlbFskaSsrXSwgJG8sIHRydWUpOwoJCQl9CgkJfSBlbHNl
IHsKCQkJJG8gPSAnPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSInLiRuYW1lLiciIHZh
bHVlPSInLiR2YWx1ZS4nIic7CgkJCSRvIC49ICgkY2hlY2tlZF92YWx1ZSA9PSAkdmFsdWUp
ID8gJyBjaGVja2VkPSJjaGVja2VkIicgOiAnJzsKCQkJaWYgKGlzX2FycmF5KCRvbikpIGZv
cmVhY2goJG9uIGFzICRrID0+ICR2KQoJCQkJJG8gLj0gKCRvbikgPyAnIG9uJy4kay4nPSIn
LiR2LiciJyA6ICcnOwoJCQkkbyAuPSAnIC8+JzsKCQkJJG91dFtdID0gJHRoaXMtPmZMYWJl
bCgkbGFiZWwsICRvLCB0cnVlKTsKCQl9CgoJCXJldHVybiBqb2luKCcnLCAkb3V0KTsKCX0K
CglmdW5jdGlvbiBmSW5wdXQgKCR0eXBlLCAkbmFtZSA9ICcnLCAkdmFsdWUgPSAnJywgJG9u
ID0gYXJyYXkoKSwgJGxhYmVsID0gJycpIHsKCQlpZiAoJHR5cGUgPT0gJ3JhZGlvJyB8fCAk
dHlwZSA9PSAnY2hlY2tib3gnKQoJCQlyZXR1cm4gJHRoaXMtPmZCb3hlcygkbmFtZSwgJHZh
bHVlLCAkb24sICRsYWJlbCk7CgoJCSRvID0gJzxpbnB1dCB0eXBlPSInLiR0eXBlLiciIG5h
bWU9IicuJG5hbWUuJyIgdmFsdWU9IicuJHZhbHVlLiciJzsKCQlpZiAoaXNfYXJyYXkoJG9u
KSkgZm9yZWFjaCgkb24gYXMgJGsgPT4gJHYpCgkJCSRvIC49ICgkb24pID8gJyBvbicuJGsu
Jz0iJy4kdi4nIicgOiAnJzsKCQkkbyAuPSAnIC8+JzsKCQlyZXR1cm4gKCRsYWJlbCkgPyAk
dGhpcy0+ZkxhYmVsKCRsYWJlbCwgJG8pIDogJG87Cgl9CgoJZnVuY3Rpb24gZlNlbGVjdCAo
JG5hbWUgPSAnJywgJGFycmF5ID0gJycsICR2YWx1ZSA9ICcnLCAkYmxhbmtfZmlyc3QgPSAn
JywgJGxhYmVsID0gJycsICRvbl9zdWJtaXQgPSAnJykgewoJCSRvID0gc2VsZWN0SW5wdXQo
JG5hbWUsICRhcnJheSwgJHZhbHVlLCAkYmxhbmtfZmlyc3QsICRvbl9zdWJtaXQpOwoJCXJl
dHVybiAoJGxhYmVsID8gJHRoaXMtPmZMYWJlbCgkbGFiZWwsICRvKSA6ICRvKTsKCX0KCglm
dW5jdGlvbiBwb3N0X3NhdmVfcGVybWxpbmsgKCkgewoJCS8vIFRoZSBmdW5jdGlvbiBwb3N0
cyBvciBzYXZlcyBhIHBlcm1hbmVudCBsaW5rIHRvIHR4cF9wcmVmcwoKCQlleHRyYWN0KGdw
c2EoYXJyYXkoJ3N0ZXAnLCBnYnBfaWQpKSk7CgoJCS8vIEdyYWIgdGhlIHVzZXIgZGVmaW5l
ZCBzZXR0aW5ncyBmcm9tIHRoZSBmb3JtIFBPU1QgZGF0YQoJCSRzZXR0aW5ncyA9IGdwc2Eo
YXJyYXkoCgkJCSdwbF9uYW1lJywgJ3BsX3ByZWNlZGVuY2UnLCAncGxfcHJldmlldycsCgkJ
CSdjb25fc2VjdGlvbicsICdjb25fY2F0ZWdvcnknLAoJCQknZGVzX3NlY3Rpb24nLCAnZGVz
X2NhdGVnb3J5JywgJ2Rlc19wYWdlJywKCQkJJ2Rlc19wZXJtbGluaycsICdkZXNfZmVlZCcs
ICdkZXNfbG9jYXRpb24nLAoJCSkpOwoKCQkvLyBSZW1vdmUgc3BhY2VzIGZyb20gdGhlIHBl
cm1hbmVudCBsaW5rIHByZXZpZXcKCQkkc2V0dGluZ3NbJ3BsX3ByZXZpZXcnXSA9IHByZWdf
cmVwbGFjZSgnJVxzKy9ccyolJywgJy8nLCAkc2V0dGluZ3NbJ3BsX3ByZXZpZXcnXSk7CgoJ
CS8vIEV4cGxvZGUgdGhlIHNlcGFyYXRlZCBzdHJpbmcgb2Ygc2VyaWFsaXplIGNvbXBvbmVu
dHMgLSB0aGlzIHdhcyBtYWRlIGJ5IEphdmFTY3JpcHQuCgkJJHNlcmlhbGl6ZV9jb21wb25l
bnRzID0gZXhwbG9kZShnYnBfc2VwYXJhdG9yLCBydHJpbShncHMoJ2NvbXBvbmVudHMnKSwg
Z2JwX3NlcGFyYXRvcikpOwoKCQkvLyBVbnNlcmlhbGl6ZSB0aGUgY29tcG9uZW50cwoJCSRj
b21wb25lbnRzID0gYXJyYXkoKTsKCQlmb3JlYWNoICgkc2VyaWFsaXplX2NvbXBvbmVudHMg
YXMgJGMpCgkJCSRjb21wb25lbnRzW10gPSB1bnNlcmlhbGl6ZShzdHJpcHNsYXNoZXMoJGMp
KTsKCgkJLy8gQ29tcGxldGUgdGhlIHBlcm1hbmVudCBsaW5rIGFycmF5IC0gdGhpcyBpcyBl
eGFjdGx5IHdoYXQgbmVlZHMgdG8gYmUgc3RvcmVkIGluIHRoZSBkYgoJCSRwZXJtbGluayA9
IGFycmF5KCdzZXR0aW5ncycgPT4gJHNldHRpbmdzLCAnY29tcG9uZW50cycgPT4gJGNvbXBv
bmVudHMpOwoKCQkvLyBTYXZlIGl0CgkJJHRoaXMtPnNldF9wcmVmZXJlbmNlKCRpZCwgJHBl
cm1saW5rLCAnZ2JwX3NlcmlhbGl6ZWQnKTsKCgkJJHRoaXMtPnBhcmVudC0+bWVzc2FnZSA9
IG1lc3NlbmdlcignJywgJHNldHRpbmdzWydwbF9uYW1lJ10sICdzYXZlZCcpOwoJfQoKCWZ1
bmN0aW9uIHBocEFycmF5VG9Kc0FycmF5ICgkbmFtZSwgJGFycmF5KSB7CgkJLy8gRnJvbSBQ
SFAubmV0CgkJaWYgKGlzX2FycmF5KCRhcnJheSkpIHsKCQkJJHJlc3VsdCA9ICRuYW1lLicg
PSBuZXcgQXJyYXkoKTsnLm47CgkJCWZvcmVhY2ggKCRhcnJheSBhcyAka2V5ID0+ICR2YWx1
ZSkKCQkJCSRyZXN1bHQgLj0gJHRoaXMtPnBocEFycmF5VG9Kc0FycmF5KCRuYW1lLidbXCcn
LiRrZXkuJ1wnXScsJHZhbHVlLCcnKS5uOwoJCX0gZWxzZSB7CgkJCSRyZXN1bHQgPSAkbmFt
ZS4nID0gXCcnLiRhcnJheS4nXCc7JzsKCQl9CgkJcmV0dXJuICRyZXN1bHQ7Cgl9Cn0KCmNs
YXNzIFBlcm1hbmVudExpbmtzTGlzdFRhYlZpZXcgZXh0ZW5kcyBHQlBBZG1pblRhYlZpZXcK
ewoJdmFyICRwZXJtaXNzaW9ucyA9ICcxLDInOwoJZnVuY3Rpb24gcHJlbG9hZCAoKSB7CgkJ
cmVnaXN0ZXJfY2FsbGJhY2soYXJyYXkoJiR0aGlzLCAkdGhpcy0+cGFyZW50LT5ldmVudC4n
X211bHRpX2VkaXQnKSwgJHRoaXMtPnBhcmVudC0+ZXZlbnQsICR0aGlzLT5wYXJlbnQtPmV2
ZW50LidfbXVsdGlfZWRpdCcsIDEpOwoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhp
cywgJHRoaXMtPnBhcmVudC0+ZXZlbnQuJ19jaGFuZ2VfcGFnZWJ5JyksICR0aGlzLT5wYXJl
bnQtPmV2ZW50LCAkdGhpcy0+cGFyZW50LT5ldmVudC4nX2NoYW5nZV9wYWdlYnknLCAxKTsK
CX0KCglmdW5jdGlvbiBtYWluICgpIHsKCQlleHRyYWN0KGdwc2EoYXJyYXkoJ3BhZ2UnLCAn
c29ydCcsICdkaXInLCAnY3JpdCcsICdzZWFyY2hfbWV0aG9kJykpKTsKCgkJJGV2ZW50ID0g
JHRoaXMtPnBhcmVudC0+ZXZlbnQ7CgoJCSRwZXJtbGlua3MgPSAkdGhpcy0+cGFyZW50LT5n
ZXRfYWxsX3Blcm1saW5rcygpOwoJCSR0b3RhbCA9IGNvdW50KCRwZXJtbGlua3MpOwoKCQlp
ZiAoJHRvdGFsIDwgMSkgewoJCQllY2hvIGdyYWYoJ1lvdSBoYXZlblwndCBjcmVhdGVkIGFu
eSBjdXN0b20gcGVybWFuZW50IGxpbmtzIHJ1bGVzIHlldC4nLCAnIHN0eWxlPSJ0ZXh0LWFs
aWduOiBjZW50ZXI7IicpLgoJCQkJIGdyYWYoJzxhIGhyZWY9IicuJHRoaXMtPnVybChhcnJh
eShnYnBfdGFiID0+ICdidWlsZCcpLCB0cnVlKS4nIj5DbGljayBoZXJlPC9hPiB0byBhZGQg
b25lLicsICcgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiJyk7CgkJCXJldHVybjsKCQl9
CgoJCSRsaW1pdCA9IG1heCgkdGhpcy0+cHJlZignbGlzdF9wYWdlYnknKSwgMTUpOwoKCQls
aXN0KCRwYWdlLCAkb2Zmc2V0LCAkbnVtUGFnZXMpID0gJHRoaXMtPnBhZ2VyKCR0b3RhbCwg
JGxpbWl0LCAkcGFnZSk7CgoJCWlmIChlbXB0eSgkc29ydCkpCgkJCSRzb3J0ID0gJ3BsX3By
ZWNlZGVuY2UnOwoKCQlpZiAoZW1wdHkoJGRpcikpCgkJCSRkaXIgPSAnZGVzYyc7CgoJCSRk
aXIgPSAoJGRpciA9PSAnZGVzYycpID8gJ2Rlc2MnIDogJ2FzYyc7CgoJCS8vIFNvcnQgdGhl
IHBlcm1saW5rcyB2aWEgdGhlIHNlbGVjdGVkIGNvbHVtbiBhbmQgdGhlbiB0aGVpciBuYW1l
cy4KCQlmb3JlYWNoICgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGVybWxpbmspIHsKCQkJJHNv
cnRfa2V5c1skaWRdID0gJHBlcm1saW5rWydzZXR0aW5ncyddWyRzb3J0XTsKCQkJJG5hbWVb
JGlkXSA9ICRwZXJtbGlua1snc2V0dGluZ3MnXVsncGxfbmFtZSddOwoJCX0KCQlhcnJheV9t
dWx0aXNvcnQoJHNvcnRfa2V5cywgKCgkZGlyID09ICdkZXNjJykgPyBTT1JUX0RFU0MgOiBT
T1JUX0FTQyksICRuYW1lLCBTT1JUX0FTQywgJHBlcm1saW5rcyk7CgoJCSRzd2l0Y2hfZGly
ID0gKCRkaXIgPT0gJ2Rlc2MnKSA/ICdhc2MnIDogJ2Rlc2MnOwoKCQkkcGVybWxpbmtzID0g
YXJyYXlfc2xpY2UoJHBlcm1saW5rcywgJG9mZnNldCwgJGxpbWl0KTsKCgkJaWYgKGNvdW50
KCRwZXJtbGlua3MpKSB7CgkJCWVjaG8gbi5uLic8Zm9ybSBuYW1lPSJsb25nZm9ybSIgbWV0
aG9kPSJwb3N0IiBhY3Rpb249ImluZGV4LnBocCIgb25zdWJtaXQ9InJldHVybiB2ZXJpZnko
XCcnLmdUeHQoJ2FyZV95b3Vfc3VyZScpLidcJykiPicuCgoJCQkJbi5zdGFydFRhYmxlKCds
aXN0JykuCgkJCQluLnRyKAoJCQkJCW4uY29sdW1uX2hlYWQoJ25hbWUnLCAncGxfbmFtZScs
ICRldmVudCwgdHJ1ZSwgJHN3aXRjaF9kaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCkuCgkJ
CQkJaENlbGwoKS4KCQkJCQljb2x1bW5faGVhZCgncHJldmlldycsICdwbF9wcmV2aWV3Jywg
JGV2ZW50LCB0cnVlLCAkc3dpdGNoX2RpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKS4KCQkJ
CQljb2x1bW5faGVhZCgncHJlY2VkZW5jZScsICdwbF9wcmVjZWRlbmNlJywgJGV2ZW50LCB0
cnVlLCAkc3dpdGNoX2RpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKS4KCQkJCQloQ2VsbCgp
CgkJCQkpOwoKCQkJaW5jbHVkZV9vbmNlIHR4cGF0aC4nL3B1Ymxpc2gvdGFnaGFuZGxlcnMu
cGhwJzsKCgkJCWZvcmVhY2ggKCRwZXJtbGlua3MgYXMgJGlkID0+ICRwZXJtbGluaykgewoJ
CQkJZXh0cmFjdCgkcGVybWxpbmtbJ3NldHRpbmdzJ10pOwoKCQkJCSRtYW5hZ2UgPSBuLic8
dWwnLih2ZXJzaW9uX2NvbXBhcmUoJEdMT0JBTFNbJ3RoaXN2ZXJzaW9uJ10sICc0LjAuMycs
ICc8PScpID8gJyBzdHlsZT0ibWFyZ2luOjA7cGFkZGluZzowO2xpc3Qtc3R5bGUtdHlwZTpu
b25lOyI+JyA6ICc+JykuCgkJCQkJCW4udC4nPGxpPicuaHJlZihnVHh0KCdlZGl0JyksICR0
aGlzLT51cmwoYXJyYXkoZ2JwX3RhYiA9PiAnYnVpbGQnLCBnYnBfaWQgPT4gJGlkKSwgdHJ1
ZSkpLic8L2xpPicuCgkJCQkJCW4uJzwvdWw+JzsKCgkJCQllY2hvIG4ubi50cigKCgkJCQkJ
dGQoCgkJCQkJCWhyZWYoJHBsX25hbWUsICR0aGlzLT51cmwoYXJyYXkoZ2JwX3RhYiA9PiAn
YnVpbGQnLCBnYnBfaWQgPT4gJGlkKSwgdHJ1ZSkpCgkJCQkJLCA3NSkuCgoJCQkJCXRkKCRt
YW5hZ2UsIDM1KS4KCgkJCQkJdGQoJHBsX3ByZXZpZXcsIDE3NSkuCgkJCQkJdGQoJHBsX3By
ZWNlZGVuY2UuJyZuYnNwOycsIDUwKS4KCgkJCQkJdGQoCgkJCQkJCWZJbnB1dCgnY2hlY2ti
b3gnLCAnc2VsZWN0ZWRbXScsICRpZCkKCQkJCQkpCgkJCQkpOwoJCQl9CgoJCQllY2hvIG4u
bi50cigKCQkJCXRkYSgKCQkJCQlzZWxlY3RfYnV0dG9ucygpLgoJCQkJCSR0aGlzLT5wZXJt
bGlua3NfbXVsdGllZGl0X2Zvcm0oJHBhZ2UsICRzb3J0LCAkZGlyLCAkY3JpdCwgJHNlYXJj
aF9tZXRob2QpCgkJCQksJyBjb2xzcGFuPSI0IiBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQ7
IGJvcmRlcjogbm9uZTsiJykKCQkJKS4KCgkJCW4uZW5kVGFibGUoKS4KCQkJbi4nPC9mb3Jt
PicuCgoJCQluLiR0aGlzLT5uYXZfZm9ybSgkZXZlbnQsICRwYWdlLCAkbnVtUGFnZXMsICRz
b3J0LCAkZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2QpLgoKCQkJbi5wYWdlYnlfZm9ybSgk
ZXZlbnQsICR0aGlzLT5wcmVmKCdsaXN0X3BhZ2VieScpKTsKCQl9Cgl9CgoJZnVuY3Rpb24g
cGFnZXIgKCR0b3RhbCwgJGxpbWl0LCAkcGFnZSkgewoJCWlmIChmdW5jdGlvbl9leGlzdHMo
J3BhZ2VyJykpCgkJCXJldHVybiBwYWdlcigkdG90YWwsICRsaW1pdCwgJHBhZ2UpOwoKCQkv
LyBUaGlzIGlzIHRha2VuIGZyb20gdHhwbGliX21pc2MucGhwIHIxNTg4IGl0IGlzIHJlcXVp
cmVkIGZvciA0LjAuMyBjb21wYXRpYml0bHkKCQkkbnVtX3BhZ2VzID0gY2VpbCgkdG90YWwg
LyAkbGltaXQpOwoJCSRwYWdlID0gJHBhZ2UgPyAoaW50KSAkcGFnZSA6IDE7CgkJJHBhZ2Ug
PSBtaW4obWF4KCRwYWdlLCAxKSwgJG51bV9wYWdlcyk7CgkJJG9mZnNldCA9IG1heCgoJHBh
Z2UgLSAxKSAqICRsaW1pdCwgMCk7CgkJcmV0dXJuIGFycmF5KCRwYWdlLCAkb2Zmc2V0LCAk
bnVtX3BhZ2VzKTsKCX0KCglmdW5jdGlvbiBuYXZfZm9ybSAoJGV2ZW50LCAkcGFnZSwgJG51
bVBhZ2VzLCAkc29ydCwgJGRpciwgJGNyaXQsICRtZXRob2QpIHsKCQlpZiAoZnVuY3Rpb25f
ZXhpc3RzKCduYXZfZm9ybScpKQoJCQlyZXR1cm4gbmF2X2Zvcm0oJGV2ZW50LCAkcGFnZSwg
JG51bVBhZ2VzLCAkc29ydCwgJGRpciwgJGNyaXQsICRtZXRob2QpOwoKCQkvLyBUaGlzIGlz
IGJhc2ljYWxseSBzdG9sZW4gZnJvbSB0aGUgNC4wLjMgdmVyc2lvbiBvZiBpbmNsdWRlcy90
eHBfbGlzdC5waHAKCQkvLyAtIGxpc3RfbmF2X2Zvcm0oKSBmb3IgNC4wLjMgY29tcGF0aWJp
dGx5CgkJJG5hdltdID0gKCRwYWdlID4gMSkKCQkJPyBQcmV2TmV4dExpbmsoJGV2ZW50LCAk
cGFnZS0xLCBnVHh0KCdwcmV2JyksICdwcmV2JywgJHNvcnQsICRkaXIpIDogJyc7CgkJJG5h
dltdID0gc3Auc21hbGwoJHBhZ2UuICcvJy4kbnVtUGFnZXMpLnNwOwoJCSRuYXZbXSA9ICgk
cGFnZSAhPSAkbnVtUGFnZXMpCgkJCT8gUHJldk5leHRMaW5rKCRldmVudCwgJHBhZ2UrMSwg
Z1R4dCgnbmV4dCcpLCAnbmV4dCcsICRzb3J0LCAkZGlyKSA6ICcnOwoJCXJldHVybiAoJG5h
dikKCQkJPyBncmFmKGpvaW4oJycsICRuYXYpLCAnIGFsaWduPSJjZW50ZXIiJykgOiAnJzsK
CX0KCglmdW5jdGlvbiBwZXJtbGlua3NfbXVsdGllZGl0X2Zvcm0gKCRwYWdlLCAkc29ydCwg
JGRpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKSB7CgkJJG1ldGhvZHMgPSBhcnJheSgKCQkJ
J2RlbGV0ZScgPT4gZ1R4dCgnZGVsZXRlJyksCgkJKTsKCgkJcmV0dXJuIGV2ZW50X211bHRp
ZWRpdF9mb3JtKCR0aGlzLT5wYXJlbnQtPmV2ZW50LCAkbWV0aG9kcywgJHBhZ2UsICRzb3J0
LCAkZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2QpOwoJfQoKCWZ1bmN0aW9uIHBlcm1saW5r
c19jaGFuZ2VfcGFnZWJ5ICgpIHsKCQkkdGhpcy0+c2V0X3ByZWZlcmVuY2UoJ2xpc3RfcGFn
ZWJ5JywgZ3BzKCdxdHknKSk7Cgl9CgoJZnVuY3Rpb24gcGVybWxpbmtzX211bHRpX2VkaXQg
KCkgewoJCSRtZXRob2QgPSBncHMoJ2VkaXRfbWV0aG9kJykKCQkJPyBncHMoJ2VkaXRfbWV0
aG9kJykgLy8gRnJvbSBUeHAgNC4wLjQgYW5kIGdyZWF0ZXIKCQkJOiBncHMoJ21ldGhvZCcp
OyAvLyBVcCB0byBUeHAgNC4wLjMKCgkJc3dpdGNoICgkbWV0aG9kKSB7CgkJCWNhc2UgJ2Rl
bGV0ZSc6CgkJCQlmb3JlYWNoIChncHMoJ3NlbGVjdGVkJykgYXMgJGlkKSB7CgkJCQkJCQkk
ZGVsZXRlZFtdID0gJHRoaXMtPnBhcmVudC0+cmVtb3ZlX3Blcm1saW5rKCRpZCk7CgkJCQl9
CgkJCWJyZWFrOwoJCX0KCgkJJHRoaXMtPnBhcmVudC0+bWVzc2FnZSA9IChpc3NldCgkZGVs
ZXRlZCkgJiYgaXNfYXJyYXkoJGRlbGV0ZWQpICYmIGNvdW50KCRkZWxldGVkKSkKCQkJPyBt
ZXNzZW5nZXIoJycsIGpvaW4oJywgJywgJGRlbGV0ZWQpICwnZGVsZXRlZCcpCgkJCTogbWVz
c2VuZ2VyKCdhbiBlcnJvciBvY2N1cnJlZCcsICcnLCAnJyk7Cgl9Cn0KCmdsb2JhbCAkZ2Jw
X3BsOwokZ2JwX3BsID0gbmV3IFBlcm1hbmVudExpbmtzKCdQZXJtYW5lbnQgTGlua3MnLCAn
cGVybWxpbmtzJywgJ2FkbWluJyk7CmlmIChAdHhwaW50ZXJmYWNlID09ICdwdWJsaWMnKSB7
CglyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJGdicF9wbCwgJ19mZWVkX2VudHJ5JyksICdy
c3NfZW50cnknKTsKCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkZ2JwX3BsLCAnX2ZlZWRf
ZW50cnknKSwgJ2F0b21fZW50cnknKTsKCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkZ2Jw
X3BsLCAnX3RleHRwYXR0ZXJuJyksICd0ZXh0cGF0dGVybicpOwoJcmVnaXN0ZXJfY2FsbGJh
Y2soYXJyYXkoJiRnYnBfcGwsICdfdGV4dHBhdHRlcm5fZW5kJyksICd0ZXh0cGF0dGVybl9l
bmQnKTsKCglmdW5jdGlvbiBnYnBfaWZfcmVnZXggKCRhdHRzLCAkdGhpbmcpIHsKCQlnbG9i
YWwgJHByZXRleHQ7CgkJZXh0cmFjdChsQXR0cyhhcnJheSgKCQkJJ25hbWUnID0+ICcnLAoJ
CQkndmFsJyAgPT4gJycsCgkJKSwkYXR0cykpOwoJCSRtYXRjaCA9IChAJHByZXRleHRbInBl
cm1saW5rX3JlZ2V4X3skbmFtZX0iXSA9PSAkdmFsKTsKCQlyZXR1cm4gcGFyc2UoRXZhbEVs
c2UoJHRoaW5nLCAkbWF0Y2gpKTsKCX0KCglmdW5jdGlvbiBnYnBfaWZfdGV4dCAoJGF0dHMs
ICR0aGluZykgewoJCWdsb2JhbCAkcHJldGV4dDsKCQlleHRyYWN0KGxBdHRzKGFycmF5KAoJ
CQknbmFtZScgPT4gJycsCgkJCSd2YWwnICA9PiAnJywKCQkpLCRhdHRzKSk7CgoJCSRtYXRj
aCA9IGZhbHNlOwoJCWlmICghZW1wdHkoJG5hbWUpKSB7CgkJCWlmIChlbXB0eSgkdmFsKSkK
CQkJCSRtYXRjaCA9IChpc3NldCgkcHJldGV4dFsicGVybWxpbmtfdGV4dF97JG5hbWV9Il0p
KTsKCQkJZWxzZQoJCQkJJG1hdGNoID0gKEAkcHJldGV4dFsicGVybWxpbmtfdGV4dF97JG5h
bWV9Il0gPT0gJHZhbCk7CgkJfQoJCXJldHVybiBwYXJzZShFdmFsRWxzZSgkdGhpbmcsICRt
YXRjaCkpOwoJfQoKCWZ1bmN0aW9uIGdicF91c2VfcGFnZWxpbmsgKCRhdHRzLCAkdGhpbmcg
PSAnJykgewoJCWdsb2JhbCAkZ2JwX3BsOwoJCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkJCSdy
dWxlJyA9PiAnJywKCQkpLCRhdHRzKSk7CgkJcmV0dXJuICRnYnBfcGwtPl90ZXh0cGF0dGVy
bl9lbmRfY2FsbGJhY2socGFyc2UoJHRoaW5nKSwgJHJ1bGUpOwoJfQoKCWZ1bmN0aW9uIGdi
cF9kaXNhYmxlX3Blcm1saW5rcyAoJGF0dHMsICR0aGluZyA9ICcnKSB7CgkJZ2xvYmFsICRn
YnBfcGw7CgkJcmV0dXJuICRnYnBfcGwtPnRvZ2dsZV9wZXJtbGlua19tb2RlKCdwYXJzZScs
ICR0aGluZyk7Cgl9Cn0KIjtzOjM6Im1kNSI7czozMjoiYmUwMTI3MTI3ODUzZTRjMDM3MDI2
MTlmODQzMGI3OGYiO30=
