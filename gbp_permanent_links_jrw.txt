# gbp_permanent_links_jrw v0.14_jrw
# Custom permanent links rules
# Graeme Porteous, modified by Jeffrey Woldan
# http://rgbp.co.uk/projects/textpattern/gbp_permanent_links/

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YTo5OntzOjQ6Im5hbWUiO3M6MjM6ImdicF9wZXJtYW5lbnRfbGlua3NfanJ3IjtzOjc6InZl
cnNpb24iO3M6ODoiMC4xNF9qcnciO3M6NjoiYXV0aG9yIjtzOjQzOiJHcmFlbWUgUG9ydGVv
dXMsIG1vZGlmaWVkIGJ5IEplZmZyZXkgV29sZGFuIjtzOjEwOiJhdXRob3JfdXJpIjtzOjU5
OiJodHRwOi8vcmdicC5jby51ay9wcm9qZWN0cy90ZXh0cGF0dGVybi9nYnBfcGVybWFuZW50
X2xpbmtzLyI7czoxMToiZGVzY3JpcHRpb24iO3M6Mjg6IkN1c3RvbSBwZXJtYW5lbnQgbGlu
a3MgcnVsZXMiO3M6NDoidHlwZSI7czoxOiIxIjtzOjQ6ImhlbHAiO3M6MTUxOiJoMS4gZ2Jw
X3Blcm1hbmVudF9saW5rcy4KClRoZXJlIGlzIG5vIHBsdWdpbiBkb2N1bWVudGF0aW9uLiBG
b3IgaGVscCBwbGVhc2UgdXNlIHRoZSAiZm9ydW0gdGhyZWFkIjpodHRwOi8vZm9ydW0udGV4
dHBhdHRlcm4uY29tL3ZpZXd0b3BpYy5waHA/aWQ9MTg5MTguIjtzOjQ6ImNvZGUiO3M6Njc3
ODU6IgovLyBDb25zdGFudHMKQGRlZmluZSgnZ2JwX3NhdmUnLCAnc2F2ZScpOwpAZGVmaW5l
KCdnYnBfcG9zdCcsICdwb3N0Jyk7CkBkZWZpbmUoJ2dicF9zZXBhcmF0b3InLCAnJn4mfiYn
KTsKCi8vIHJlcXVpcmVfcGx1Z2luKCkgd2lsbCByZXNldCB0aGUgJHR4cF9jdXJyZW50X3Bs
dWdpbiBnbG9iYWwKZ2xvYmFsICR0eHBfY3VycmVudF9wbHVnaW47CiRnYnBfY3VycmVudF9w
bHVnaW4gPSAkdHhwX2N1cnJlbnRfcGx1Z2luOwpyZXF1aXJlX3BsdWdpbignZ2JwX2FkbWlu
X2xpYnJhcnknKTsKJHR4cF9jdXJyZW50X3BsdWdpbiA9ICRnYnBfY3VycmVudF9wbHVnaW47
CgpjbGFzcyBQZXJtYW5lbnRMaW5rcyBleHRlbmRzIEdCUFBsdWdpbgp7Cgl2YXIgJHBlcm1p
c3Npb25zID0gJzEsMic7Cgl2YXIgJHByZWZlcmVuY2VzID0gYXJyYXkoCgkJJ3Nob3dfcHJl
Zml4JyA9PiBhcnJheSgndmFsdWUnID0+IDAsICd0eXBlJyA9PiAneWVzbm9yYWRpbycpLAoJ
CSdzaG93X3N1ZmZpeCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwLCAndHlwZScgPT4gJ3llc25v
cmFkaW8nKSwKCQknb21pdF90cmFpbGluZ19zbGFzaCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAw
ICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3JlZGlyZWN0X210X3N0eWxlX2xpbmtz
JyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQkn
Y2xlYW5fcGFnZV9hcmNoaXZlX2xpbmtzJyA9PiBhcnJheSgndmFsdWUnID0+IDEgLCAndHlw
ZScgPT4gJ3llc25vcmFkaW8nKSwKCQknam9pbl9wcmV0ZXh0X3RvX3BhZ2VsaW5rcycgPT4g
YXJyYXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2NoZWNr
X3ByZXRleHRfY2F0ZWdvcnlfY29udGV4dCcgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAwICwgJ3R5
cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ2NoZWNrX3ByZXRleHRfc2VjdGlvbl9jb250ZXh0
JyA9PiBhcnJheSgndmFsdWUnID0+IDAgLCAndHlwZScgPT4gJ3llc25vcmFkaW8nKSwKCQkn
Zm9yY2VfbG93ZXJjYXNlX3VybHMnID0+IGFycmF5KCd2YWx1ZScgPT4gMSAsICd0eXBlJyA9
PiAneWVzbm9yYWRpbycpLAoJCSdhdXRvbWF0aWNhbGx5X2FwcGVuZF90aXRsZScgPT4gYXJy
YXkoJ3ZhbHVlJyA9PiAxICwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkJJ3Blcm1saW5r
X3JlZGlyZWN0X2h0dHBfc3RhdHVzJyA9PiBhcnJheSgndmFsdWUnID0+ICczMDEnICwgJ3R5
cGUnID0+ICd0ZXh0X2lucHV0JyksCgkJJ3VybF9yZWRpcmVjdF9odHRwX3N0YXR1cycgPT4g
YXJyYXkoJ3ZhbHVlJyA9PiAnMzAyJyAsICd0eXBlJyA9PiAndGV4dF9pbnB1dCcpLAoJCSd0
ZXh0X2FuZF9yZWdleF9zZWdtZW50X3Njb3JlcycgPT4gYXJyYXkoJ3ZhbHVlJyA9PiAnMCcg
LCAndHlwZScgPT4gJ3RleHRfaW5wdXQnKSwKCQknZGVidWcnID0+IGFycmF5KCd2YWx1ZScg
PT4gMCwgJ3R5cGUnID0+ICd5ZXNub3JhZGlvJyksCgkpOwoJdmFyICRtYXRjaGVkX3Blcm1s
aW5rID0gYXJyYXkoKTsKCXZhciAkcGFydGlhbF9tYXRjaGVzID0gYXJyYXkoKTsKCXZhciAk
Y2xlYXZlcl9wYXJ0aWFsX21hdGNoOwoJdmFyICRidWZmZXJfZGVidWcgPSBhcnJheSgpOwoK
CWZ1bmN0aW9uIHByZWxvYWQgKCkgewoJCW5ldyBQZXJtYW5lbnRMaW5rc0xpc3RUYWJWaWV3
KCdsaXN0JywgJ2xpc3QnLCAkdGhpcyk7CgkJbmV3IFBlcm1hbmVudExpbmtzQnVpbGRUYWJW
aWV3KCdidWlsZCcsICdidWlsZCcsICR0aGlzKTsKCQluZXcgR0JQUHJlZmVyZW5jZVRhYlZp
ZXcoJHRoaXMpOwoJfQoKCWZ1bmN0aW9uIG1haW4gKCkgewoJCXJlcXVpcmVfcHJpdnMoJHRo
aXMtPmV2ZW50KTsKCX0KCglmdW5jdGlvbiBnZXRfYWxsX3Blcm1saW5rcyAoJHNvcnQgPSAw
LCAkZXhjbHVkZSA9IGFycmF5KCkpIHsKCQlzdGF0aWMgJHJzOwoJCWlmICghaXNzZXQoJHJz
KSkKCQkJJHJzID0gc2FmZV9jb2x1bW4oCgkJCQkiUkVQTEFDRShuYW1lLCAneyR0aGlzLT5w
bHVnaW5fbmFtZX1fJywgJycpIEFTIGlkIiwgJ3R4cF9wcmVmcycsCgkJCQkiYGV2ZW50YCA9
ICd7JHRoaXMtPmV2ZW50fScgQU5EIGBuYW1lYCBSRUdFWFAgJ157JHRoaXMtPnBsdWdpbl9u
YW1lfV8uezEzfSQnIgoJCQkpOwoKCQlpZiAoQHR4cGludGVyZmFjZSA9PSAncHVibGljJykK
CQkJJHRoaXMtPmRlYnVnKCdMb2FkaW5nIHBlcm1saW5rcyBmcm9tIGRiJyk7CgkJJGkgPSAw
OwoKCQkkcGVybWxpbmtzID0gYXJyYXkoKTsKCQlmb3JlYWNoICgkcnMgYXMgJGlkKSB7CgkJ
CSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJGlkKTsKCgkJCWlmIChjb3VudCgkZXhjbHVk
ZSkgPiAwKQoJCQkJZm9yZWFjaCAoJHBsWydjb21wb25lbnRzJ10gYXMgJHBsX2MpIHsKCQkJ
CQlpZiAoaXNfYXJyYXkoJGV4Y2x1ZGUpICYmIGluX2FycmF5KCRwbF9jWyd0eXBlJ10sICRl
eGNsdWRlKSkKCQkJCQkJY29udGludWUgMjsKCQkJCQlpZiAoaXNfc3RyaW5nKCRleGNsdWRl
KSAmJiAkcGxfY1sndHlwZSddID09PSAkZXhjbHVkZSkKCQkJCQkJY29udGludWUgMjsKCQkJ
CX0KCgkJCSRwZXJtbGlua3NbJGlkXSA9ICRwbDsKCgkJCWlmICgkc29ydCkKCQkJCSRwcmVj
ZWRlbmNlWyRpZF0gPSAkcGVybWxpbmtzWyRpZF1bJ3NldHRpbmdzJ11bJ3BsX3ByZWNlZGVu
Y2UnXTsKCQl9CgoJCS8vIElmIG1vcmUgdGhhbiBvbmUgcGVybWFuZW50IGxpbmssIHNvcnQg
YnkgdGhlaXIgcHJlY2VkZW5jZSB2YWx1ZS4KCQlpZiAoJHNvcnQgJiYgY291bnQoJHBlcm1s
aW5rcykgPiAxKQoJCQlhcnJheV9tdWx0aXNvcnQoJHByZWNlZGVuY2UsIFNPUlRfREVTQywg
JHBlcm1saW5rcyk7CgoJCWlmIChAdHhwaW50ZXJmYWNlID09ICdwdWJsaWMnKSB7CgkJCWZv
cmVhY2ggKCRwZXJtbGlua3MgYXMgJHBsKQoJCQkJJHRoaXMtPmRlYnVnKCRwbFsnc2V0dGlu
Z3MnXVsncGxfcHJlY2VkZW5jZSddLic6ICcuJHBsWydzZXR0aW5ncyddWydwbF9uYW1lJ10u
JyAoJy4kcGxbJ3NldHRpbmdzJ11bJ3BsX3ByZXZpZXcnXS4nKScpOwoJCX0KCgkJcmV0dXJu
ICRwZXJtbGlua3M7Cgl9CgoJZnVuY3Rpb24gZ2V0X3Blcm1saW5rICgkaWQpIHsKCQkkcGVy
bWxpbmsgPSAkdGhpcy0+cHJlZigkaWQpOwoJCXJldHVybiBpc19hcnJheSgkcGVybWxpbmsp
ID8gJHBlcm1saW5rIDogYXJyYXkoKTsKCX0KCglmdW5jdGlvbiByZW1vdmVfcGVybWxpbmsg
KCRpZCkgewoJCSRwZXJtbGluayA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJGlkKTsKCQlzYWZl
X2RlbGV0ZSgndHhwX3ByZWZzJywgImBldmVudGAgPSAneyR0aGlzLT5ldmVudH0nIEFORCBg
bmFtZWAgTElLRSAneyR0aGlzLT5wbHVnaW5fbmFtZX1feyRpZH0lJyIpOwoJCXJldHVybiAk
cGVybWxpbmtbJ3NldHRpbmdzJ11bJ3BsX25hbWUnXTsKCX0KCglmdW5jdGlvbiBfZmVlZF9l
bnRyeSAoKSB7CgkJc3RhdGljICRzZXQ7CgkJaWYgKCFpc3NldCgkc2V0KSkgewoJCQkvLyBX
ZSdyZSBpbiBhIGZlZWQgZm9yY2UgZGVidWdnaW5nIG9mZi4KCQkJJHRoaXMtPnByZWZlcmVu
Y2VzWydkZWJ1ZyddWyd2YWx1ZSddID0gJEdMT0JBTFNbJ3ByZWZzJ11bJHRoaXMtPnBsdWdp
bl9uYW1lLidfZGVidWcnXSA9IDA7CgoJCQkkdGhpcy0+c2V0X3Blcm1saW5rX21vZGUodHJ1
ZSk7CgkJCSRzZXQgPSB0cnVlOwoJCX0KCX0KCglmdW5jdGlvbiBfdGV4dHBhdHRlcm4gKCkg
ewoJCWdsb2JhbCAkcGx1Z2luc192ZXIsICRwcmV0ZXh0LCAkcHJlZnMsICRwbHVnaW5fY2Fs
bGJhY2s7CgoJCSR0aGlzLT5kZWJ1ZygnUGx1Z2luOiAnLiR0aGlzLT5wbHVnaW5fbmFtZS4n
IC0gJy4kcGx1Z2luc192ZXJbJHRoaXMtPnBsdWdpbl9uYW1lXSk7CgkJJHRoaXMtPmRlYnVn
KCdGdW5jdGlvbjogJy5fX0ZVTkNUSU9OX18uJygpJyk7CgoJCS8vIFVSSQoJCSRyZXEgPSAk
cHJldGV4dFsncmVxJ107CgkJJHJlcSA9IHByZWdfcmVwbGFjZSgnJVw/W15cL10rJCUnLCAn
JywgJHJlcSk7CgkJJHRoaXMtPmRlYnVnKCdSZXF1ZXN0IFVSSTogJy4kcmVxKTsKCQkkdXJp
ID0gZXhwbG9kZSgnLycsIHRyaW0oJHJlcSwgJy8nKSk7CgoJCS8vIFRoZSBudW1iZXIgb2Yg
Y29tcG9uZW50cyBjb21lcyBpbiB1c2VmdWwgd2hlbiBkZXRlcm1pbmluZyB0aGUgYmVzdCBw
YXJ0aWFsIG1hdGNoLgoJCSR1cmlfY29tcG9uZW50X2NvdW50ID0gY291bnQoJHVyaSk7CgoJ
CS8vIFBlcm1hbmVudCBsaW5rcwoJCSRwZXJtbGlua3MgPSAkdGhpcy0+Z2V0X2FsbF9wZXJt
bGlua3MoMSk7CgoJCS8vIEZvcmNlIFRleHRwYXR0ZXJuIGFuZCB0YWdzIHRvIHVzZSBtZXNz
eSBVUkxzIC0gdGhlc2UgYXJlIGVhc2llciB0bwoJCS8vIGZpbmQgaW4gcmVnZXgKCQkkdGhp
cy0+c2V0X3Blcm1saW5rX21vZGUoKTsKCgkJaWYgKGNvdW50KCRwZXJtbGlua3MpKSB7CgoJ
CQkvLyBXZSBhbHNvIHdhbnQgdG8gbWF0Y2ggdGhlIGZyb250IHBhZ2Ugb2YgdGhlIHNpdGUg
KGZvciBwYWdlIG51bWJlcnMgLyBmZWVkcyBldGMuLikuCgkJCS8vIEFkZCBhIHBlcm1saW5r
cyBydWxlIHdoaWNoIHdpbGwgZG8gdGhhdC4KCQkJJHBlcm1saW5rc1snZGVmYXVsdCddID0g
YXJyYXkoCgkJCQknY29tcG9uZW50cycgPT4gYXJyYXkoKSwKCQkJCSdzZXR0aW5ncycgPT4g
YXJyYXkoCgkJCQkJJ3BsX25hbWUnID0+ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1bHQn
LCAncGxfcHJlY2VkZW5jZScgPT4gJycsICdwbF9wcmV2aWV3JyA9PiAnLycsCgkJCQkJJ2Nv
bl9zZWN0aW9uJyA9PiAnJywgJ2Nvbl9jYXRlZ29yeScgPT4gJycsICdkZXNfc2VjdGlvbicg
PT4gJycsICdkZXNfY2F0ZWdvcnknID0+ICcnLAoJCQkJCSdkZXNfcGVybWxpbmsnID0+ICcn
LCAnZGVzX2ZlZWQnID0+ICcnLCAnZGVzX2xvY2F0aW9uJyA9PiAnJywgJ2Rlc19wYWdlJyA9
PiAnJwoJCQkpKTsKCgkJCS8vIEV4dGVuZCB0aGUgcHJldGV4dF9yZXBsYWNlbWVudCBzY29w
ZSBvdXRzaWRlIHRoZSBmb3JlYWNoIHBlcm1saW5rIGxvb3AKCQkJJHByZXRleHRfcmVwbGFj
ZW1lbnQgPSBOVUxMOwoKCQkJZm9yZWFjaCgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGwpIHsK
CQkJCS8vIEV4dHJhY3QgdGhlIHBlcm1saW5rIHNldHRpbmdzCgkJCQkkcGxfc2V0dGluZ3Mg
PSAkcGxbJ3NldHRpbmdzJ107CgkJCQlleHRyYWN0KCRwbF9zZXR0aW5ncyk7CgoJCQkJJHRo
aXMtPmRlYnVnKCdQZXJtbGluayBuYW1lOiAnLiRwbF9uYW1lKTsKCQkJCSR0aGlzLT5kZWJ1
ZygnUGVybWxpbmsgaWQ6ICcuJGlkKTsKCQkJCSR0aGlzLT5kZWJ1ZygnUHJldmlldzogJy4k
cGxfcHJldmlldyk7CgoJCQkJJHBsX2NvbXBvbmVudHMgPSAkcGxbJ2NvbXBvbmVudHMnXTsK
CgkJCQkvLyBVUkkgY29tcG9uZW50cwoJCQkJJHVyaV9jb21wb25lbnRzID0gJHVyaTsKCgkJ
CQkkdGhpcy0+ZGVidWcoJ1BMIGNvbXBvbmVudCBjb3VudDogJy5jb3VudCgkcGxfY29tcG9u
ZW50cykpOwoJCQkJJHRoaXMtPmRlYnVnKCdVUkwgY29tcG9uZW50IGNvdW50OiAnLmNvdW50
KCR1cmlfY29tcG9uZW50cykpOwoKCQkJCSRkYXRlID0gZmFsc2U7ICR0aXRsZV9wYWdlX2Zl
ZWQgPSBmYWxzZTsKCQkJCWZvcmVhY2goJHBsX2NvbXBvbmVudHMgYXMgJHBsX2MpCgkJCQkJ
Ly8gQXJlIHdlIGV4cGVjdGluZyBhIGRhdGUgY29tcG9uZW50PyBJZiBzbyB0aGUgbnVtYmVy
IG9mIHBsIGFuZCB1cmkgY29tcG9uZW50cyB3b24ndCBtYXRjaAoJCQkJCWlmICgkcGxfY1sn
dHlwZSddID09ICdkYXRlJykKCQkJCQkgCSRkYXRlID0gdHJ1ZTsKCQkJCQkvLyBEbyB3ZSBo
YXZlIGVpdGhlciBhIHRpdGxlLCBwYWdlIG9yIGEgZmVlZCBjb21wb25lbnQ/CgkJCQkJZWxz
ZSBpZiAoaW5fYXJyYXkoJHBsX2NbJ3R5cGUnXSwgYXJyYXkoJ3RpdGxlJywgJ3BhZ2UnLCAn
ZmVlZCcpKSkKCQkJCQkJJHRpdGxlX3BhZ2VfZmVlZCA9IHRydWU7CgoJCQkJaWYgKCEkdGl0
bGVfcGFnZV9mZWVkKQoJCQkJCS8vIElmIHRoZXJlIGlzbid0IGEgdGl0bGUsIHBhZ2Ugb3Ig
ZmVlZCBjb21wb25lbnQgdGhlbiBhcHBlbmQgYSBzcGVjaWFsIHR5cGUgZm9yIGNsZWF2ZXIg
cGFydGlhbCBtYXRjaGluZwoJCQkJCSRwbF9jb21wb25lbnRzW10gPSBhcnJheSgndHlwZScg
PT4gJ3RpdGxlX3BhZ2VfZmVlZCcsICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywg
J3JlZ2V4JyA9PiAnJywgJ3RleHQnID0+ICcnKTsKCgkJCQkvLyBFeGl0IGVhcmx5IGlmIHRo
ZXJlIGFyZSBtb3JlIFVSTCBjb21wb25lbnRzIHRoYW4gUEwgY29tcG9uZW50cywKCQkJCS8v
IHRha2luZyBpbnRvIGFjY291bnQgd2hldGhlciB0aGVyZSBpcyBhIGRhdGEgY29tcG9uZW50
CgkJCQlpZiAoISR1cmlfY29tcG9uZW50c1swXSB8fCBjb3VudCgkdXJpX2NvbXBvbmVudHMp
ID4gY291bnQoJHBsX2NvbXBvbmVudHMpICsgKCRkYXRlID8gMiA6IDApKSB7CgkJCQkJJHRo
aXMtPmRlYnVnKCdNb3JlIFVSTCBjb21wb25lbnRzIHRoYW4gUEwgY29tcG9uZW50cycpOwoJ
CQkJCWNvbnRpbnVlOwoJCQkJfQoKCQkJCS8vIFJlc2V0IHByZXRleHRfcmVwbGFjZW1lbnQg
YXMgd2UgYXJlIGFib3V0IHRvIHN0YXJ0IGFub3RoZXIgY29tcGFyaXNvbgoJCQkJJHByZXRl
eHRfcmVwbGFjZW1lbnQgPSBhcnJheSgncGVybWxpbmtfaWQnID0+ICRpZCk7CgoJCQkJLy8g
UmVzZXQgdGhlIGFydGljbGUgY29udGV4dCBzdHJpbmcKCQkJCSRjb250ZXh0ID0gYXJyYXko
KTsKCQkJCXVuc2V0KCRjb250ZXh0X3N0cik7CgkJCQlpZiAoIWVtcHR5KCRkZXNfc2VjdGlv
bikpCgkJCQkJJGNvbnRleHRbXSA9ICJgU2VjdGlvbmAgPSAnJGRlc19zZWN0aW9uJyI7CgkJ
CQlpZiAoIWVtcHR5KCRkZXNfY2F0ZWdvcnkpKQoJCQkJCSRjb250ZXh0W10gPSAiKGBDYXRl
Z29yeTFgID0gJyRkZXNfY2F0ZWdvcnknIE9SIGBDYXRlZ29yeTJgID0gJyRkZXNfY2F0ZWdv
cnknKSI7CgkJCQkkY29udGV4dF9zdHIgPSAoY291bnQoJGNvbnRleHQpID4gMCA/ICdhbmQg
Jy5qb2luKCcgYW5kICcsICRjb250ZXh0KSA6ICcnKTsKCgkJCQkvLyBBc3N1bWUgdGhlcmUg
aXMgbm8gbWF0Y2gKCQkJCSRwYXJ0aWFsX21hdGNoID0gZmFsc2U7CgkJCQkkY2xlYXZlcl9w
YXJ0aWFsX21hdGNoID0gZmFsc2U7CgoJCQkJLy8gTG9vcCB0aHJvdWdoIHRoZSBwZXJtbGlu
ayBjb21wb25lbnRzCgkJCQlmb3JlYWNoICgkcGxfY29tcG9uZW50cyBhcyAkcGxfY19pbmRl
eCA9PiAkcGxfYykgewoJCQkJCS8vIEFzc3VtZSB0aGVyZSBpcyBubyBtYXRjaAoJCQkJCSRt
YXRjaCA9IGZhbHNlOwoKCQkJCQkvLyBDaGVjayB0byBzZWUgaWYgdGhlcmUgYXJlIHN0aWxs
IFVSSSBjb21wb25lbnRzIHRvIGJlIGNoZWNrZWQuCgkJCQkJaWYgKGNvdW50KCR1cmlfY29t
cG9uZW50cykpCgkJCQkJCS8vIEdldCB0aGUgbmV4dCBjb21wb25lbnQuCgkJCQkJCSR1cmlf
YyA9IGFycmF5X3NoaWZ0KCR1cmlfY29tcG9uZW50cyk7CgoJCQkJCWVsc2UgaWYgKCEkdGl0
bGVfcGFnZV9mZWVkICYmIGNvdW50KCRwbF9jb21wb25lbnRzKSAtIDEgPT0gJHVyaV9jb21w
b25lbnRfY291bnQpIHsKCQkJCQkJLy8gSWYgd2UgYXBwZW5kZWQgYSB0aXRsZV9wYWdlX2Zl
ZWQgY29tcG9uZW50IGVhcmxpZXIgYW5kIHBlcm1saW5rIGFuZCBVUkkgY29tcG9uZW50cwoJ
CQkJCQkvLyBjb3VudHMgYXJlIGVxdWFsLCB3ZSBtdXN0IG9mIGZpbmlzaGVkIGNoZWNraW5n
IHRoaXMgcGVybWxpbmssIGFuZCBpdCBtYXRjaGVzIHNvIGJyZWFrLgoJCQkJCQkkbWF0Y2gg
PSB0cnVlOwoJCQkJCQlicmVhazsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJLy8gSWYgdGhlcmUg
YXJlIG5vIG1vcmUgVVJJIGNvbXBvbmVudHMgdGhlbiB3ZSBoYXZlIGEgcGFydGlhbCBtYXRj
aC4KCQkJCQkJLy8gU3RvcmUgdGhlIHBhcnRpYWwgbWF0Y2ggZGF0YSB1bmxlc3MgdGhlcmUg
aGFzIGJlZW4gYSBwcmVjZWRpbmcgcGVybWxpbmsgd2l0aCB0aGUKCQkJCQkJLy8gc2FtZSBu
dW1iZXIgb2YgY29tcG9uZW50cywgYXMgcGVybWxpbmsgaGF2ZSBhbHJlYWR5IGJlZW4gc29y
dGVkIGJ5IHByZWNlZGVuY2UuCgkJCQkJCWlmICghYXJyYXlfa2V5X2V4aXN0cygkdXJpX2Nv
bXBvbmVudF9jb3VudCwgJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcykpCgkJCQkJCQkkdGhpcy0+
cGFydGlhbF9tYXRjaGVzWyR1cmlfY29tcG9uZW50X2NvdW50XSA9ICRwcmV0ZXh0X3JlcGxh
Y2VtZW50OwoKCQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2Vz
IGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJdW5z
ZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoKCQkJCQkJLy8gQnJlYWsgZWFybHkgZm9ybSB0
aGUgZm9yZWFjaCBwZXJtbGluayBjb21wb25lbnRzIGxvb3AuCgkJCQkJCSRwYXJ0aWFsX21h
dGNoID0gdHJ1ZTsKCQkJCQkJYnJlYWs7CgkJCQkJfQoKCQkJCQkvLyBFeHRyYWN0IHRoZSBw
ZXJtbGluayBjb21wb25lbnRzLgoJCQkJCWV4dHJhY3QoJHBsX2MpOwoKCQkJCQkvLyBJZiBp
dCdzIGEgZGF0ZSwgZ3JhYiBhbmQgY29tYmluZSB0aGUgbmV4dCB0d28gVVJJIGNvbXBvbmVu
dHMuCgkJCQkJaWYgKCR0eXBlID09ICdkYXRlJykKCQkJCQkJJHVyaV9jIC49ICcvJy5hcnJh
eV9zaGlmdCgkdXJpX2NvbXBvbmVudHMpLicvJy5hcnJheV9zaGlmdCgkdXJpX2NvbXBvbmVu
dHMpOwoKCQkJCQkvLyBEZWNvZGUgdGhlIFVSTAoJCQkJCSR1cmlfYyA9IHVybGRlY29kZSgk
dXJpX2MpOwoKCQkJCQkvLyBBbHdheXMgY2hlY2sgdGhlIHR5cGUgdW5sZXNzIHRoZSBwcmVm
aXggb3Igc3VmZml4IGFyZW4ndCB0aGVyZQoJCQkJCSRjaGVja190eXBlID0gdHJ1ZTsKCgkJ
CQkJLy8gQ2hlY2sgcHJlZml4CgkJCQkJaWYgKCRwcmVmaXggJiYgJHRoaXMtPnByZWYoJ3No
b3dfcHJlZml4JykpIHsKCQkJCQkJJHNhbml0aXplZF9wcmVmaXggPSB1cmxkZWNvZGUoJHRo
aXMtPmVuY29kZV91cmwoJHByZWZpeCkpOwoJCQkJCQlpZiAoKCRwb3MgPSBzdHJwb3MoJHVy
aV9jLCAkc2FuaXRpemVkX3ByZWZpeCkpID09PSBmYWxzZSB8fCAkcG9zICE9IDApIHsKCQkJ
CQkJCSRjaGVja190eXBlID0gZmFsc2U7CgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NhblwndCBm
aW5kIHByZWZpeDogJy4kcHJlZml4KTsKCQkJCQkJfSBlbHNlCgkJCQkJCQkvLyBDaGVjayBw
YXNzZWQsIHJlbW92ZSBwcmVmaXggcmVhZHkgZm9yIHRoZSBuZXh0IGNoZWNrCgkJCQkJCQkk
dXJpX2MgPSBzdWJzdHJfcmVwbGFjZSgkdXJpX2MsICcnLCAwLCBzdHJsZW4oJHNhbml0aXpl
ZF9wcmVmaXgpKTsKCQkJCQl9CgoJCQkJCS8vIENoZWNrIHN1ZmZpeAoJCQkJCWlmICgkY2hl
Y2tfdHlwZSAmJiAkc3VmZml4ICYmICR0aGlzLT5wcmVmKCdzaG93X3N1ZmZpeCcpKSB7CgkJ
CQkJCSRzYW5pdGl6ZWRfc3VmZml4ID0gdXJsZGVjb2RlKCR0aGlzLT5lbmNvZGVfdXJsKCRz
dWZmaXgpKTsKCQkJCQkJaWYgKCgkcG9zID0gc3RycnBvcygkdXJpX2MsICRzYW5pdGl6ZWRf
c3VmZml4KSkgPT09IGZhbHNlKSB7CgkJCQkJCQkkY2hlY2tfdHlwZSA9IGZhbHNlOwoJCQkJ
CQkJJHRoaXMtPmRlYnVnKCdDYW5cJ3QgZmluZCBzdWZmaXg6ICcuJHN1ZmZpeCk7CgkJCQkJ
CX0gZWxzZQoJCQkJCQkJLy8gQ2hlY2sgcGFzc2VkLCByZW1vdmUgc3VmZml4IHJlYWR5IGZv
ciB0aGUgbmV4dCBjaGVjawoJCQkJCQkJJHVyaV9jID0gc3Vic3RyX3JlcGxhY2UoJHVyaV9j
LCAnJywgJHBvcywgc3RybGVuKCRzYW5pdGl6ZWRfc3VmZml4KSk7CgkJCQkJfQoKCQkJCQkv
LyBCb3RoIHRoZSBwcmVmaXggYW5kIHN1ZmZpeCBzZXR0aW5ncyBoYXZlIHBhc3NlZAoJCQkJ
CWlmICgkY2hlY2tfdHlwZSkgewoJCQkJCQkkdGhpcy0+ZGVidWcoJ0NoZWNraW5nIGlmICIn
LiR1cmlfYy4nIiBpcyBvZiB0eXBlICInLiR0eXBlLiciJyk7CgkJCQkJCSR1cmlfYyA9IGRv
U2xhc2goJHVyaV9jKTsKCgkJCQkJCS8vCgkJCQkJCWlmICgkcHJlZnNbJ3Blcm1hbGlua190
aXRsZV9mb3JtYXQnXSkgewoJCQkJCQkJJG10X3NlYXJjaCA9IGFycmF5KCcvXy8nLCAnL1wu
aHRtbCQvJyk7CgkJCQkJCQkkbXRfcmVwbGFjZSA9IGFycmF5KCctJywgJycpOwoJCQkJCQl9
IGVsc2UgewoJCQkJCQkJJG10X3NlYXJjaCA9IGFycmF5KCcvKD86XnxfKSguKS9lJywgJy9c
Lmh0bWwkLycpOwoJCQkJCQkJJG10X3JlcGxhY2UgPSBhcnJheSgic3RydG91cHBlcignXFwx
JykiLCAnJyk7CgkJCQkJCX0KCQkJCQkJJG10X3VyaV9jID0gJHRoaXMtPnByZWYoJ3JlZGly
ZWN0X210X3N0eWxlX2xpbmtzJykKCQkJCQkJCT8gcHJlZ19yZXBsYWNlKCRtdF9zZWFyY2gs
ICRtdF9yZXBsYWNlLCAkdXJpX2MpCgkJCQkJCQk6ICcnOwoKCQkJCQkJLy8gQ29tcGFyZSBi
YXNlZCBvbiB0eXBlCgkJCQkJCXN3aXRjaCAoJHR5cGUpIHsKCQkJCQkJCWNhc2UgJ3NlY3Rp
b24nOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygnbmFtZScsICd0eHBfc2VjdGlvbics
ICIoYG5hbWVgIGxpa2UgJyR1cmlfYycgb3IgYG5hbWVgIGxpa2UgJyRtdF91cmlfYycpIGxp
bWl0IDEiKSkgewoJCQkJCQkJCQkkdGhpcy0+ZGVidWcoJ1NlY3Rpb24gbmFtZTogJy4kcnNb
J25hbWUnXSk7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydzJ10gPSAkcnNbJ25h
bWUnXTsKCQkJCQkJCQkJJGNvbnRleHRbXSA9ICJgU2VjdGlvbmAgPSAneyRyc1snbmFtZSdd
fSciOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJ
CQkJCQkJY2FzZSAnY2F0ZWdvcnknOgoJCQkJCQkJCWlmICgkcnMgPSBzYWZlX3JvdygnbmFt
ZScsICd0eHBfY2F0ZWdvcnknLCAiKGBuYW1lYCBsaWtlICckdXJpX2MnIG9yIGBuYW1lYCBs
aWtlICckbXRfdXJpX2MnKSBhbmQgYHR5cGVgID0gJ2FydGljbGUnIGxpbWl0IDEiKSkgewoJ
CQkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NhdGVnb3J5IG5hbWU6ICcuJHJzWyduYW1lJ10pOwoJ
CQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYyddID0gJHJzWyduYW1lJ107CgkJCQkJ
CQkJCSRjb250ZXh0W10gPSAiKGBDYXRlZ29yeTFgID0gJ3skcnNbJ25hbWUnXX0nIE9SIGBD
YXRlZ29yeTJgID0gJyR1cmlfYycpIjsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJ
CQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3RpdGxlJzoKCQkJCQkJCQlpZiAoJHJz
ID0gc2FmZV9yb3coJ3VybF90aXRsZScsICd0ZXh0cGF0dGVybicsICIoYHVybF90aXRsZWAg
bGlrZSAnJHVyaV9jJyBvciBgdXJsX3RpdGxlYCBsaWtlICckbXRfdXJpX2MnKSAkY29udGV4
dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSR0aGlzLT5k
ZWJ1ZygnVVJMIFRpdGxlOiAnLiRyc1sndXJsX3RpdGxlJ10pOwoJCQkJCQkJCQkkbXRfcmVk
aXJlY3QgPSAoJHVyaV9jICE9ICRtdF91cmlfYyk7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxh
Y2VtZW50Wyd1cmxfdGl0bGUnXSA9ICRyc1sndXJsX3RpdGxlJ107CgkJCQkJCQkJCSRtYXRj
aCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdpZCc6CgkJ
CQkJCQkJaWYgKCRycyA9IHNhZmVfcm93KCdJRCwgUG9zdGVkJywgJ3RleHRwYXR0ZXJuJywg
ImBJRGAgPSAnJHVyaV9jJyAkY29udGV4dF9zdHIgYW5kIGBTdGF0dXNgID49IDQgbGltaXQg
MSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCddID0gJHJzWydJRCdd
OwoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10gPSAkcnNbJ1Bvc3Rl
ZCddOwoJCQkJCQkJCQkkcHJldGV4dFsnbnVtUGFnZXMnXSA9IDE7CgkJCQkJCQkJCSRwcmV0
ZXh0Wydpc19hcnRpY2xlX2xpc3QnXSA9IGZhbHNlOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVl
OwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAnYXV0aG9yJzoKCQkJCQkJ
CQlpZiAoJGF1dGhvciA9IHNhZmVfZmllbGQoJ25hbWUnLCAndHhwX3VzZXJzJywgIlJlYWxO
YW1lIGxpa2UgJyR1cmlfYycgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxh
Y2VtZW50WydhdXRob3InXSA9ICRhdXRob3I7CgkJCQkJCQkJCSRjb250ZXh0W10gPSAiYEF1
dGhvcklEYCA9ICckYXV0aG9yJyI7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJ
fQoJCQkJCQkJYnJlYWs7CgkJCQkJCQljYXNlICdsb2dpbic6CgkJCQkJCQkJaWYgKCRhdXRo
b3IgPSBzYWZlX2ZpZWxkKCduYW1lJywgJ3R4cF91c2VycycsICJuYW1lIGxpa2UgJyR1cmlf
YycgbGltaXQgMSIpKSB7CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydhdXRob3In
XSA9ICRhdXRob3I7CgkJCQkJCQkJCSRjb250ZXh0W10gPSAiYEF1dGhvcklEYCA9ICckYXV0
aG9yJyI7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJfQoJCQkJCQkJYnJlYWs7
CgkJCQkJCQljYXNlICdjdXN0b20nOgoJCQkJCQkJCSRjdXN0b21fb3B0aW9ucyA9IGFycmF5
X3ZhbHVlcyhhcnJheV9tYXAoYXJyYXkoJHRoaXMsICJlbmNvZGVfdXJsIiksIHNhZmVfY29s
dW1uKCJjdXN0b21fJGN1c3RvbSIsICd0ZXh0cGF0dGVybicsICJjdXN0b21fJGN1c3RvbSAh
PSAnJyIpKSk7CgkJCQkJCQkJaWYgKCR0aGlzLT5wcmVmKCdmb3JjZV9sb3dlcmNhc2VfdXJs
cycpKQoJCQkJCQkJCQkkY3VzdG9tX29wdGlvbnMgPSBhcnJheV9tYXAoInN0cnRvbG93ZXIi
LCAkY3VzdG9tX29wdGlvbnMpOwoJCQkJCQkJCWlmIChpbl9hcnJheSgkdXJpX2MsICRjdXN0
b21fb3B0aW9ucykpIHsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJ
CQlicmVhazsKCQkJCQkJCWNhc2UgJ2RhdGUnOgoJCQkJCQkJCWlmIChwcmVnX21hdGNoKCcv
XlxkezR9XC9cZHsyfVwvXGR7Mn0kLycsICR1cmlfYykpIHsKCQkJCQkJCQkJJHByZXRleHRf
cmVwbGFjZW1lbnRbJ2RhdGUnXSA9IHN0cl9yZXBsYWNlKCcvJywgJy0nLCAkdXJpX2MpOwoJ
CQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQkJ
Y2FzZSAneWVhcic6CgkJCQkJCQkJaWYgKHByZWdfbWF0Y2goJy9eXGR7NH0kLycsICR1cmlf
YykpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3llYXInXSA9ICR1cmlfYzsK
CQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJ
CWNhc2UgJ21vbnRoJzoKCQkJCQkJCWNhc2UgJ2RheSc6CgkJCQkJCQkJaWYgKHByZWdfbWF0
Y2goJy9eXGR7Mn0kLycsICR1cmlfYykpIHsKCQkJCQkJCQkJJHByZXRleHRfcmVwbGFjZW1l
bnRbJHR5cGVdID0gJHVyaV9jOwoJCQkJCQkJCQkkbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCX0K
CQkJCQkJCWJyZWFrOwoJCQkJCQkJY2FzZSAncGFnZSc6CgkJCQkJCQkJaWYgKGlzX251bWVy
aWMoJHVyaV9jKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncGcnXSA9ICR1
cmlfYzsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsK
CQkJCQkJCWNhc2UgJ2ZlZWQnOgoJCQkJCQkJCWlmIChpbl9hcnJheSgkdXJpX2MsIGFycmF5
KCdyc3MnLCAnYXRvbScpKSkgewoJCQkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFskdXJp
X2NdID0gMTsKCQkJCQkJCQkJJG1hdGNoID0gdHJ1ZTsKCQkJCQkJCQl9CgkJCQkJCQlicmVh
azsKCQkJCQkJCWNhc2UgJ3NlYXJjaCc6CgkJCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50
WydxJ10gPSAkdXJpX2M7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQlicmVhazsK
CQkJCQkJCWNhc2UgJ3RleHQnOgoJCQkJCQkJCWlmICgkdGhpcy0+ZW5jb2RlX3VybCgkdGV4
dCkgPT0gJHVyaV9jKSB7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJCSRwcmV0
ZXh0X3JlcGxhY2VtZW50WyJwZXJtbGlua190ZXh0X3skbmFtZX0iXSA9ICR1cmlfYzsKCQkJ
CQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJCWNhc2UgJ3JlZ2V4JzoKCQkJCQkJCQkvLyBD
aGVjayB0byBzZWUgaWYgcmVnZXggaXMgdmFsaWQgd2l0aG91dCBvdXRwdXR0aW5nIGVycm9y
IG1lc3NhZ2VzLgoJCQkJCQkJCW9iX3N0YXJ0KCk7CgkJCQkJCQkJcHJlZ19tYXRjaCgkcmVn
ZXgsICR1cmlfYywgJHJlZ2V4X21hdGNoZXMpOwoJCQkJCQkJCSRpc192YWxpZF9yZWdleCA9
ICEob2JfZ2V0X2NsZWFuKCkpOwoJCQkJCQkJCWlmICgkaXNfdmFsaWRfcmVnZXggJiYgQCRy
ZWdleF9tYXRjaGVzWzBdKSB7CgkJCQkJCQkJCSRtYXRjaCA9IHRydWU7CgkJCQkJCQkJCSRw
cmV0ZXh0X3JlcGxhY2VtZW50WyJwZXJtbGlua19yZWdleF97JG5hbWV9Il0gPSAkcmVnZXhf
bWF0Y2hlc1swXTsKCQkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJfSAvLyBzd2l0Y2gg
dHlwZSBlbmQKCgkJCQkJCS8vIFVwZGF0ZSB0aGUgYXJ0aWNsZSBjb250ZXh0IHN0cmluZwoJ
CQkJCQkkY29udGV4dF9zdHIgPSAoY291bnQoJGNvbnRleHQpID4gMCA/ICdhbmQgJy5qb2lu
KCcgYW5kICcsICRjb250ZXh0KSA6ICcnKTsKCgkJCQkJCSR0aGlzLT5kZWJ1ZygoJG1hdGNo
ID09IHRydWUpID8gJ1lFUycgOiAnTk8nKTsKCgkJCQkJCWlmICghJG1hdGNoICYmICEkY2xl
YXZlcl9wYXJ0aWFsX21hdGNoKSB7CgkJCQkJCQkvLyBUaGVyZSBoYXNuJ3QgYmVlbiBhIG1h
dGNoIG9yIGEgY29tcGxldGUgY2xlYXZlciBwYXJ0aWFsIG1hdGNoLiBMZXRzIHRyeSB0byBi
ZSBjbGVhdmVyIGFuZAoJCQkJCQkJLy8gY2hlY2sgdG8gc2VlIGlmIHRoaXMgY29tcG9uZW50
IGlzIGVpdGhlciBhIHRpdGxlLCBwYWdlIG9yIGEgZmVlZC4gVGhpcyBtYWtlcyBpdCBtb3Jl
IHByb2JhYmxlCgkJCQkJCQkvLyBhIHN1Y2Nlc3NmdWwgbWF0Y2ggZm9yIGEgZ2l2ZW4gcGVy
bWxpbmsgcnVsZSBvY2N1cnMuCgkJCQkJCQkkdGhpcy0+ZGVidWcoJ0NoZWNraW5nIGlmICIn
LiR1cmlfYy4nIiBpcyBvZiB0eXBlICJ0aXRsZV9wYWdlX2ZlZWQiJyk7CgoJCQkJCQkJaWYg
KCR0eXBlICE9ICd0aXRsZScgJiYgJHVybF90aXRsZSA9IHNhZmVfZmllbGQoJ3VybF90aXRs
ZScsICd0ZXh0cGF0dGVybicsICJgdXJsX3RpdGxlYCBsaWtlICckdXJpX2MnICRjb250ZXh0
X3N0ciBhbmQgYFN0YXR1c2AgPj0gNCBsaW1pdCAxIikpIHsKCQkJCQkJCQkkcHJldGV4dF9y
ZXBsYWNlbWVudFsndXJsX3RpdGxlJ10gPSAkdXJsX3RpdGxlOwoJCQkJCQkJCSRwcmV0ZXh0
WydudW1QYWdlcyddID0gMTsKCQkJCQkJCQkkcHJldGV4dFsnaXNfYXJ0aWNsZV9saXN0J10g
PSBmYWxzZTsKCQkJCQkJCQkkY2xlYXZlcl9wYXJ0aWFsX21hdGNoID0gdHJ1ZTsKCQkJCQkJ
CX0gZWxzZSBpZiAoJHRoaXMtPnByZWYoJ2NsZWFuX3BhZ2VfYXJjaGl2ZV9saW5rcycpICYm
ICR0eXBlICE9ICdwYWdlJyAmJiBpc19udW1lcmljKCR1cmlfYykpIHsKCQkJCQkJCQkkcHJl
dGV4dF9yZXBsYWNlbWVudFsncGcnXSA9ICR1cmlfYzsKCQkJCQkJCQkkY2xlYXZlcl9wYXJ0
aWFsX21hdGNoID0gdHJ1ZTsKCQkJCQkJCX0gZWxzZSBpZiAoJHR5cGUgIT0gJ2ZlZWQnICYm
IGluX2FycmF5KCR1cmlfYywgYXJyYXkoJ3JzcycsICdhdG9tJykpKSB7CgkJCQkJCQkJJHBy
ZXRleHRfcmVwbGFjZW1lbnRbJHVyaV9jXSA9IDE7CgkJCQkJCQkJJGNsZWF2ZXJfcGFydGlh
bF9tYXRjaCA9IHRydWU7CgkJCQkJCQl9CgoJCQkJCQkJJHRoaXMtPmRlYnVnKCgkY2xlYXZl
cl9wYXJ0aWFsX21hdGNoID09IHRydWUpID8gJ1lFUycgOiAnTk8nKTsKCgkJCQkJCQlpZiAo
JGNsZWF2ZXJfcGFydGlhbF9tYXRjaCkgewoJCQkJCQkJCSR0aGlzLT5jbGVhdmVyX3BhcnRp
YWxfbWF0Y2ggPSAkcHJldGV4dF9yZXBsYWNlbWVudDsKCgkJCQkJCQkJLy8gVW5zZXQgcHJl
dGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2VzIGNvdWxkIG9mIGJlZW4gbWFkZSBpbiBhIHBy
ZWNlZGluZyBjb21wb25lbnQKCQkJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudCk7
CgoJCQkJCQkJCSRjbGVhdmVyX3BhcnRpYWxfbWF0Y2ggPSB0cnVlOwoJCQkJCQkJCWNvbnRp
bnVlIDI7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9IC8vIGNoZWNrIHR5cGUgZW5kCgoJCQkJ
CS8vIEJyZWFrIGVhcmx5IGlmIHRoZSBjb21wb25lbnQgZG9lc24ndCBtYXRjaCwgYXMgdGhl
cmUgaXMgbm8gcG9pbnQgY29udGludWluZwoJCQkJCWlmICgkbWF0Y2ggPT0gZmFsc2UpIHsK
CQkJCQkJLy8gVW5zZXQgcHJldGV4dF9yZXBsYWNlbWVudCBhcyBjaGFuZ2VzIGNvdWxkIG9m
IGJlZW4gbWFkZSBpbiBhIHByZWNlZGluZyBjb21wb25lbnQKCQkJCQkJdW5zZXQoJHByZXRl
eHRfcmVwbGFjZW1lbnQpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9IC8vIGZvcmVhY2gg
cGVybWxpbmsgY29tcG9uZW50IGVuZAoKCQkJCWlmICghaXNzZXQoJHByZXRleHRfcmVwbGFj
ZW1lbnRbJ2lkJ10pKSB7CgkJCQkJaWYoaXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Vy
bF90aXRsZSddKSkgewoJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudFsneWVh
ciddKSkgewoJCQkJCQkJJGRhdGVfdmFsID0gJHByZXRleHRfcmVwbGFjZW1lbnRbJ3llYXIn
XTsKCQkJCQkJCWlmKGlzc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50Wydtb250aCddKSkgewoJ
CQkJCQkJCSRkYXRlX3ZhbCAuPSAnLScgLiAkcHJldGV4dF9yZXBsYWNlbWVudFsnbW9udGgn
XTsKCQkJCQkJCQlpZihpc3NldCgkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5J10pKSB7CgkJ
CQkJCQkJCSRkYXRlX3ZhbCAuPSAnLScgLiAkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF5J107
CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCWlmICgkcnMgPSBzYWZlX3Jvdygn
SUQsIFBvc3RlZCcsICd0ZXh0cGF0dGVybicsICJgdXJsX3RpdGxlYCBsaWtlICckcHJldGV4
dF9yZXBsYWNlbWVudFt1cmxfdGl0bGVdJyAkY29udGV4dF9zdHIgYW5kIGBQb3N0ZWRgIGxp
a2UgJyRkYXRlX3ZhbCUnIGFuZCBgU3RhdHVzYCA+PSA0IG9yZGVyIGJ5IGBQb3N0ZWRgIGRl
c2MgbGltaXQgMSIpKSB7CgkJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSA9ICRy
c1snSUQnXTsKCQkJCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50WydQb3N0ZWQnXSA9ICRyc1sn
UG9zdGVkJ107CgkJCQkJCQkkcHJldGV4dFsnbnVtUGFnZXMnXSA9IDE7CgkJCQkJCQkkcHJl
dGV4dFsnaXNfYXJ0aWNsZV9saXN0J10gPSBmYWxzZTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0K
CgkJCQlpZiAoJG1hdGNoIHx8ICRwYXJ0aWFsX21hdGNoIHx8ICRjbGVhdmVyX3BhcnRpYWxf
bWF0Y2gpIHsKCQkJCQkvLyBFeHRyYWN0IHRoZSBzZXR0aW5ncyBmb3IgdGhpcyBwZXJtbGlu
awoJCQkJCUBleHRyYWN0KCRwZXJtbGlua3NbJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Blcm1s
aW5rX2lkJ11dWydzZXR0aW5ncyddKTsKCgkJCQkJLy8gQ2hlY2sgdGhlIHBlcm1saW5rIHNl
Y3Rpb24gYW5kIGNhdGVnb3J5IGNvbmRpdGlvbnMKCQkJCQlpZiAoKCFlbXB0eSgkY29uX3Nl
Y3Rpb24pICYmICRjb25fc2VjdGlvbiAhPSBAJHByZXRleHRfcmVwbGFjZW1lbnRbJ3MnXSkg
fHwKCQkJCQkoIWVtcHR5KCRjb25fY2F0ZWdvcnkpICYmICRjb25fY2F0ZWdvcnkgIT0gQCRw
cmV0ZXh0X3JlcGxhY2VtZW50WydjJ10pKSB7CgkJCQkJCSR0aGlzLT5kZWJ1ZygnUGVybWxp
bmsgY29uZGl0aW9ucyBmYWlsZWQnKTsKCQkJCQkJaWYgKEAkY29uX3NlY3Rpb24pICAkdGhp
cy0+ZGVidWcoJ2Nvbl9zZWN0aW9uID0gJy4gJGNvbl9zZWN0aW9uKTsKCQkJCQkJaWYgKEAk
Y29uX2NhdGVnb3J5KSAkdGhpcy0+ZGVidWcoJ2Nvbl9jYXRlZ29yeSA9ICcuICRjb25fY2F0
ZWdvcnkpOwoKCQkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpOwoJCQkJCX0KCQkJ
CQllbHNlIGlmICgkbWF0Y2ggJiYgaXNzZXQoJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJ
CQkkdGhpcy0+ZGVidWcoJ1dlIGhhdmUgYSBtYXRjaCEnKTsKCgkJCQkJZWxzZSBpZiAoJHBh
cnRpYWxfbWF0Y2ggJiYgY291bnQoJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcykpCgkJCQkJCSR0
aGlzLT5kZWJ1ZygnV2UgaGF2ZSBhIFwncGFydGlhbCBtYXRjaFwnJyk7CgoJCQkJCWVsc2Ug
aWYgKCRjbGVhdmVyX3BhcnRpYWxfbWF0Y2ggJiYgaXNzZXQoJGNsZWF2ZXJfcGFydGlhbF9t
YXRjaCkpCgkJCQkJCSR0aGlzLT5kZWJ1ZygnV2UgaGF2ZSBhIFwnY2xlYXZlciBwYXJ0aWFs
IG1hdGNoXCcnKTsKCgkJCQkJZWxzZSB7CgkJCQkJCSR0aGlzLT5kZWJ1ZygnRXJyb3I6IENh
blwndCBkZXRlcm1pbmUgdGhlIGNvcnJlY3QgdHlwZSBtYXRjaCcpOwoJCQkJCQkvLyBUaGlz
IHBlcm1saW5rIGhhcyBmYWlsZWQsIGNvbnRpbnVlIGV4ZWN1dGlvbiBvZiB0aGUgZm9yZWFj
aCBwZXJtbGlua3MgbG9vcAoJCQkJCQl1bnNldCgkcHJldGV4dF9yZXBsYWNlbWVudCk7CgkJ
CQkJfQoJCQkJfQoKCQkJCS8vIFdlIGhhdmUgYSBtYXRjaAoJCQkJaWYgKEAkcHJldGV4dF9y
ZXBsYWNlbWVudCkKCQkJCQlicmVhazsKCgkJCX0gLy8gZm9yZWFjaCBwZXJtbGlua3MgZW5k
CgoJCQkvLyBJZiB0aGVyZSBpcyBubyBtYXRjaCByZXN0b3JlIHRoZSBtb3N0IGxpa2VseSBw
YXJ0aWFsIG1hdGNoLiBTb3J0ZWQgYnkgbnVtYmVyIG9mIGNvbXBvbmVudHMgYW5kIHRoZW4g
cHJlY2VkZW5jZQoJCQlpZiAoIUAkcHJldGV4dF9yZXBsYWNlbWVudCAmJiBjb3VudCgkdGhp
cy0+cGFydGlhbF9tYXRjaGVzKSkKCQkJCSRwcmV0ZXh0X3JlcGxhY2VtZW50ID0gYXJyYXlf
c2hpZnQoYXJyYXlfc2xpY2UoJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcywgLTEpKTsKCQkJdW5z
ZXQoJHRoaXMtPnBhcnRpYWxfbWF0Y2hlcyk7CgoJCQkvLyBSZXN0b3JlIHRoZSBjbGVhdmVy
X3BhcnRpYWxfbWF0Y2ggaWYgdGhlcmUgaXMgbm8gb3RoZXIgbWF0Y2hlcwoJCQlpZiAoIUAk
cHJldGV4dF9yZXBsYWNlbWVudCAmJiAkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21hdGNoKQoJ
CQkJJHByZXRleHRfcmVwbGFjZW1lbnQgPSAkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21hdGNo
OwoJCQl1bnNldCgkdGhpcy0+Y2xlYXZlcl9wYXJ0aWFsX21hdGNoKTsKCgkJCS8vIEV4dHJh
Y3QgdGhlIHNldHRpbmdzIGZvciB0aGlzIHBlcm1saW5rCgkJCUBleHRyYWN0KCRwZXJtbGlu
a3NbJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Blcm1saW5rX2lkJ11dWydzZXR0aW5ncyddKTsK
CgkJCS8vIElmIHByZXRleHRfcmVwbGFjZW1lbnQgaXMgc3RpbGwgc2V0IGhlcmUgdGhlbiB3
ZSBoYXZlIGEgbWF0Y2gKCQkJaWYgKEAkcHJldGV4dF9yZXBsYWNlbWVudCkgewoJCQkJJHRo
aXMtPmRlYnVnKCdQcmV0ZXh0IFJlcGxhY2VtZW50ICcucHJpbnRfcigkcHJldGV4dF9yZXBs
YWNlbWVudCwgMSkpOwoKCQkJCWlmICghZW1wdHkoJGRlc19zZWN0aW9uKSkKCQkJCQkkcHJl
dGV4dF9yZXBsYWNlbWVudFsncyddID0gJGRlc19zZWN0aW9uOwoJCQkJaWYgKCFlbXB0eSgk
ZGVzX2NhdGVnb3J5KSkKCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnYyddID0gJGRlc19j
YXRlZ29yeTsKCQkJCWlmICghZW1wdHkoJGRlc19mZWVkKSkKCQkJCQkkcHJldGV4dF9yZXBs
YWNlbWVudFskZGVzX2ZlZWRdID0gMTsKCgkJCQlpZiAoQCRwcmV0ZXh0X3JlcGxhY2VtZW50
WydpZCddICYmIEAkcHJldGV4dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10pIHsKCQkJCSAJaWYg
KCRucCA9IGdldE5leHRQcmV2KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydpZCddLCAkcHJldGV4
dF9yZXBsYWNlbWVudFsnUG9zdGVkJ10sIEAkcHJldGV4dF9yZXBsYWNlbWVudFsncyddKSkK
CQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnQgPSBhcnJheV9tZXJnZSgkcHJldGV4dF9yZXBs
YWNlbWVudCwgJG5wKTsKCQkJCX0KCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydQ
b3N0ZWQnXSk7CgoJCQkJLy8gSWYgdGhlcmUgaXMgYSBtYXRjaCB0aGVuIHdlIG1vc3Qgc2V0
IHRoZSBodHRwIHN0YXR1cyBjb3JyZWN0bHkgYXMgdHhwJ3MgcHJldGV4dCBtaWdodCBzZXQg
aXQgdG8gNDA0CgkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnc3RhdHVzJ10gPSAnMjAwJzsK
CgkJCQkvLyBTdG9yZSB0aGUgb3JnaW5pYWwgSFRUUCBzdGF0dXMgY29kZQoJCQkJLy8gV2Ug
bWlnaHQgbmVlZCB0byBsb2cgdGhlIHBhZ2UgaGl0IGlmIGl0IGVxdWFscyA0MDQKCQkJCSRv
cmdpbmlhbF9zdGF0dXMgPSAkcHJldGV4dFsnc3RhdHVzJ107CgoJCQkJLy8gVHhwIG9ubHkg
bG9va3MgYXQgdGhlIG1vbnRoLCBidXQgZHVlIHRvIGhvdyB3ZSBwaGFzZSB0aGUgbW9udGgg
d2UgY2FuIG1hbmlwdWxhdGUgdGhlIHNxbCB0byBvdXIgbmVlZHMKCQkJCWlmIChhcnJheV9r
ZXlfZXhpc3RzKCdkYXRlJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKSB7CgkJCQkJJHByZXRl
eHRfcmVwbGFjZW1lbnRbJ21vbnRoJ10gPSAkcHJldGV4dF9yZXBsYWNlbWVudFsnZGF0ZSdd
OwoJCQkJCXVuc2V0KCRwcmV0ZXh0X3JlcGxhY2VtZW50WydkYXRlJ10pOwoJCQkJfSBlbHNl
IGlmIChhcnJheV9rZXlfZXhpc3RzKCd5ZWFyJywgJHByZXRleHRfcmVwbGFjZW1lbnQpIHx8
CgkJCQlhcnJheV9rZXlfZXhpc3RzKCdtb250aCcsICRwcmV0ZXh0X3JlcGxhY2VtZW50KSB8
fAoJCQkJYXJyYXlfa2V5X2V4aXN0cygnZGF5JywgJHByZXRleHRfcmVwbGFjZW1lbnQpKSB7
CgkJCQkJJG1vbnRoID0gJyc7CgkJCQkJJG1vbnRoIC49IChhcnJheV9rZXlfZXhpc3RzKCd5
ZWFyJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/ICRwcmV0ZXh0X3JlcGxhY2Vt
ZW50Wyd5ZWFyJ10uJy0nIDogJ19fX18tJzsKCQkJCQkkbW9udGggLj0gKGFycmF5X2tleV9l
eGlzdHMoJ21vbnRoJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/ICRwcmV0ZXh0
X3JlcGxhY2VtZW50Wydtb250aCddLictJyA6ICdfXy0nOwoJCQkJCSRtb250aCAuPSAoYXJy
YXlfa2V5X2V4aXN0cygnZGF5JywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJCQk/ICRw
cmV0ZXh0X3JlcGxhY2VtZW50WydkYXknXS4nICcgOiAnX18gJzsKCgkJCQkJJHByZXRleHRf
cmVwbGFjZW1lbnRbJ21vbnRoJ10gPSAkbW9udGg7CgkJCQkJdW5zZXQoJHByZXRleHRfcmVw
bGFjZW1lbnRbJ3llYXInXSk7CgkJCQkJdW5zZXQoJHByZXRleHRfcmVwbGFjZW1lbnRbJ2Rh
eSddKTsKCQkJCX0KCgkJCQkvLyBTZWN0aW9uIG5lZWRzIHRvIGJlIGRlZmluZWQgc28gd2Ug
Y2FuIGFsd2F5cyBnZXQgYSBwYWdlIHRlbXBsYXRlLgoJCQkJaWYgKCFhcnJheV9rZXlfZXhp
c3RzKCdzJywgJHByZXRleHRfcmVwbGFjZW1lbnQpKQoJCQkJewoJCQkJCWlmICghQCRwcmV0
ZXh0X3JlcGxhY2VtZW50WydpZCddKQoJCQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsncydd
ID0gJ2RlZmF1bHQnOwoJCQkJCWVsc2UKCQkJCQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3Mn
XSA9IHNhZmVfZmllbGQoJ1NlY3Rpb24nLCAndGV4dHBhdHRlcm4nLCAnSUQgPSAnLiRwcmV0
ZXh0X3JlcGxhY2VtZW50WydpZCddKTsKCQkJCX0KCgkJCQkvLyBTZXQgdGhlIGNzcyBhbmQg
cGFnZSB0ZW1wbGF0ZSwgb3RoZXJ3aXNlIHdlIGdldCBhbiB1bmtub3duIHNlY3Rpb24KCQkJ
CSRzZWN0aW9uX3NldHRpbmdzID0gc2FmZV9yb3coJ2NzcywgcGFnZScsICd0eHBfc2VjdGlv
bicsICJuYW1lID0gJ3skcHJldGV4dF9yZXBsYWNlbWVudFsncyddfScgbGltaXQgMSIpOwoJ
CQkJJHByZXRleHRfcmVwbGFjZW1lbnRbJ3BhZ2UnXSA9IChAJGRlc19wYWdlKSA/ICRkZXNf
cGFnZSA6ICRzZWN0aW9uX3NldHRpbmdzWydwYWdlJ107CgkJCQkkcHJldGV4dF9yZXBsYWNl
bWVudFsnY3NzJ10gID0gJHNlY3Rpb25fc2V0dGluZ3NbJ2NzcyddOwoKCQkJCSR0aGlzLT5t
YXRjaGVkX3Blcm1saW5rID0gJHByZXRleHRfcmVwbGFjZW1lbnQ7CgoJCQkJZ2xvYmFsICRw
ZXJtbGlua19tb2RlOwoKCQkJCWlmIChpbl9hcnJheSgkcHJlZnNbJ3Blcm1saW5rX21vZGUn
XSwgYXJyYXkoJ2lkX3RpdGxlJywgJ3NlY3Rpb25faWRfdGl0bGUnKSkgJiYgQCRwcmV0ZXh0
X3JlcGxhY2VtZW50WydwZyddICYmICFAJHByZXRleHRfcmVwbGFjZW1lbnRbJ2lkJ10pIHsK
CQkJCQkkcHJldGV4dF9yZXBsYWNlbWVudFsnaWQnXSA9ICcnOwoJCQkJCSRwcmV0ZXh0X3Jl
cGxhY2VtZW50Wydpc19hcnRpY2xlX2xpc3QnXSA9IHRydWU7CgkJCQl9CgoJCQkJLy8gTWVy
Z2UgcHJldGV4dF9yZXBsYWNlbWVudCB3aXRoIHByZXRleHQKCQkJCSRwcmV0ZXh0ID0gYXJy
YXlfbWVyZ2UoJHByZXRleHQsICRwcmV0ZXh0X3JlcGxhY2VtZW50KTsKCgkJCQlpZiAoaXNf
bnVtZXJpYyhAJHByZXRleHRbJ2lkJ10pKSB7CgkJCQkJJGEgPSBzYWZlX3JvdygnKiwgdW5p
eF90aW1lc3RhbXAoUG9zdGVkKSBhcyB1UG9zdGVkLCB1bml4X3RpbWVzdGFtcChFeHBpcmVz
KSBhcyB1RXhwaXJlcywgdW5peF90aW1lc3RhbXAoTGFzdE1vZCkgYXMgdUxhc3RNb2QnLCAn
dGV4dHBhdHRlcm4nLCAnSUQ9Jy5pbnR2YWwoJHByZXRleHRbJ2lkJ10pLicgYW5kIFN0YXR1
cyA+PSA0Jyk7CgkJCQkJcG9wdWxhdGVBcnRpY2xlRGF0YSgkYSk7CgkJCQl9CgoJCQkJLy8g
RXhwb3J0IHJlcXVpcmVkIHZhbHVlcyB0byB0aGUgZ2xvYmFsIG5hbWVzcGFjZQoJCQkJZm9y
ZWFjaCAoYXJyYXkoJ2lkJywgJ3MnLCAnYycsICdwZycsICdpc19hcnRpY2xlX2xpc3QnLCAn
cHJldl9pZCcsICdwcmV2X3RpdGxlJywgJ25leHRfaWQnLCAnbmV4dF90aXRsZScsICdjc3Mn
KSBhcyAka2V5KSB7CgkJCQkJaWYgKGFycmF5X2tleV9leGlzdHMoJGtleSwgJHByZXRleHQp
KQoJCQkJCQkkR0xPQkFMU1ska2V5XSA9ICRwcmV0ZXh0WyRrZXldOwoJCQkJfQoKCQkJCWlm
IChjb3VudCgkdGhpcy0+bWF0Y2hlZF9wZXJtbGluaykgfHwgQCRtdF9yZWRpcmVjdCkgewoJ
CQkJCSRwbF9pbmRleCA9ICRwcmV0ZXh0WydwZXJtbGlua19pZCddOwoJCQkJCWlmICghQCRt
dF9yZWRpcmVjdCB8fCAhJHRoaXMtPnByZWYoJ3JlZGlyZWN0X210X3N0eWxlX2xpbmtzJykp
IHsKCQkJCQkJJHBsID0gJHRoaXMtPmdldF9wZXJtbGluaygkcHJldGV4dFsncGVybWxpbmtf
aWQnXSk7CgkJCQkJCSRwbF9pbmRleCA9IEAkcGxbJ3NldHRpbmdzJ11bJ2Rlc19wZXJtbGlu
ayddOwoJCQkJCX0KCgkJCQkJaWYgKEAkcHJldGV4dFsnaWQnXSAmJiAkcGxfaW5kZXgpIHsK
CQkJCQkJaWYgKGNvdW50KCR0aGlzLT5nZXRfcGVybWxpbmsoJHBsX2luZGV4KSkgPiAwKSB7
CgkJCQkJCQlvYl9jbGVhbigpOwoJCQkJCQkJZ2xvYmFsICRzaXRldXJsOwoJCQkJCQkJJHJz
ID0gc2FmZV9yb3coJyosIElEIGFzIHRoaXNpZCwgdW5peF90aW1lc3RhbXAoUG9zdGVkKSBh
cyBwb3N0ZWQnLCAndGV4dHBhdHRlcm4nLCAiSUQgPSAneyRwcmV0ZXh0WydpZCddfSciKTsK
CQkJCQkJCSRob3N0ID0gcnRyaW0oc3RyX3JlcGxhY2UocnRyaW0oZG9TdHJpcCgkcHJldGV4
dFsnc3VicGF0aCddKSwgJy8nKSwgJycsIGh1KSwgJy8nKTsKCQkJCQkJCSR0aGlzLT5yZWRp
cmVjdCgkaG9zdC4kdGhpcy0+X3Blcm1saW5rdXJsKCRycywgUEVSTUxJTktVUkwsICRwbF9p
bmRleCksICR0aGlzLT5wcmVmKCdwZXJtbGlua19yZWRpcmVjdF9odHRwX3N0YXR1cycpKTsK
CQkJCQkJfQoJCQkJCX0gZWxzZSBpZiAoJHVybCA9IEAkcGxbJ3NldHRpbmdzJ11bJ2Rlc19s
b2NhdGlvbiddKSB7CgkJCQkJCW9iX2NsZWFuKCk7CgkJCQkJCSR0aGlzLT5yZWRpcmVjdCgk
dXJsLCAkdGhpcy0+cHJlZigndXJsX3JlZGlyZWN0X2h0dHBfc3RhdHVzJykpOwoJCQkJCX0K
CQkJCX0KCgkJCQlpZiAoQCRwcmV0ZXh0Wydyc3MnXSkgewoJCQkJCWlmIChAJHByZXRleHRb
J3MnXSkKCQkJCQkJJF9QT1NUWydzZWN0aW9uJ10gPSAkcHJldGV4dFsncyddOwoJCQkJCWlm
IChAJHByZXRleHRbJ2MnXSkKCQkJCQkJJF9QT1NUWydjYXRlZ29yeSddID0gJHByZXRleHRb
J2MnXTsKCQkJCQlvYl9jbGVhbigpOwoJCQkJCWluY2x1ZGUgdHhwYXRoLicvcHVibGlzaC9y
c3MucGhwJzsKCQkJCQlleGl0KHJzcygpKTsKCQkJCX0KCgkJCQlpZiAoQCRwcmV0ZXh0Wydh
dG9tJ10pIHsKCQkJCQlpZiAoQCRwcmV0ZXh0WydzJ10pCgkJCQkJCSRfUE9TVFsnc2VjdGlv
biddID0gJHByZXRleHRbJ3MnXTsKCQkJCQlpZiAoQCRwcmV0ZXh0WydjJ10pCgkJCQkJCSRf
UE9TVFsnY2F0ZWdvcnknXSA9ICRwcmV0ZXh0WydjJ107CgkJCQkJb2JfY2xlYW4oKTsKCQkJ
CQlpbmNsdWRlIHR4cGF0aC4nL3B1Ymxpc2gvYXRvbS5waHAnOwoJCQkJCWV4aXQoYXRvbSgp
KTsKCQkJCX0KCgkJCQkkdGhpcy0+ZGVidWcoJ1ByZXRleHQgJy5wcmludF9yKCRwcmV0ZXh0
LCAxKSk7CgkJCX0gZWxzZSB7CgkJCQkkdGhpcy0+ZGVidWcoJ05PIENIQU5HRVMgTUFERScp
OwoJCQl9CgoJCQkvLyBMb2cgdGhpcyBwYWdlIGhpdAoJCQlpZiAoQCRvcmdpbmlhbF9zdGF0
dXMgPT0gNDA0KQoJCQkJbG9nX2hpdCgkcHJldGV4dFsnc3RhdHVzJ10pOwoKCQkJLy8gU3Rh
cnQgb3V0cHV0IGJ1ZmZlcmluZyBhbmQgcHNldWRvIGNhbGxiYWNrIHRvIHRleHRwYXR0ZXJu
X2VuZAoJCQlvYl9zdGFydChhcnJheSgmJHRoaXMsICdfdGV4dHBhdHRlcm5fZW5kX2NhbGxi
YWNrJykpOwoKCQkJLy8gVHhQIDQuMC41IChyMjQzNikgaW50cm9kdWNlZCB0aGUgdGV4dHBh
dHRlcm5fZW5kIGNhbGxiYWNrIG1ha2luZyB0aGUgZm9sbG93aW5nIHJlZHVuZGFudAoJCQkk
dmVyc2lvbiA9IGFycmF5X3N1bShhcnJheV9tYXAoCgkJCQljcmVhdGVfZnVuY3Rpb24oJyRs
aW5lJywgJ2lmIChwcmVnX21hdGNoKFwnL15cJCcuJ0xhc3RDaGFuZ2VkUmV2aXNpb246IChc
dyspIFwkL1wnLCAkbGluZSwgJG1hdGNoKSkgcmV0dXJuICRtYXRjaFsxXTsnKSwKCQkJCUBm
aWxlKHR4cGF0aCAuICcvcHVibGlzaC5waHAnKQoJCQkpKTsKCQkJaWYgKCR2ZXJzaW9uID49
ICcyNDM2JykgcmV0dXJuOwoKCQkJLy8gUmVtb3ZlIHRoZSBwbHVnaW4gY2FsbGJhY2tzIHdo
aWNoIGhhdmUgYWxyZWFkeSBiZWVuIGNhbGxlZAoJCQlmdW5jdGlvbiBmaWx0ZXJfY2FsbGJh
Y2tzKCRjKSB7CgkJCQlpZiAoJGNbJ2V2ZW50J10hPSd0ZXh0cGF0dGVybicpIHJldHVybiB0
cnVlOwoJCQkJaWYgKEAkY1snZnVuY3Rpb24nXVswXS0+cGx1Z2luX25hbWUgPT0gJ2dicF9w
ZXJtYW5lbnRfbGlua3MnICYmCgkJCQkJCUAkY1snZnVuY3Rpb24nXVsxXSA9PSAnX3RleHRw
YXR0ZXJuJykKCQkJCXsKCQkJCQkkR0xPQkFMU1snZ2JwX2ZvdW5kX3NlbGYnXSA9IHRydWU7
CgkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJfQoJCQkJcmV0dXJuIEAkR0xPQkFMU1snZ2JwX2Zv
dW5kX3NlbGYnXTsKCQkJfQoJCQkkcGx1Z2luX2NhbGxiYWNrID0gYXJyYXlfZmlsdGVyKCRw
bHVnaW5fY2FsbGJhY2ssICdmaWx0ZXJfY2FsbGJhY2tzJyk7CgkJCXVuc2V0KCRHTE9CQUxT
WydnYnBfZm91bmRfc2VsZiddKTsKCgkJCS8vIFJlLWNhbGwgdGV4dHBhdHRlcm4KCQkJdGV4
dHBhdHRlcm4oKTsKCgkJCS8vIENhbGwgY3VzdG9tIHRleHRwYXR0ZXJuX2VuZCBjYWxsYmFj
awoJCQkkdGhpcy0+X3RleHRwYXR0ZXJuX2VuZCgpOwoKCQkJLy8gdGV4dHBhdHRlcm4oKSBo
YXMgcnVuLCBraWxsIHRoZSBjb25uZWN0aW9uCgkJCWRpZSgpOwoJCX0KCgl9IC8vIGZ1bmN0
aW9uIF90ZXh0cGF0dGVybiBlbmQKCglmdW5jdGlvbiBfdGV4dHBhdHRlcm5fZW5kICgpIHsK
CQkvLyBSZWRpcmVjdCB0byBhIDQwNCBpZiB0aGUgcGFnZSBudW1iZXIgaXMgZ3JlYXRlciB0
aGFuIHRoZSBtYXggbnVtYmVyIG9mIHBhZ2VzCgkJLy8gSGFzIHRvIGJlIGFmdGVyIHRleHRw
YXR0ZXJuKCkgYXMgJHRoaXNwYWdlIGlzIHNldCBkdXJpbmcgPHR4cDphcnRpY2xlIC8+CgkJ
Z2xvYmFsICR0aGlzcGFnZSwgJHByZXRleHQ7CgkJaWYgKChAJHByZXRleHRbJ3BnJ10gJiYg
aXNzZXQoJHRoaXNwYWdlKSkgJiYKCQkoJHRoaXNwYWdlWydudW1QYWdlcyddIDwgJHByZXRl
eHRbJ3BnJ10pKSB7CgkJCW9iX2VuZF9jbGVhbigpOwoJCQl0eHBfZGllKGdUeHQoJzQwNF9u
b3RfZm91bmQnKSwgJzQwNCcpOwoJCX0KCgkJLy8gU3RvcCBvdXRwdXQgYnVmZmVyaW5nLCB0
aGlzIHNlbmRzIHRoZSBidWZmZXIgdG8gX3RleHRwYXR0ZXJuX2VuZF9jYWxsYmFjaygpCgkJ
d2hpbGUgKEBvYl9lbmRfZmx1c2goKSk7CgoJfSAvLyBmdW5jdGlvbiBfdGV4dHBhdHRlcm5f
ZW5kIGVuZAoKCWZ1bmN0aW9uIF90ZXh0cGF0dGVybl9lbmRfY2FsbGJhY2sgKCRodG1sLCAk
b3ZlcnJpZGUgPSAnJykgewoJCWdsb2JhbCAkcHJldGV4dCwgJHByb2R1Y3Rpb25fc3RhdHVz
OwoKCQlpZiAoJG92ZXJyaWRlKSAkcHJldGV4dFsncGVybWxpbmtfb3ZlcnJpZGUnXSA9ICRv
dmVycmlkZTsKCQkkaHRtbCA9IHByZWdfcmVwbGFjZV9jYWxsYmFjaygKCQkJJyVocmVmPSIo
Jy5odS4nfFw/KShbXiJdKikiJScsCgkJCWFycmF5KCYkdGhpcywgJ19wYWdlbGlua3VybCcp
LAoJCQkkaHRtbAoJCSk7CgkJdW5zZXQoJHByZXRleHRbJ3Blcm1saW5rX292ZXJyaWRlJ10p
OwoKCQlpZiAoJHRoaXMtPnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rpb25f
c3RhdHVzLCBhcnJheSgnZGVidWcnLCAndGVzdGluZycpKSkgewoJCQkkZGVidWcgPSBqb2lu
KG4sICR0aGlzLT5idWZmZXJfZGVidWcpOwoJCQkkdGhpcy0+YnVmZmVyX2RlYnVnID0gYXJy
YXkoKTsKCQkJaWYgKCRkZWJ1ZykKCQkJCSRodG1sID0gY29tbWVudChuLiRkZWJ1Zy5uKSAu
ICRodG1sOwoJCX0KCgkJcmV0dXJuICRodG1sOwoJfSAvLyBmdW5jdGlvbiBfdGV4dHBhdHRl
cm5fZW5kX2NhbGxiYWNrIGVuZAoKCWZ1bmN0aW9uIGNoZWNrX3Blcm1saW5rX2NvbmRpdGlv
bnMgKCRwbCwgJGFydGljbGVfYXJyYXkpIHsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXlb
J3NlY3Rpb24nXSkpICRhcnRpY2xlX2FycmF5WydzZWN0aW9uJ10gPSBAJGFydGljbGVfYXJy
YXlbJ1NlY3Rpb24nXTsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MSdd
KSkgJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MSddID0gQCRhcnRpY2xlX2FycmF5WydDYXRl
Z29yeTEnXTsKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXlbJ2NhdGVnb3J5MiddKSkgJGFy
dGljbGVfYXJyYXlbJ2NhdGVnb3J5MiddID0gQCRhcnRpY2xlX2FycmF5WydDYXRlZ29yeTIn
XTsKCgkJaWYgKEAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9jYXRlZ29yeSddICYmICgkcGxbJ3Nl
dHRpbmdzJ11bJ2Nvbl9jYXRlZ29yeSddICE9ICRhcnRpY2xlX2FycmF5WydjYXRlZ29yeTEn
XSB8fCAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9jYXRlZ29yeSddICE9ICRhcnRpY2xlX2FycmF5
WydjYXRlZ29yeTInXSkpCgkJCXJldHVybiBmYWxzZTsKCQlpZiAoQCRwbFsnc2V0dGluZ3Mn
XVsnY29uX3NlY3Rpb24nXSAmJiAkcGxbJ3NldHRpbmdzJ11bJ2Nvbl9zZWN0aW9uJ10gIT0g
JGFydGljbGVfYXJyYXlbJ3NlY3Rpb24nXSkKCQkJcmV0dXJuIGZhbHNlOwoKCQlyZXR1cm4g
dHJ1ZTsKCX0KCglmdW5jdGlvbiBfcGVybWxpbmt1cmwgKCRhcnRpY2xlX2FycmF5LCAkdHlw
ZSA9IFBFUk1MSU5LVVJMLCAkcGxfaW5kZXggPSBOVUxMKSB7CgkJZ2xvYmFsICRwcmV0ZXh0
LCAkcHJlZnMsICRwcm9kdWN0aW9uX3N0YXR1czsKCgkJaWYgKCR0eXBlID09IFBBR0VMSU5L
VVJMKQoJCQlyZXR1cm4gJHRoaXMtPnRvZ2dsZV9jdXN0b21fdXJsX2Z1bmMoJ3BhZ2VsaW5r
dXJsJywgJGFydGljbGVfYXJyYXkpOwoKCQlpZiAoZW1wdHkoJGFydGljbGVfYXJyYXkpKSBy
ZXR1cm47CgoJCWlmICgkcGxfaW5kZXgpCgkJCSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmso
JHBsX2luZGV4KTsKCQllbHNlIHsKCQkJLy8gR2V0IHRoZSBtYXRjaGVkIHByZXRleHQgcmVw
bGFjZW1lbnQgYXJyYXkuCgkJCSRtYXRjaGVkID0gKGNvdW50KCR0aGlzLT5tYXRjaGVkX3Bl
cm1saW5rKSkKCQkJPyAkdGhpcy0+bWF0Y2hlZF9wZXJtbGluawoJCQk6IEBhcnJheV9zaGlm
dChhcnJheV9zbGljZSgkdGhpcy0+cGFydGlhbF9tYXRjaGVzLCAtMSkpOwoKCQkJaWYgKCFp
c3NldCgkcGwpICYmICRtYXRjaGVkICYmIGFycmF5X2tleV9leGlzdHMoJ2lkJywgJG1hdGNo
ZWQpKSB7CgkJCQkvLyBUaGUgcGVybWxpbmsgaWQgaXMgc3RvcmVkIGluIHRoZSBwcmV0ZXh0
IHJlcGxhY2VtZW50IGFycmF5LCBzbyB3ZSBjYW4gZmluZCB0aGUgcGVybWxpbmsuCgkJCQkk
cGwgPSAkdGhpcy0+Z2V0X3Blcm1saW5rKCRtYXRjaGVkWydwZXJtbGlua19pZCddKTsKCQkJ
CWZvcmVhY2ggKCRwbFsnY29tcG9uZW50cyddIGFzICRwbF9jKQoJCQkJCWlmIChpbl9hcnJh
eSgkcGxfY1sndHlwZSddLCBhcnJheSgnZmVlZCcsICdwYWdlJykpIHx8ICEkdGhpcy0+Y2hl
Y2tfcGVybWxpbmtfY29uZGl0aW9ucygkcGwsICRhcnRpY2xlX2FycmF5KSkgewoJCQkJCQl1
bnNldCgkcGwpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCX0KCgkJCWlmICghaXNzZXQoJHBs
KSkgewoJCQkJLy8gV2UgaGF2ZSBubyBwZXJtbGluayBpZCBzbyBncmFiIHRoZSBwZXJtbGlu
ayB3aXRoIHRoZSBoaWdoZXN0IHByZWNlZGVuY2UuCgkJCQkkcGVybWxpbmtzID0gJHRoaXMt
PmdldF9hbGxfcGVybWxpbmtzKDEsIGFycmF5KCdmZWVkJywgJ3BhZ2UnKSk7CgkJCQlmb3Jl
YWNoICgkcGVybWxpbmtzIGFzICRrZXkgPT4gJHBsKQoJCQkJCWlmICghJHRoaXMtPmNoZWNr
X3Blcm1saW5rX2NvbmRpdGlvbnMoJHBsLCAkYXJ0aWNsZV9hcnJheSkpCgkJCQkJCXVuc2V0
KCRwZXJtbGlua3NbJGtleV0pOwoJCQkJJHBsID0gYXJyYXlfc2hpZnQoJHBlcm1saW5rcyk7
CgkJCX0KCQl9CgoJCSR1cmkgPSAnJzsKCgkJaWYgKGlzX2FycmF5KCRwbCkgJiYgYXJyYXlf
a2V5X2V4aXN0cygnY29tcG9uZW50cycsICRwbCkpIHsKCQkJZXh0cmFjdCgkYXJ0aWNsZV9h
cnJheSk7CgoJCQlpZiAoIWlzc2V0KCR0aXRsZSkpICR0aXRsZSA9ICRUaXRsZTsKCQkJaWYg
KGVtcHR5KCR1cmxfdGl0bGUpKSAkdXJsX3RpdGxlID0gc3RyaXBTcGFjZSgkdGl0bGUpOwoJ
CQlpZiAoZW1wdHkoJHNlY3Rpb24pKSAkc2VjdGlvbiA9ICRTZWN0aW9uOwoJCQlpZiAoZW1w
dHkoJHBvc3RlZCkpICRwb3N0ZWQgPSAkUG9zdGVkOwoJCQlpZiAoZW1wdHkoJGF1dGhvcmlk
KSkgJGF1dGhvcmlkID0gQCRBdXRob3JJRDsKCQkJaWYgKGVtcHR5KCRjYXRlZ29yeTEpKSAk
Y2F0ZWdvcnkxID0gQCRDYXRlZ29yeTE7CgkJCWlmIChlbXB0eSgkY2F0ZWdvcnkyKSkgJGNh
dGVnb3J5MiA9IEAkQ2F0ZWdvcnkyOwoJCQlpZiAoZW1wdHkoJHRoaXNpZCkpICR0aGlzaWQg
PSAkSUQ7CgoJCQkkcGxfY29tcG9uZW50cyA9ICRwbFsnY29tcG9uZW50cyddOwoKCQkJLy8g
Q2hlY2sgdG8gc2VlIGlmIHRoZXJlIGlzIGEgdGl0bGUgY29tcG9uZW50LgoJCQkkdGl0bGUg
PSBmYWxzZTsKCQkJZm9yZWFjaCgkcGxfY29tcG9uZW50cyBhcyAkcGxfYykKCQkJCWlmICgk
cGxfY1sndHlwZSddID09ICd0aXRsZScgfHwgJHBsX2NbJ3R5cGUnXSA9PSAnaWQnKQoJCQkJ
CSR0aXRsZSA9IHRydWU7CgoJCQkvLyBJZiB0aGVyZSBpc24ndCBhIHRpdGxlIGNvbXBvbmVu
dCB0aGVuIHdlIG5lZWQgdG8gYXBwZW5kIG9uZSB0byB0aGUgZW5kIG9mIHRoZSBVUkkKCQkJ
aWYgKCEkdGl0bGUgJiYgJHRoaXMtPnByZWYoJ2F1dG9tYXRpY2FsbHlfYXBwZW5kX3RpdGxl
JykpCgkJCQkkcGxfY29tcG9uZW50c1tdID0gYXJyYXkoJ3R5cGUnID0+ICd0aXRsZScsICdw
cmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywgJ3JlZ2V4JyA9PiAnJywgJ3RleHQnID0+
ICcnKTsKCgkJCSR1cmkgPSBydHJpbShkb1N0cmlwKEAkcHJldGV4dFsnc3VicGF0aCddKSwg
Jy8nKTsKCQkJZm9yZWFjaCAoJHBsX2NvbXBvbmVudHMgYXMgJHBsX2MpIHsKCQkJCSR1cmkg
Lj0gJy8nOwoKCQkJCSR0eXBlID0gJHBsX2NbJ3R5cGUnXTsKCQkJCXN3aXRjaCAoJHR5cGUp
IHsKCQkJCQljYXNlICdjYXRlZ29yeSc6CgkJCQkJCWlmICghQCRwbF9jWydjYXRlZ29yeSdd
KSAkcGxfY1snY2F0ZWdvcnknXSA9IDE7CgkJCQkJCSRwcmltYXJ5ID0gJ2NhdGVnb3J5Jy4g
JHBsX2NbJ2NhdGVnb3J5J107CgkJCQkJCSRzZWNvbmRhcnkgPSAnY2F0ZWdvcnknLiAoMy0o
aW50KSRwbF9jWydjYXRlZ29yeSddKTsKCQkJCQkJJGNoZWNrX2NvbnRleHQgPSAoJHRoaXMt
PnByZWYoJ2pvaW5fcHJldGV4dF90b19wYWdlbGlua3MnKSAmJiAkdGhpcy0+cHJlZignY2hl
Y2tfcHJldGV4dF9jYXRlZ29yeV9jb250ZXh0JykpOwoJCQkJCQlpZiAoISRjaGVja19jb250
ZXh0IHx8ICQkcHJpbWFyeSA9PSAkcHJldGV4dFsnYyddKQoJCQkJCQkJJHVyaV9jID0gJCRw
cmltYXJ5OwoJCQkJCQllbHNlIGlmICghJGNoZWNrX2NvbnRleHQgfHwgJCRzZWNvbmRhcnkg
PT0gJHByZXRleHRbJ2MnXSkKCQkJCQkJCSR1cmlfYyA9ICQkc2Vjb25kYXJ5OwoJCQkJCQll
bHNlIGlmICgkdGhpcy0+cHJlZignZGVidWcnKSAmJiBpbl9hcnJheSgkcHJvZHVjdGlvbl9z
dGF0dXMsIGFycmF5KCdkZWJ1ZycsICd0ZXN0aW5nJykpKQoJCQkJCQkJJHVyaV9jID0gJy0t
SU5WQUxJRF9DQVRFR09SWS0tJzsKCQkJCQkJZWxzZSB7CgkJCQkJCQl1bnNldCgkdXJpKTsK
CQkJCQkJCWJyZWFrIDI7CgkJCQkJCX0KCQkJCQlicmVhazsKCQkJCQljYXNlICdzZWN0aW9u
JzoKCQkJCQkJJGNoZWNrX2NvbnRleHQgPSAoJHRoaXMtPnByZWYoJ2pvaW5fcHJldGV4dF90
b19wYWdlbGlua3MnKSAmJiAkdGhpcy0+cHJlZignY2hlY2tfcHJldGV4dF9zZWN0aW9uX2Nv
bnRleHQnKSk7CgkJCQkJCWlmICghJGNoZWNrX2NvbnRleHQgfHwgJHNlY3Rpb24gPT0gJHBy
ZXRleHRbJ3MnXSkKCQkJCQkJCSR1cmlfYyA9ICRzZWN0aW9uOwoJCQkJCQllbHNlIHsKCQkJ
CQkJCXVuc2V0KCR1cmkpOwoJCQkJCQkJYnJlYWsgMjsKCQkJCQkJfQoJCQkJCWJyZWFrOwoJ
CQkJCWNhc2UgJ3RpdGxlJzogJHVyaV9jID0gJHVybF90aXRsZTsgYnJlYWs7CgkJCQkJY2Fz
ZSAnaWQnOiAkdXJpX2MgPSAkdGhpc2lkOyBicmVhazsKCQkJCQljYXNlICdhdXRob3InOiAk
dXJpX2MgPSBzYWZlX2ZpZWxkKCdSZWFsTmFtZScsICd0eHBfdXNlcnMnLCAibmFtZSBsaWtl
ICd7JGF1dGhvcmlkfSciKTsgYnJlYWs7CgkJCQkJY2FzZSAnbG9naW4nOiAkdXJpX2MgPSAk
YXV0aG9yaWQ7IGJyZWFrOwoJCQkJCWNhc2UgJ2RhdGUnOiAkdXJpX2MgPSBleHBsb2RlKCcv
JywgZGF0ZSgnWS9tL2QnLCAkcG9zdGVkKSk7IGJyZWFrOwoJCQkJCWNhc2UgJ3llYXInOiAk
dXJpX2MgPSBkYXRlKCdZJywgJHBvc3RlZCk7IGJyZWFrOwoJCQkJCWNhc2UgJ21vbnRoJzog
JHVyaV9jID0gZGF0ZSgnbScsICRwb3N0ZWQpOyBicmVhazsKCQkJCQljYXNlICdkYXknOiAk
dXJpX2MgPSBkYXRlKCdkJywgJHBvc3RlZCk7IGJyZWFrOwoJCQkJCWNhc2UgJ2N1c3RvbSc6
CgkJCQkJCWlmICgkdXJpX2MgPSBAJGFydGljbGVfYXJyYXlbJHByZWZzWyJjdXN0b21feyRw
bF9jWydjdXN0b20nXX1fc2V0Il1dKTsKCQkJCQkJZWxzZSBpZiAoJHVyaV9jID0gQCRhcnRp
Y2xlX2FycmF5WyJjdXN0b21feyRwbF9jWydjdXN0b20nXX0iXSk7CgkJCQkJCWVsc2UgaWYg
KCR0aGlzLT5wcmVmKCdkZWJ1ZycpICYmIGluX2FycmF5KCRwcm9kdWN0aW9uX3N0YXR1cywg
YXJyYXkoJ2RlYnVnJywgJ3Rlc3RpbmcnKSkpCgkJCQkJCQkkdXJpX2MgPSAnLS1VTlNFVF9D
VVNUT01fRklFTEQtLSc7CgkJCQkJCWVsc2UgewoJCQkJCQkJdW5zZXQoJHVyaSk7CgkJCQkJ
CQlicmVhayAyOwoJCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAndGV4dCc6ICR1cmlf
YyA9ICRwbF9jWyd0ZXh0J107IGJyZWFrOwoJCQkJCWNhc2UgJ3JlZ2V4JzoKCQkJCQkJLy8g
Q2hlY2sgdG8gc2VlIGlmIHJlZ2V4IGlzIHZhbGlkIHdpdGhvdXQgb3V0cHV0dGluZyBlcnJv
ciBtZXNzYWdlcy4KCQkJCQkJb2Jfc3RhcnQoKTsKCQkJCQkJcHJlZ19tYXRjaCgkcGxfY1sn
cmVnZXgnXSwgJHBsX2NbJ3JlZ2V4J10sICRyZWdleF9tYXRjaGVzKTsKCQkJCQkJJGlzX3Zh
bGlkX3JlZ2V4ID0gIShvYl9nZXRfY2xlYW4oKSk7CgkJCQkJCWlmICgkaXNfdmFsaWRfcmVn
ZXgpIHsKCQkJCQkJCSRrZXkgPSAicGVybWxpbmtfcmVnZXhfeyRwbF9jWyduYW1lJ119IjsK
CQkJCQkJCSR1cmlfYyA9IChhcnJheV9rZXlfZXhpc3RzKCRrZXksICRwcmV0ZXh0KSkgPyAk
cHJldGV4dFska2V5XSA6ICRyZWdleF9tYXRjaGVzWzBdOwoJCQkJCQl9IGVsc2UgaWYgKCR0
aGlzLT5wcmVmKCdkZWJ1ZycpKQoJCQkJCQkJJHVyaV9jID0gJy0tSU5WQUxJRF9SRUdFWC0t
JzsKCQkJCQlicmVhazsKCQkJCX0KCgkJCQlpZiAoZW1wdHkoJHVyaV9jKSkKCQkJCQlpZiAo
JHRoaXMtPnByZWYoJ2RlYnVnJykgJiYgaW5fYXJyYXkoJHByb2R1Y3Rpb25fc3RhdHVzLCBh
cnJheSgnZGVidWcnLCAndGVzdGluZycpKSkKCQkJCQkJJHVyaV9jID0gJy0tUEVSTUxJTktf
Rk9STUFUX0VSUk9SLS0nOwoJCQkJCWVsc2UgewoJCQkJCQl1bnNldCgkdXJpKTsKCQkJCQkJ
YnJlYWs7CgkJCQkJfQoKCQkJCWlmIChAJHBsX2NbJ3ByZWZpeCddKQoJCQkJCSR1cmkgLj0g
JHRoaXMtPmVuY29kZV91cmwoJHBsX2NbJ3ByZWZpeCddKTsKCgkJCQlpZiAoaXNfYXJyYXko
JHVyaV9jKSkgewoJCQkJCWZvcmVhY2ggKCR1cmlfYyBhcyAkdXJpX2MyKQoJCQkJCQkkdXJp
IC49ICR0aGlzLT5lbmNvZGVfdXJsKCR1cmlfYzIpIC4gJy8nOwoJCQkJCSR1cmkgPSBydHJp
bSgkdXJpLCAnLycpOwoJCQkJfSBlbHNlCgkJCQkJJHVyaSAuPSAkdGhpcy0+ZW5jb2RlX3Vy
bCgkdXJpX2MpOwoKCQkJCWlmIChAJHBsX2NbJ3N1ZmZpeCddKQoJCQkJCSR1cmkgLj0gJHRo
aXMtPmVuY29kZV91cmwoJHBsX2NbJ3N1ZmZpeCddKTsKCgkJCQl1bnNldCgkdXJpX2MpOwoJ
CQl9CgoJCQlpZiAoaXNzZXQoJHVyaSkpCgkJCQkkdXJpIC49ICcvJzsKCQl9CgoJCWlmICgk
dXJpX2VtcHR5ID0gZW1wdHkoJHVyaSkpIHsKCQkJLy8gSXQgaXMgcG9zc2libGUgdGhlIHVy
aSBpcyBzdGlsbCBlbXB0eSBpZiB0aGVyZSBpcyBubyBtYXRjaCBvciBpZiB3ZSdyZSB1c2lu
ZwoJCQkvLyBzdHJpY3QgbWF0Y2hpbmcgaWYgc28gdHJ5IHRoZSBkZWZhdWx0IHBlcm1saW5r
IG1vZGUuCgkJCSR1cmkgPSAkdGhpcy0+dG9nZ2xlX3Blcm1saW5rX21vZGUoJ3Blcm1saW5r
dXJsJywgJGFydGljbGVfYXJyYXkpOwoJCX0KCgkJaWYgKCR0aGlzLT5wcmVmKCdvbWl0X3Ry
YWlsaW5nX3NsYXNoJykpCgkJCSR1cmkgPSBydHJpbSgkdXJpLCAnLycpOwoKCQlpZiAoISR1
cmlfZW1wdHkgJiYgaW5fYXJyYXkodHhwYXRoLicvcHVibGlzaC9yc3MucGhwJywgZ2V0X2lu
Y2x1ZGVkX2ZpbGVzKCkpIHx8IGluX2FycmF5KHR4cGF0aC4nL3B1Ymxpc2gvYXRvbS5waHAn
LCBnZXRfaW5jbHVkZWRfZmlsZXMoKSkgfHwgdHhwaW50ZXJmYWNlID09ICdhZG1pbicpIHsK
CQkJJGhvc3QgPSBydHJpbShzdHJfcmVwbGFjZShydHJpbShkb1N0cmlwKEAkcHJldGV4dFsn
c3VicGF0aCddKSwgJy8nKSwgJycsIGh1KSwgJy8nKTsKCQkJJHVyaSA9ICRob3N0IC4gJHVy
aTsKCQl9CgoJCXJldHVybiAoJHRoaXMtPnByZWYoJ2ZvcmNlX2xvd2VyY2FzZV91cmxzJykp
ID8gc3RydG9sb3dlcigkdXJpKSA6ICR1cmk7Cgl9CgoJZnVuY3Rpb24gX3BhZ2VsaW5rdXJs
ICgkcGFydHMpIHsKCQlleHRyYWN0KGxBdHRzKGFycmF5KAoJCQkncGF0aCcJCT0+ICdpbmRl
eC5waHAnLAoJCQkncXVlcnknCQk9PiAnJywKCQkJJ2ZyYWdtZW50Jwk9PiAnJywKCQkpLCBw
YXJzZV91cmwoaHRtbF9lbnRpdHlfZGVjb2RlKHN0cl9yZXBsYWNlKCcmIzM4OycsICcmJywg
JHBhcnRzWzJdKSkpKSk7CgoJCS8vIFRpZHkgdXAgbGlua3MgYmFjayB0byB0aGUgc2l0ZSBo
b21lcGFnZQoJCWlmICgkcGF0aCA9PSAnaW5kZXgucGhwJyAmJiBlbXB0eSgkcXVlcnkpKQoJ
CQlyZXR1cm4gJ2hyZWY9IicgLmh1LiAnIic7CgoJCS8vIEZpeCBtYXRjaGVzIGxpa2UgaHJl
Zj0iP3M9Zm9vIgoJCWVsc2UgaWYgKCRwYXRoICYmIGVtcHR5KCRxdWVyeSkgJiYgJHBhcnRz
WzFdID09ICc/JykgewoJCQkkcXVlcnkgPSAkcGF0aDsKCQkJJHBhdGggPSAnaW5kZXgucGhw
JzsKCQl9CgoJCS8vIENoZWNrIHRvIHNlZSBpZiB0aGVyZSBpcyBxdWVyeSB0byB3b3JrIHdp
dGguCgkJZWxzZSBpZiAoZW1wdHkoJHF1ZXJ5KSB8fCAkcGF0aCAhPSAnaW5kZXgucGhwJyB8
fCBzdHJwb3MoJHF1ZXJ5LCAnLycpID09PSB0cnVlKQoJCQlyZXR1cm4gJHBhcnRzWzBdOwoK
CQkvLyAnJmFtcDsnIHdpbGwgYnJlYWsgcGFyc2Vfc3RyKCkgaWYgdGhleSBhcmUgZm91bmQg
aW4gYSBxdWVyeSBzdHJpbmcKCQkkcXVlcnkgPSBzdHJfcmVwbGFjZSgnJmFtcDsnLCAnJics
ICRxdWVyeSk7CgoJCWlmICgkZnJhZ21lbnQpCgkJCSRmcmFnbWVudCA9ICcjJy4kZnJhZ21l
bnQ7CgoJCWdsb2JhbCAkcHJldGV4dDsKCQlwYXJzZV9zdHIoJHF1ZXJ5LCAkcXVlcnlfcGFy
dCk7CgkJaWYgKCFhcnJheV9rZXlfZXhpc3RzKCdwZycsICRxdWVyeV9wYXJ0KSkKCQkJJHF1
ZXJ5X3BhcnRbJ3BnJ10gPSAwOwoJCWlmICghYXJyYXlfa2V5X2V4aXN0cygnaWQnLCAkcXVl
cnlfcGFydCkpCgkJCSRxdWVyeV9wYXJ0WydpZCddID0gMDsKCQlpZiAoIWFycmF5X2tleV9l
eGlzdHMoJ3JzcycsICRxdWVyeV9wYXJ0KSkKCQkJJHF1ZXJ5X3BhcnRbJ3JzcyddID0gMDsK
CQlpZiAoIWFycmF5X2tleV9leGlzdHMoJ2F0b20nLCAkcXVlcnlfcGFydCkpCgkJCSRxdWVy
eV9wYXJ0WydhdG9tJ10gPSAwOwoJCWlmICgkdGhpcy0+cHJlZignam9pbl9wcmV0ZXh0X3Rv
X3BhZ2VsaW5rcycpKQoJCQlleHRyYWN0KGFycmF5X21lcmdlKCRwcmV0ZXh0LCAkcXVlcnlf
cGFydCkpOwoJCWVsc2UKCQkJZXh0cmFjdCgkcXVlcnlfcGFydCk7CgoJCS8vIFdlIGhhdmUg
YSBpZCwgcGFzcyB0byBwZXJtbGlua3VybCgpCgkJaWYgKCRpZCkgewoJCQlpZiAoQCRzID09
ICdmaWxlX2Rvd25sb2FkJykgewoJCQkJJHRpdGxlID0gKHZlcnNpb25fY29tcGFyZSgkZGJ2
ZXJzaW9uLCAnNC4yJywgJz49JykpID8gTlVMTCA6IHNhZmVfZmllbGQoJ2ZpbGVuYW1lJywg
J3R4cF9maWxlJywgImlkID0gJ3skaWR9JyIpOwoJCQkJJHVybCA9ICR0aGlzLT50b2dnbGVf
cGVybWxpbmtfbW9kZSgnZmlsZWRvd25sb2FkdXJsJywgYXJyYXkoJGlkLCAkdGl0bGUpLCB0
cnVlKTsKCQkJfSBlbHNlIHsKCQkJCSRycyA9IHNhZmVfcm93KCcqLCBJRCBhcyB0aGlzaWQs
IHVuaXhfdGltZXN0YW1wKFBvc3RlZCkgYXMgcG9zdGVkJywgJ3RleHRwYXR0ZXJuJywgIklE
ID0gJ3skaWR9JyIpOwoJCQkJJHVybCA9ICR0aGlzLT5fcGVybWxpbmt1cmwoJHJzLCBQRVJN
TElOS1VSTCkgLiAkZnJhZ21lbnQ7CgkJCX0KCQkJcmV0dXJuICdocmVmPSInLiAkdXJsIC4n
Iic7CgkJfQoKCQlpZiAoQCRzID09ICdkZWZhdWx0JykKCQkJdW5zZXQoJHMpOwoKCQkvLyBT
b21lIFR4UCB0YWdzLCBlLmcuIDx0eHA6ZmVlZF9saW5rIC8+IHVzZSAnc2VjdGlvbicgb3Ig
J2NhdGVnb3J5JyBpbmNvbnNpc3RlbnQKCQkvLyB3aXRoIG1vc3Qgb3RoZXIgdGFncy4gUHJv
Y2VzcyB0aGVzZSBub3cgc28gd2Ugb25seSBoYXZlIHRvIGNoZWNrICRzIGFuZCAkYy4KCQlp
ZiAoQCRzZWN0aW9uICYmICEkcykKCQkJJHMgPSAkc2VjdGlvbjsKCQlpZiAoQCRjYXRlZ29y
eSAmJiAhJGMpCgkJCSRjID0gJGNhdGVnb3J5OwoKCQkvLyBEZWJ1Z2dpbmcgZm9yIGJ1ZmZl
cnMKCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAndXJsOiAnLnN0cl9yZXBsYWNlKCcmYW1w
OycsICcmJywgJHBhcnRzWzFdLiRwYXJ0c1syXSk7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1td
ID0gJ3BhdGg6ICcuJHBhdGg7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3F1ZXJ5OiAn
LiRxdWVyeTsKCQlpZiAoJGZyYWdtZW50KSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnZnJh
Z21lbnQ6ICcuJGZyYWdtZW50OwoKCQlpZiAoQCRpZCkgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1td
ID0gJ2lkOiAnLiRpZDsKCQlpZiAoQCRzKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnczog
Jy4kczsKCQlpZiAoQCRjKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnYzogJy4kYzsKCQlp
ZiAoQCRyc3MpICR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdyc3M6ICcuJHJzczsKCQlpZiAo
QCRhdG9tKSAkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnYXRvbTogJy4kYXRvbTsKCQlpZiAo
QCRwZykgJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ3BnOiAnLiRwZzsKCQlpZiAoQCRxKSAk
dGhpcy0+YnVmZmVyX2RlYnVnW10gPSAncTogJy4kcTsKCgkJaWYgKEAkcHJldGV4dFsncGVy
bWxpbmtfb3ZlcnJpZGUnXSkgewoJCQkkb3ZlcnJpZGVfaWRzID0gZXhwbG9kZSgnLCcsICRw
cmV0ZXh0WydwZXJtbGlua19vdmVycmlkZSddKTsKCQkJZm9yZWFjaCAoJG92ZXJyaWRlX2lk
cyBhcyAkb3ZlcnJpZGVfaWQpIHsKCQkJCSRwbCA9ICR0aGlzLT5nZXRfcGVybWxpbmsoJG92
ZXJyaWRlX2lkKTsKCQkJCWlmIChjb3VudCgkcGwpID4gMCkgJHBlcm1saW5rc1tdID0gJHBs
OwoJCQl9CgkJfQoKCQlpZiAoZW1wdHkoJHBlcm1saW5rcykpIHsKCQkJJHBlcm1saW5rcyA9
ICR0aGlzLT5nZXRfYWxsX3Blcm1saW5rcygxKTsKCgkJCSRwZXJtbGlua3NbJ2dicF9wZXJt
YW5lbnRfbGlua3NfZGVmYXVsdCddID0gYXJyYXkoCgkJCQknY29tcG9uZW50cycgPT4gYXJy
YXkoCgkJCQkJYXJyYXkoJ3R5cGUnID0+ICd0ZXh0JywgJ3RleHQnID0+IHN0cnRvbG93ZXIo
dXJsZW5jb2RlKGdUeHQoJ2NhdGVnb3J5JykpKSksCgkJCQkJYXJyYXkoJ3R5cGUnID0+ICdj
YXRlZ29yeScpLAoJCQkJKSwKCQkJCSdzZXR0aW5ncycgPT4gYXJyYXkoCgkJCQkJJ3BsX25h
bWUnID0+ICdnYnBfcGVybWFuZW50X2xpbmtzX2RlZmF1bHQnLCAncGxfcHJlY2VkZW5jZScg
PT4gJycsICdwbF9wcmV2aWV3JyA9PiAnJywKCQkJCQknY29uX3NlY3Rpb24nID0+ICcnLCAn
Y29uX2NhdGVnb3J5JyA9PiAnJywgJ2Rlc19zZWN0aW9uJyA9PiAnJywgJ2Rlc19jYXRlZ29y
eScgPT4gJycsCgkJCQkJJ2Rlc19wZXJtbGluaycgPT4gJycsICdkZXNfZmVlZCcgPT4gJycs
ICdkZXNfbG9jYXRpb24nID0+ICcnLAoJCQkpKTsKCQl9CgoJCSRjdXJyZW50X3NlZ21lbnRz
ID0gZXhwbG9kZSgnLycsIGx0cmltKCRwcmV0ZXh0WydyZXF1ZXN0X3VyaSddLCAnLycpKTsK
CgkJJGhpZ2hlc3RfbWF0Y2hfY291bnQgPSBudWxsOwoJCWZvcmVhY2ggKCRwZXJtbGlua3Mg
YXMgJGtleSA9PiAkcGwpIHsKCQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ1Rlc3Rpbmcg
cGVybWxpbms6ICcuICRwbFsnc2V0dGluZ3MnXVsncGxfbmFtZSddIC4nIC0gJy4gJGtleTsK
CQkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ1ByZXZpZXc6ICcuICRwbFsnc2V0dGluZ3Mn
XVsncGxfcHJldmlldyddOwoJCQkkb3V0ID0gYXJyYXkoKTsgJGtleXMgPSBhcnJheSgpOyAk
bWF0Y2hfY291bnQgPSAwOwoJCQlmb3JlYWNoICgkcGxbJ2NvbXBvbmVudHMnXSBhcyAkaSA9
PiAkcGxfYykgewoJCQkJc3dpdGNoICgkcGxfY1sndHlwZSddKSB7CgkJCQkJY2FzZSAndGV4
dCc6CgkJCQkJCSRvdXRbXSA9ICRwbF9jWyd0ZXh0J107CgkJCQkJYnJlYWs7CgkJCQkJY2Fz
ZSAncmVnZXgnOgoJCQkJCQkkb3V0W10gPSAkcHJldGV4dFsncGVybWxpbmtfcmVnZXhfJy4k
cGxfY1snbmFtZSddXTsKCQkJCQlicmVhazsKCQkJCQljYXNlICdzZWN0aW9uJzoKCQkJCQkJ
aWYgKEAkcykgJG91dFtdID0gJHM7CgkJCQkJCWVsc2UgYnJlYWsgMjsKCQkJCQlicmVhazsK
CQkJCQljYXNlICdjYXRlZ29yeSc6CgkJCQkJCWlmIChAJGMpICRvdXRbXSA9ICRjOwoJCQkJ
CQllbHNlIGJyZWFrIDI7CgkJCQkJYnJlYWs7CgkJCQkJY2FzZSAnZmVlZCc6CgkJCQkJCWlm
IChAJHJzcykgJGtleXNbXSA9ICRvdXRbXSA9ICdyc3MnOwoJCQkJCQllbHNlIGlmIChAJGF0
b20pICRrZXlzW10gPSAkb3V0W10gPSAnYXRvbSc7CgkJCQkJCWVsc2UgYnJlYWsgMjsKCQkJ
CQlicmVhazsKCQkJCQljYXNlICdzZWFyY2gnOgoJCQkJCQlpZiAoQCRxKSAkb3V0W10gPSAk
cTsKCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3BhZ2UnOgoJ
CQkJCQlpZiAoQCRwZykgewoJCQkJCQkJJG91dFtdID0gJHBnOwoJCQkJCQkJJGtleXNbXSA9
ICdwZyc7CgkJCQkJCX0KCQkJCQkJZWxzZSBicmVhayAyOwoJCQkJCWJyZWFrOwoJCQkJCWRl
ZmF1bHQ6IGJyZWFrIDI7CgkJCQl9CgkJCQlpZiAoaW5fYXJyYXkoJHBsX2NbJ3R5cGUnXSwg
YXJyYXkoJ3RleHQnLCAncmVnZXgnKSkpIHsKCQkJCQlpZiAoJGN1cnJlbnRfc2VnbWVudHNb
JGldID09IGVuZCgkb3V0KSAmJiBzdHJsZW4oZW5kKCRvdXQpKSA+IDApCgkJCQkJCSRtYXRj
aF9jb3VudCArPSAkdGhpcy0+cHJlZigndGV4dF9hbmRfcmVnZXhfc2VnbWVudF9zY29yZXMn
KTsKCQkJCX0KCQkJCWVsc2VpZiAoIWluX2FycmF5KCRwbF9jWyd0eXBlJ10sIGFycmF5KCd0
aXRsZScsICdpZCcpKSkKCQkJCQkkbWF0Y2hfY291bnQrKzsKCQkJCWVsc2UgYnJlYWs7CgkJ
CX0KCgkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdNYXRjaCBjb3VudDogJy4gJG1hdGNo
X2NvdW50OwoKCQkJLy8gVG9kbzogU3RvcmUgYWNjb3JkaW5nIHRvIHRoZSBwcmVjZWRlbmNl
IHZhbHVlCgkJCWlmIChjb3VudCgkb3V0KSA+IDAgJiYgKCRtYXRjaF9jb3VudCA+ICRoaWdo
ZXN0X21hdGNoX2NvdW50IHx8ICFpc3NldCgkaGlnaGVzdF9tYXRjaF9jb3VudCkpICYmCgkJ
CSEoJGtleSA9PSAnZ2JwX3Blcm1hbmVudF9saW5rc19kZWZhdWx0JyAmJiAhJG1hdGNoX2Nv
dW50KSkgewoJCQkJZXh0cmFjdCgkcGxbJ3NldHRpbmdzJ10pOwoJCQkJaWYgKChlbXB0eSgk
cykgJiYgZW1wdHkoJGMpKSB8fAoJCQkJKGVtcHR5KCRjb25fc2VjdGlvbikgfHwgQCRzID09
ICRjb25fc2VjdGlvbikgfHwKCQkJCShlbXB0eSgkY29uX2NhdGVnb3J5KSB8fCBAJGMgPT0g
JGNvbl9jYXRlZ29yeSkpIHsKCQkJCQkkdGhpcy0+YnVmZmVyX2RlYnVnW10gPSAnTmV3IGhp
Z2hlc3QgbWF0Y2ghICcuIGltcGxvZGUoJy8nLCAkb3V0KTsKCQkJCQkkaGlnaGVzdF9tYXRj
aF9jb3VudCA9ICRtYXRjaF9jb3VudDsKCQkJCQkkbWF0Y2ggPSAkb3V0OwoJCQkJCSRtYXRj
aF9rZXlzID0gJGtleXM7CgkJCQl9CgkJCX0KCQl9CgoJCWlmIChlbXB0eSgkbWF0Y2gpICYm
ICghKEAkcGcgJiYgJHRoaXMtPnByZWYoJ2NsZWFuX3BhZ2VfYXJjaGl2ZV9saW5rcycpKSB8
fCAoQCRwZyAmJiBAJHEpKSkgewoJCQlnbG9iYWwgJHByZWZzLCAkcHJldGV4dCwgJHBlcm1s
aW5rX21vZGU7CgkJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdObyBtYXRjaCc7CgkJCSR0
aGlzLT5idWZmZXJfZGVidWdbXSA9ICctLS0tJzsKCQkJJHByZXRleHRbJ3Blcm1saW5rX21v
ZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJHByZWZzWydwZXJtbGlua19tb2RlJ107CgkJCSR1
cmwgPSBwYWdlbGlua3VybCgkcXVlcnlfcGFydCk7CgkJCSRwcmV0ZXh0WydwZXJtbGlua19t
b2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICdtZXNzeSc7CgkJCXJldHVybiAnaHJlZj0iJy4g
JHVybCAuJyInOwoJCX0KCgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJ21hdGNoOiAnLiAg
ICAgIHNlcmlhbGl6ZSgkbWF0Y2gpOwoJCSR0aGlzLT5idWZmZXJfZGVidWdbXSA9ICdtYXRj
aF9rZXlzOiAnLiBzZXJpYWxpemUoJG1hdGNoX2tleXMpOwoKCQkkdXJsID0gJy8nLmpvaW4o
Jy8nLCAkbWF0Y2gpOwoJCSR1cmwgPSBydHJpbShodSwgJy8nKS5ydHJpbSgkdXJsLCAnLycp
LicvJzsKCgkJaWYgKCRyc3MgJiYgIWluX2FycmF5KCdyc3MnLCAkbWF0Y2hfa2V5cykpCgkJ
CSR1cmwgLj0gJ3Jzcyc7CgkJZWxzZSBpZiAoJGF0b20gJiYgIWluX2FycmF5KCdhdG9tJywg
JG1hdGNoX2tleXMpKQoJCQkkdXJsIC49ICdhdG9tJzsKCQllbHNlIGlmICgkcGcgJiYgIWlu
X2FycmF5KCdwZycsICRtYXRjaF9rZXlzKSkgewoJCQlpZiAoJHRoaXMtPnByZWYoJ2NsZWFu
X3BhZ2VfYXJjaGl2ZV9saW5rcycpKQoJCQkJJHVybCAuPSAkcGc7CgkJCWVsc2UgewoJCQkJ
JHVybCAuPSAnP3BnPScuICRwZzsKCQkJCSRvbWl0X3RyYWlsaW5nX3NsYXNoID0gdHJ1ZTsK
CQkJfQoJCX0KCgkJJHVybCA9IHJ0cmltKCR1cmwsICcvJykgLiAnLyc7CgoJCWlmIChAJG9t
aXRfdHJhaWxpbmdfc2xhc2ggfHwgJHRoaXMtPnByZWYoJ29taXRfdHJhaWxpbmdfc2xhc2gn
KSkKCQkJJHVybCA9IHJ0cmltKCR1cmwsICcvJyk7CgoJCSR0aGlzLT5idWZmZXJfZGVidWdb
XSA9ICR1cmw7CgkJJHRoaXMtPmJ1ZmZlcl9kZWJ1Z1tdID0gJy0tLS0nOwoKCQlpZiAoJHBh
dGggPT0gJ2luZGV4LnBocCcgJiYgJHVybCAhPSBodSkKCQkJcmV0dXJuICdocmVmPSInLiAk
dXJsIC4gJGZyYWdtZW50IC4nIic7CgoJCS8qCgkJMSA9IGluZGV4LCB0ZXh0cGF0dGVybi9j
c3MsIE5VTEwgKD1pbmRleCkKCQkyID0gaWQsIHMsIHNlY3Rpb24sIGMsIGNhdGVnb3J5LCBy
c3MsIGF0b20sIHBnLCBxLCAobiwgcCwgbW9udGgsIGF1dGhvcikKCQkqLwoKCQlyZXR1cm4g
KCR0aGlzLT5wcmVmKCdmb3JjZV9sb3dlcmNhc2VfdXJscycpKSA/IHN0cnRvbG93ZXIoJHBh
cnRzWzBdKSA6ICRwYXJ0c1swXTsKCX0KCglmdW5jdGlvbiBzZXRfcGVybWxpbmtfbW9kZSAo
JHJlc2V0X2Z1bmN0aW9uID0gZmFsc2UpIHsKCQlnbG9iYWwgJHByZWZzLCAkcHJldGV4dCwg
JHBlcm1saW5rX21vZGU7CgkJJHByZWZzWydjdXN0b21fdXJsX2Z1bmMnXSA9IGFycmF5KCYk
dGhpcywgJ19wZXJtbGlua3VybCcpOwoKCQlpZiAoISRyZXNldF9mdW5jdGlvbikKCQkJJHBy
ZXRleHRbJ3Blcm1saW5rX21vZGUnXSA9ICRwZXJtbGlua19tb2RlID0gJ21lc3N5JzsKCQll
bHNlCgkJCSRwcmV0ZXh0WydwZXJtbGlua19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICRw
cmVmc1sncGVybWxpbmtfbW9kZSddOwoJfQoKCWZ1bmN0aW9uIHJlc2V0X3Blcm1saW5rX21v
ZGUgKCkgewoJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0LCAkcGVybWxpbmtfbW9kZTsKCQl1
bnNldCgkcHJlZnNbJ2N1c3RvbV91cmxfZnVuYyddKTsKCQkkcHJldGV4dFsncGVybWxpbmtf
bW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAkcHJlZnNbJ3Blcm1saW5rX21vZGUnXTsKCX0K
CglmdW5jdGlvbiB0b2dnbGVfY3VzdG9tX3VybF9mdW5jICgkZnVuYywgJGF0dHMgPSBOVUxM
LCAkdG9vZ2xlX3Blcm1saW5rX21vZGUgPSBmYWxzZSwgJGV4cGFuZF9hcmd1bWVudHMgPSBm
YWxzZSkgewoJCWdsb2JhbCAkcHJlZnMsICRwcmV0ZXh0OwoKCQlpZiAoJHRvb2dsZV9wZXJt
bGlua19tb2RlKSB7CgkJCWdsb2JhbCAkcGVybWxpbmtfbW9kZTsKCQkJJF9wZXJtbGlua19t
b2RlID0gJHBlcm1saW5rX21vZGU7CgkJfQoKCQkkX2NhbGxfdXNlcl9mdW5jID0gQCRwcmVm
c1snY3VzdG9tX3VybF9mdW5jJ107CgoJCXVuc2V0KCRwcmVmc1snY3VzdG9tX3VybF9mdW5j
J10pOwoJCWlmICgkdG9vZ2xlX3Blcm1saW5rX21vZGUpCgkJCSRwcmV0ZXh0WydwZXJtbGlu
a19tb2RlJ10gPSAkcGVybWxpbmtfbW9kZSA9ICRwcmVmc1sncGVybWxpbmtfbW9kZSddOwoK
CQlpZiAoaXNfY2FsbGFibGUoJGZ1bmMpKSB7CgkJCWlmIChpc19hcnJheSgkYXR0cykgYW5k
ICRleHBhbmRfYXJndW1lbnRzKQoJCQkJJHJzID0gY2FsbF91c2VyX2Z1bmNfYXJyYXkoJGZ1
bmMsICRhdHRzKTsKCQkJZWxzZQoJCQkJJHJzID0gY2FsbF91c2VyX2Z1bmMoJGZ1bmMsICRh
dHRzKTsKCQl9CgoJCSRwcmVmc1snY3VzdG9tX3VybF9mdW5jJ10gPSAkX2NhbGxfdXNlcl9m
dW5jOwoKCQlpZiAoJHRvb2dsZV9wZXJtbGlua19tb2RlKQoJCQkkcHJldGV4dFsncGVybWxp
bmtfbW9kZSddID0gJHBlcm1saW5rX21vZGUgPSAkX3Blcm1saW5rX21vZGU7CgoJCXJldHVy
biAkcnM7Cgl9CgoJZnVuY3Rpb24gdG9nZ2xlX3Blcm1saW5rX21vZGUgKCRmdW5jLCAkYXR0
cyA9IE5VTEwsICRleHBhbmRfYXJndW1lbnRzID0gZmFsc2UpIHsKCQlyZXR1cm4gJHRoaXMt
PnRvZ2dsZV9jdXN0b21fdXJsX2Z1bmMoJGZ1bmMsICRhdHRzLCB0cnVlLCAkZXhwYW5kX2Fy
Z3VtZW50cyk7Cgl9CgoJZnVuY3Rpb24gZW5jb2RlX3VybCAoJHRleHQpIHsKCQlyZXR1cm4g
dXJsZW5jb2RlKHRyaW0oZHVtYkRvd24odXJsZGVjb2RlKCR0ZXh0KSkpKTsKCX0KCglmdW5j
dGlvbiBkZWJ1ZyAoKSB7CgkJaWYgKCR0aGlzLT5wcmVmKCdkZWJ1ZycpKSB7CgkJCWdsb2Jh
bCAkcHJvZHVjdGlvbl9zdGF0dXM7CgkJCSRhID0gZnVuY19nZXRfYXJncygpOwoKCQkJaWYg
KEB0eHBpbnRlcmZhY2UgPT0gJ2FkbWluJykKCQkJCWZvcmVhY2ggKCRhIGFzICR0aGluZykK
CQkJCQlkbXAoJHRoaW5nKTsKCgkJCWlmIChAdHhwaW50ZXJmYWNlID09ICdwdWJsaWMnICYm
IGluX2FycmF5KCRwcm9kdWN0aW9uX3N0YXR1cywgYXJyYXkoJ2RlYnVnJywgJ3Rlc3Rpbmcn
KSkpCgkJCQlmb3JlYWNoICgkYSBhcyAkdGhpbmcpCgkJCQkJZWNobyBjb21tZW50KGlzX3Nj
YWxhcigkdGhpbmcpID8gc3RydmFsKCR0aGluZykgOiB2YXJfZXhwb3J0KCR0aGluZywgdHJ1
ZSkpLG47CgkJfQoJfQp9CgpjbGFzcyBQZXJtYW5lbnRMaW5rc0J1aWxkVGFiVmlldyBleHRl
bmRzIEdCUEFkbWluVGFiVmlldwp7Cgl2YXIgJHBlcm1pc3Npb25zID0gJzEsMic7CglmdW5j
dGlvbiBwcmVsb2FkICgpIHsKCQlyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJHRoaXMsICdw
b3N0X3NhdmVfcGVybWxpbmsnKSwgJHRoaXMtPnBhcmVudC0+ZXZlbnQsIGdicF9zYXZlLCAx
KTsKCQlyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJHRoaXMsICdwb3N0X3NhdmVfcGVybWxp
bmsnKSwgJHRoaXMtPnBhcmVudC0+ZXZlbnQsIGdicF9wb3N0LCAxKTsKCX0KCglmdW5jdGlv
biBtYWluICgpIHsKCQlnbG9iYWwgJHByZWZzOwoJCWV4dHJhY3QoZ3BzYShhcnJheSgnc3Rl
cCcsIGdicF9pZCkpKTsKCgkJLy8gV2l0aCBoYXZlIGFuIElELCBlaXRoZXIgdGhlIHBlcm1s
aW5rIGhhcyBqdXN0IGJlZW4gc2F2ZWQgb3IgdGhlIHVzZXIgd2FudHMgdG8gZWRpdCBpdAoJ
CWlmICgkaWQpIHsKCQkJLy8gTmV3bHkgc2F2ZWQgb3IgYmVlbmluZyBlZGl0ZWQsIGVpdGhl
ciB3YXkgd2UncmUgZWRpdGluZyBhIHBlcm1saW5rCgkJCSRzdGVwID0gZ2JwX3NhdmU7CgoJ
CQkvLyBVc2UgdGhlIElEIHRvIGdyYWIgdGhlIHBlcm1saW5rIGRhdGEgKGNvbXBvbmVudHMg
JiBzZXR0aW5ncykKCQkJJHBlcm1saW5rID0gJHRoaXMtPnBhcmVudC0+Z2V0X3Blcm1saW5r
KCRpZCk7CgkJCSRjb21wb25lbnRzID0gJHRoaXMtPnBocEFycmF5VG9Kc0FycmF5KCdjb21w
b25lbnRzJywgJHBlcm1saW5rWydjb21wb25lbnRzJ10pOwoJCQkkc2V0dGluZ3MgPSAkcGVy
bWxpbmtbJ3NldHRpbmdzJ107CgkJfSBlbHNlIHsKCQkJLy8gQ3JlYXRpbmcgYSBuZXcgSUQg
YW5kIHBlcm1saW5rLgoJCQkkc3RlcCA9IGdicF9wb3N0OwoJCQkkaWQgPSB1bmlxaWQoJycp
OwoKCQkJLy8gU2V0IHRoZSBkZWZhdWx0IHNldCBvZiBjb21wb25lbnRzIGRlcGVuZGluZyBv
biB3aGV0aGVyIHRoZXJlIGlzIHBhcmVudCBwZXJtbGluawoJCQkkY29tcG9uZW50cyA9ICR0
aGlzLT5waHBBcnJheVRvSnNBcnJheSgnY29tcG9uZW50cycsIGFycmF5KAoJCQkJYXJyYXko
J3R5cGUnID0+ICdzZWN0aW9uJywgJ3ByZWZpeCcgPT4gJycsICdzdWZmaXgnID0+ICcnLCAn
cmVnZXgnID0+ICcnLCAndGV4dCcgPT4gJycpLAoJCQkJYXJyYXkoJ3R5cGUnID0+ICdjYXRl
Z29yeScsICdwcmVmaXgnID0+ICcnLCAnc3VmZml4JyA9PiAnJywgJ3JlZ2V4JyA9PiAnJywg
J3RleHQnID0+ICcnLCAnY2F0ZWdvcnknID0+ICcxJyksCgkJCQlhcnJheSgndHlwZScgPT4g
J3RpdGxlJywgJ3ByZWZpeCcgPT4gJycsICdzdWZmaXgnID0+ICcnLCAncmVnZXgnID0+ICcn
LCAndGV4dCcgPT4gJycpLAoJCQkpKTsKCgkJCSRzZXR0aW5ncyA9IGFycmF5KAoJCQkJJ3Bs
X25hbWUnID0+ICdVbnRpdGxlZCcsICdwbF9wcmVjZWRlbmNlJyA9PiAnMCcsCgkJCQknY29u
X3NlY3Rpb24nID0+ICcnLCAnY29uX2NhdGVnb3J5JyA9PiAnJywKCQkJCSdkZXNfc2VjdGlv
bicgPT4gJycsICdkZXNfY2F0ZWdvcnknID0+ICcnLCAnZGVzX3BhZ2UnID0+ICcnLAoJCQkJ
J2Rlc19wZXJtbGluaycgPT4gJycsICdkZXNfZmVlZCcgPT4gJycsICdkZXNfbG9jYXRpb24n
ID0+ICcnLAoJCQkpOwoJCX0KCgkJLy8gRXh0cmFjdCBzZXR0aW5ncyAtIHRoaXMgd2lsbCBi
ZSB1c2VmdWwgd2hlbiBjcmVhdGluZyB0aGUgdXNlciBpbnRlcmZhY2UKCQlleHRyYWN0KCRz
ZXR0aW5ncyk7CgoJCS8vIFBIUCAmIEphdmFzY3JpcHQgY29uc3RhbnRzOwoJCSRzZXBhcmF0
b3IgPSBnYnBfc2VwYXJhdG9yOwoJCSRjb21wb25lbnRzX2RpdiA9ICdwZXJtbGlua19jb21w
b25lbnRzX3VpJzsKCQkkY29tcG9uZW50c19mb3JtID0gJ3Blcm1saW5rX2NvbXBvbmVudHMn
OwoJCSRzZXR0aW5nc19mb3JtID0gJ3Blcm1saW5rX3NldHRpbmdzJzsKCQkkc2hvd19wcmVm
aXggPSAkdGhpcy0+cHJlZignc2hvd19wcmVmaXgnKTsKCQkkc2hvd19zdWZmaXggPSAkdGhp
cy0+cHJlZignc2hvd19zdWZmaXgnKTsKCgkJLy8gQSBsaXR0bGUgY3JlZGl0IGhlcmUgYW5k
IHRoZXJlIGRvZXNuJ3QgaHVydAoJCSRvdXRbXSA9ICI8IS0tIHskdGhpcy0+cGFyZW50LT5w
bHVnaW5fbmFtZX0gYnkgR3JhZW1lIFBvcnRlb3VzIC0tPiI7CgoJCS8vIFRoZSBKYXZhc2Ny
aXB0CiRvdXRbXSA9IDw8PEhUTUwKCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBs
YW5ndWFnZT0iamF2YXNjcmlwdCIgY2hhcnNldD0idXRmLTgiPgoJLy8gPCFbQ0RBVEFbCgoJ
Ly8gR2xvYmFsIHZhcmlhYmxlcwp2YXIgeyRjb21wb25lbnRzfS8vIGNvbXBvbmVudHMgYXJy
YXkgZm9yIGFsbCB0aGUgZGF0YQoKCXZhciBfY3VycmVudCA9IDA7IC8vIEluZGV4IG9mIHRo
ZSBjb21wb25lbnRzIGFycmF5LCBvZiB0aGUgY3VycmVudGx5IHNlbGVjdGVkIGNvbXBvbmVu
dAoJdmFyIGNfdmFscyA9IG5ldyBBcnJheSgndHlwZScsICdjdXN0b20nLCAnY2F0ZWdvcnkn
LCAnbmFtZScsICdwcmVmaXgnLCAnc3VmZml4JywgJ3JlZ2V4JywgJ3RleHQnKTsKCgl3aW5k
b3cub25sb2FkID0gZnVuY3Rpb24oKSB7CgkJY29tcG9uZW50X3JlZnJlc2hfYWxsKCk7CgkJ
Y29tcG9uZW50X3N3aXRjaChjb21wb25lbnQoX2N1cnJlbnQpKTsKCX0KCglmdW5jdGlvbiBj
b21wb25lbnRfYWRkICgpIHsKCQkvLyBDcmVhdGUgZGF0YSBzZXQKCQl2YXIgZGF0YSA9IG5l
dyBBcnJheSgpOwoJCWZvciAoa2V5IGluIGNfdmFscykgewoJCQlkYXRhW2NfdmFsc1trZXld
XSA9ICcnOwoJCX0KCgkJLy8gQWRkIGRhdGEKCQljb21wb25lbnRzLnB1c2goZGF0YSk7CgoJ
CS8vIFJlc2V0IGNvbXBvbmVudCB0eXBlIGxpc3QKCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9y
bX0nKS50eXBlLnZhbHVlID0gJyc7CgoJCS8vIFN3aXRjaCB0byB0aGUgbmV3IGNvbXBvbmVu
dAoJCV9jdXJyZW50ID0gY29tcG9uZW50cy5sZW5ndGggLSAxOwoKCQkvLyBSZWZyZXNoIFVJ
CgkJY29tcG9uZW50X3JlZnJlc2hfYWxsKCk7CgkJY29tcG9uZW50X3VwZGF0ZSgpOwoJfQoK
CWZ1bmN0aW9uIGNvbXBvbmVudF9yZWZyZXNoIChlbGVtZW50KSB7CgkJdmFyIGMgPSBjb21w
b25lbnRzW2VsZW1lbnQuaWRdOwoKCQkvLyBDU1MKCQlpZiAoX2N1cnJlbnQgPT0gZWxlbWVu
dC5pZCkKCQkJZWxlbWVudC5zdHlsZVsnYmFja2dyb3VuZENvbG9yJ10gPSAncmdiKDI0OSwg
MjA2LCA3MyknOwoJCWVsc2UKCQkJZWxlbWVudC5zdHlsZVsnYmFja2dyb3VuZENvbG9yJ10g
PSAncmdiKDI1NSwgMjU0LCAyMTEpJzsKCQllbGVtZW50LnN0eWxlWydjb2xvciddID0gJ3Jn
YigwLCAwLCAwKSc7CgkJZWxlbWVudC5zdHlsZVsnZm9udEZhbWlseSddID0gJ0FyaWFsJzsK
CQllbGVtZW50LnN0eWxlWydmb250V2VpZ2h0J10gPSAnYm9sZCc7CgkJZWxlbWVudC5zdHls
ZVsndmVydGljYWxBbGlnbiddID0gJ21pZGRsZSc7CgkJZWxlbWVudC5zdHlsZVsndGV4dEFs
aWduJ10gPSAnY2VudGVyJzsKCQllbGVtZW50LnN0eWxlWydsaW5lSGVpZ2h0J10gPSAnMS41
ZW0nOwoJCWVsZW1lbnQuc3R5bGVbJ2hlaWdodCddID0gJzEuNWVtJzsKCQllbGVtZW50LnN0
eWxlWydwYWRkaW5nJ10gPSAnMCA1cHgnOwoJCWVsZW1lbnQuc3R5bGVbJ21hcmdpblJpZ2h0
J10gPSAnNXB4JzsKCQllbGVtZW50LnN0eWxlWydjc3NGbG9hdCddID0gJ2xlZnQnOwoJCWVs
ZW1lbnQuc3R5bGVbJ2Rpc3BsYXknXSA9ICdpbmxpbmUnOwoKCQkvLyBSZW1vdmUgYWxsIGNo
aWxkIG5vZGVzCgkJd2hpbGUgKGVsZW1lbnQuaGFzQ2hpbGROb2RlcygpKSB7IGVsZW1lbnQu
cmVtb3ZlQ2hpbGQoZWxlbWVudC5maXJzdENoaWxkKTsgfQoKCQkvLyBDcmVhdGUgdGhlIHZp
c2libGUgc3RyaW5nIHJlcHJlc2VudGluZyB0aGlzIGNvbXBvbmVudAoJCXN3aXRjaCAoY1sn
dHlwZSddKSB7CgkJCWNhc2UgJycgOgoJCQkJc3RyaW5nID0gJy8nOwoJCQkJYnJlYWs7CgkJ
CWNhc2UgJ3JlZ2V4JyA6CgkJCWNhc2UgJ3RleHQnIDoKCQkJCXN0cmluZyA9IGNbY1sndHlw
ZSddXSArICcgLyc7CgkJCQlicmVhazsKCQkJY2FzZSAnZGF0ZScgOgoJCQkJc3RyaW5nID0g
Y1sndHlwZSddICsgJyAvJzsKCQkJCWJyZWFrOwoJCQljYXNlICdjdXN0b20nIDoKCQkJCXN0
cmluZyA9IGNbJ3ByZWZpeCddICsgJ2N1c3RvbV8nICsgY1snY3VzdG9tJ10gKyBjWydzdWZm
aXgnXSArICcgLyc7CgkJCQlicmVhazsKCQkJZGVmYXVsdCA6CgkJCQlzdHJpbmcgPSBjWydw
cmVmaXgnXSArIGNbJ3R5cGUnXSArIGNbJ3N1ZmZpeCddICsgJyAvJzsKCQkJYnJlYWs7CgkJ
fQoKCQkvLyBTZXQgdGhlIHZpc2libGUgc3RyaW5nCgkJZWxlbWVudC5hcHBlbmRDaGlsZChk
b2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzdHJpbmcpKTsKCgkJcmV0dXJuIGVsZW1lbnQ7Cgl9
CgoJZnVuY3Rpb24gY29tcG9uZW50X3JlZnJlc2hfYWxsICgpIHsKCQkvLyBSZW1vdmUgYWxs
IGNoaWxkIG5vZGVzCgkJd2hpbGUgKHBlcm1saW5rX2RpdigpLmhhc0NoaWxkTm9kZXMoKSkg
eyBwZXJtbGlua19kaXYoKS5yZW1vdmVDaGlsZChwZXJtbGlua19kaXYoKS5maXJzdENoaWxk
KTsgfQoKCQlmb3IgKHZhciBpID0gMDsgaSA8IGNvbXBvbmVudHMubGVuZ3RoOyBpKyspIHsK
CQkJdmFyIGMgPSBjb21wb25lbnRzW2ldOwoKCQkJLy8gQ3JlYXRlIHRoZSBuZXcgY29tcG9u
ZW50CgkJCXZhciBuZXdfY29tcG9uZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2
Jyk7CgoJCQkvLyBTZXQgdGhlIGlkIGludGVyZ2VyIGZvciB0aGlzIGNvbXBvbmVudAoJCQlu
ZXdfY29tcG9uZW50LmlkID0gaTsKCgkJCS8vIEphdmFzY3JpcHQsIG9ubW91c2V1cCBzZXR0
aW5nCgkJCW5ld19jb21wb25lbnQuc2V0QXR0cmlidXRlKCdvbm1vdXNlZG93bicsICdjb21w
b25lbnRfc3dpdGNoKHRoaXMpOycpOwoJCQluZXdfY29tcG9uZW50Lm9ubW91c2Vkb3duID0g
ZnVuY3Rpb24oKSB7IGNvbXBvbmVudF9zd2l0Y2godGhpcyk7IH07CgoJCQkvLyBSZWZyZXNo
IHRoZSBsb29rIG9mIHRoZSBjb21wb25lbnQKCQkJbmV3X2NvbXBvbmVudCA9IGNvbXBvbmVu
dF9yZWZyZXNoKG5ld19jb21wb25lbnQpOwoKCQkJLy8gQW5kIGFkZCB0aGUgbmV3IGNvbXBv
bmVudCB0byB0aGUgdWkKCQkJcGVybWxpbmtfZGl2KCkuYXBwZW5kQ2hpbGQobmV3X2NvbXBv
bmVudCk7CgkJfQoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVudF9yZW1vdmUgKCkgewoJCWlmIChj
b21wb25lbnRzLmxlbmd0aCA+IDEpIHsKCQkJY29tcG9uZW50cy5zcGxpY2UoX2N1cnJlbnQs
IDEpOwoKCQkJaWYgKF9jdXJyZW50ID49IGNvbXBvbmVudHMubGVuZ3RoKQoJCQkJX2N1cnJl
bnQgPSBjb21wb25lbnRzLmxlbmd0aCAtIDE7CgoJCQljb21wb25lbnRfcmVmcmVzaF9hbGwo
KTsKCQl9Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3N3aXRjaCAoZWxlbWVudCkgewoJCS8v
IFVwZGF0ZSBjdXJyZW50IGluZGV4CgkJX2N1cnJlbnQgPSBlbGVtZW50LmlkOwoKCQkvLyBS
ZWZyZXNoIFVJCgkJY29tcG9uZW50X3JlZnJlc2hfYWxsKCk7CgoJCS8vIFNldCBmb3JtIGlu
cHV0IHZhbHVlcwoJCXZhciBjID0gY29tcG9uZW50c1tfY3VycmVudF07CgkJZm9yIChrZXkg
aW4gY192YWxzKSB7CgkJCXZhciBrID0gY192YWxzW2tleV07CgkJCXZhciBlID0gZm9ybSgn
eyRjb21wb25lbnRzX2Zvcm19JykuZWxlbWVudHMubmFtZWRJdGVtKGspOwoKCQkJaWYgKGNb
a10pIGUudmFsdWUgPSBjW2tdOwoJCQllbHNlIGUudmFsdWUgPSAnJzsKCQl9CgoJCS8vIEhp
ZGUgdW5uZWVkZWQgZm9ybSBpbnB1dHMKCQljb21wb25lbnRfdXBkYXRlKCk7Cgl9CgoJZnVu
Y3Rpb24gY29tcG9uZW50X3VwZGF0ZSAoZWxlbWVudCkgewoJCS8vIFN0b3JlIHRoZSBkYXRh
IGluIGZvcm0gaW5wdXRzLCBhbmQgaGlkZSBhbGwgZm9ybSBpbnB1dHMKCQl2YXIgYyA9IG5l
dyBBcnJheSgpCgkJZm9yIChrZXkgaW4gY192YWxzKSB7CgkJCXZhciBrID0gY192YWxzW2tl
eV07CgkJCXZhciBlID0gZm9ybSgneyRjb21wb25lbnRzX2Zvcm19JykuZWxlbWVudHMubmFt
ZWRJdGVtKGspOwoKCQkJY1trXSA9IGUudmFsdWU7CgoJCQllLnBhcmVudE5vZGUuc3R5bGVb
J2Rpc3BsYXknXSA9ICdub25lJzsKCQl9CgoJCS8vIFJlc2hvdyB0eXBlIG9wdGlvbiBsaXN0
CgkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19JykudHlwZS5wYXJlbnROb2RlLnN0eWxlWydk
aXNwbGF5J10gPSAnJzsKCgkJLy8gU2V0IG90aGVyIGZvcm0gaW5wdXRzIHRvIHRoZSBjb3Jy
ZWN0IHZpc2liaWxpdHkgc3RhdGUsIGRlcGVuZGVudCBvbiB0eXBlCgkJc3dpdGNoIChjWyd0
eXBlJ10pIHsKCQkJY2FzZSAnJyA6CgkJCWNhc2UgJ2RhdGUnIDogYnJlYWs7CgkJCWNhc2Ug
J3JlZ2V4JyA6CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5uYW1lLnBhcmVudE5v
ZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19
JykucmVnZXgucGFyZW50Tm9kZS5zdHlsZVsnZGlzcGxheSddID0gJyc7CgkJCWJyZWFrOwoJ
CQljYXNlICd0ZXh0JyA6CgkJCQlmb3JtKCd7JGNvbXBvbmVudHNfZm9ybX0nKS5uYW1lLnBh
cmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQkJZm9ybSgneyRjb21wb25lbnRz
X2Zvcm19JykudGV4dC5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJYnJl
YWs7CgkJCWNhc2UgJ2N1c3RvbScgOgoJCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19Jyku
Y3VzdG9tLnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQkJZGlzcGxheV9m
aXhlcygpOwoJCQlicmVhazsKCQkJY2FzZSAnY2F0ZWdvcnknIDoKCQkJCWZvcm0oJ3skY29t
cG9uZW50c19mb3JtfScpLmNhdGVnb3J5LnBhcmVudE5vZGUuc3R5bGVbJ2Rpc3BsYXknXSA9
ICcnOwoJCQkJZGlzcGxheV9maXhlcygpOwoJCQlicmVhazsKCQkJZGVmYXVsdCA6CgkJCQlk
aXNwbGF5X2ZpeGVzKCk7CgkJCWJyZWFrOwoJCX0KCgkJLy8gU2F2ZSBkYXRhCgkJY29tcG9u
ZW50c1tfY3VycmVudF0gPSBjOwoKCQkvLyBSZWZyZXNoIGNvbXBvbmVudCB0byByZWZsZWN0
IG5ldyBkYXRhCgkJY29tcG9uZW50X3JlZnJlc2goY29tcG9uZW50KF9jdXJyZW50KSk7CgoJ
CS8vIFJlLWZvY3VzIHRoZSBhY3RpdmUgZm9ybSBpbnB1dAoJCWlmIChlbGVtZW50KQoJCQll
bGVtZW50LmZvY3VzKCk7Cgl9CgoJZnVuY3Rpb24gZGlzcGxheV9maXhlcyAoKSB7CgkJaWYg
KCd7JHNob3dfcHJlZml4fScpCgkJCWZvcm0oJ3skY29tcG9uZW50c19mb3JtfScpLnByZWZp
eC5wYXJlbnROb2RlLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQlpZiAoJ3skc2hvd19zdWZm
aXh9JykKCQkJZm9ybSgneyRjb21wb25lbnRzX2Zvcm19Jykuc3VmZml4LnBhcmVudE5vZGUu
c3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJfQoKCWZ1bmN0aW9uIGNvbXBvbmVudF9sZWZ0ICgp
IHsKCQlpZiAoY29tcG9uZW50cy5sZW5ndGggPiAxICYmIF9jdXJyZW50ID4gMCkgewoJCQkv
LyBTdG9yZSBjdXJyZW50IGNvbXBvbmVudAoJCQl2YXIgYyA9IGNvbXBvbmVudHNbX2N1cnJl
bnRdOwoKCQkJLy8gUmVtb3ZlIGN1cnJlbnQgY29tcG9uZW50CgkJCWNvbXBvbmVudHMuc3Bs
aWNlKF9jdXJyZW50LCAxKTsKCgkJCS8vIFVwZGF0ZSBjdXJyZW50IGluZGV4CgkJCV9jdXJy
ZW50LS07CgoJCQkvLyBSZS1hZGQgY3VycmVudCBjb21wb25lbnQKCQkJY29tcG9uZW50cy5z
cGxpY2UoX2N1cnJlbnQsIDAsIGMpOwoKCQkJLy8gUmVmcmVzaCBVSQoJCQljb21wb25lbnRf
cmVmcmVzaF9hbGwoKTsKCQl9Cgl9CgoJZnVuY3Rpb24gY29tcG9uZW50X3JpZ2h0ICgpIHsK
CQlpZiAoX2N1cnJlbnQgPCBjb21wb25lbnRzLmxlbmd0aCAtIDEpIHsKCQkJLy8gU3RvcmUg
Y3VycmVudCBjb21wb25lbnQKCQkJdmFyIGMgPSBjb21wb25lbnRzW19jdXJyZW50XTsKCgkJ
CS8vIFJlbW92ZSBjdXJyZW50IGNvbXBvbmVudAoJCQljb21wb25lbnRzLnNwbGljZShfY3Vy
cmVudCwgMSk7CgoJCQkvLyBVcGRhdGUgY3VycmVudCBpbmRleAoJCQlfY3VycmVudCsrOwoK
CQkJLy8gUmUtYWRkIGN1cnJlbnQgY29tcG9uZW50CgkJCWNvbXBvbmVudHMuc3BsaWNlKF9j
dXJyZW50LCAwLCBjKTsKCgkJCS8vIFJlZnJlc2ggVUkKCQkJY29tcG9uZW50X3JlZnJlc2hf
YWxsKCk7CgkJfQoJfQoKCWZ1bmN0aW9uIHNhdmUgKGZvcm0pIHsKCQl2YXIgYyA9ICcnOyB2
YXIgaXNfcGVybWxpbmsgPSBmYWxzZTsgdmFyIGhhc19wYWdlX29yX3NlYXJjaCA9IGZhbHNl
OwoJCWZvciAodmFyIGkgPSAwOyBpIDwgY29tcG9uZW50cy5sZW5ndGg7IGkrKykgewoJCQlp
ZiAoY29tcG9uZW50c1tpXVsndHlwZSddID09ICd0aXRsZScgfHwgY29tcG9uZW50c1tpXVsn
dHlwZSddID09ICdpZCcpCgkJCQlpc19wZXJtbGluayA9IHRydWU7CgkJCWlmIChjb21wb25l
bnRzW2ldWyd0eXBlJ10gPT0gJ3BhZ2UnIHx8IGNvbXBvbmVudHNbaV1bJ3R5cGUnXSA9PSAn
ZmVlZCcgfHwgY29tcG9uZW50c1tpXVsndHlwZSddID09ICdzZWFyY2gnKQoJCQkJaGFzX3Bh
Z2VfZmVlZF9zZWFyY2ggPSB0cnVlOwoJCQljID0gYyArIGpzQXJyYXlUb1BocEFycmF5KGNv
bXBvbmVudHNbaV0pICsgJ3skc2VwYXJhdG9yfSc7CgkJfQoKCQlpZiAoaXNfcGVybWxpbmsg
JiYgaGFzX3BhZ2Vfb3Jfc2VhcmNoKQoJCQlhbGVydCgiWW91ciBwZXJtYW5lbnQgbGluayBj
YW4ndCBjb250YWluIGVpdGhlciBhICdwYWdlJywgJ2ZlZWQnIG9yIGEgJ3NlYXJjaCcgY29t
cG9uZW50IHdpdGggJ3RpdGxlJyBvciAnaWQnIGNvbXBvbmVudHMuIik7CgoJCWVsc2UgaWYg
KGlzX3Blcm1saW5rICYmIChmb3JtLnBsX25hbWUudmFsdWUgPT0gJycgfHwgZm9ybS5wbF9u
YW1lLnZhbHVlID09ICdVbnRpdGxlZCcpKSB7CgkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlk
KCdzZXR0aW5ncycpLnN0eWxlWydkaXNwbGF5J10gPSAnJzsKCQkJZm9ybS5wbF9uYW1lLnN0
eWxlWydib3JkZXInXSA9ICczcHggc29saWQgcmdiKDIyMSwgMCwgMCknOwoJCQlmb3JtLnBs
X3ByZWNlZGVuY2Uuc3R5bGVbJ2JvcmRlciddID0gJyc7CgkJCWFsZXJ0KCdQbGVhc2UgZW50
ZXIgYSBuYW1lIGZvciB0aGlzIHBlcm1hbmVudCBsaW5rIHJ1bGUuJyk7CgkJfSBlbHNlIGlm
IChmb3JtLnBsX3ByZWNlZGVuY2UudmFsdWUgPT0gJycpIHsKCQkJZG9jdW1lbnQuZ2V0RWxl
bWVudEJ5SWQoJ3NldHRpbmdzJykuc3R5bGVbJ2Rpc3BsYXknXSA9ICcnOwoJCQlmb3JtLnBs
X3ByZWNlZGVuY2Uuc3R5bGVbJ2JvcmRlciddID0gJzNweCBzb2xpZCByZ2IoMjIxLCAwLCAw
KSc7CgkJCWZvcm0ucGxfbmFtZS5zdHlsZVsnYm9yZGVyJ10gPSAnJzsKCQkJYWxlcnQoJ1Bs
ZWFzZSBlbnRlciBhIHByZWNlZGVuY2UgdmFsdWUgZm9yIHRoaXMgcGVybWFuZW50IGxpbmsg
cnVsZS4nKTsKCQl9IGVsc2UgewoJCQlmb3JtLmNvbXBvbmVudHMudmFsdWUgPSBjOwoJCQlp
ZiAocGVybWxpbmtfZGl2KCkudGV4dENvbnRlbnQpCgkJCQlmb3JtLnBsX3ByZXZpZXcudmFs
dWUgPSBwZXJtbGlua19kaXYoKS50ZXh0Q29udGVudDsKCQkJZWxzZSBpZiAocGVybWxpbmtf
ZGl2KCkuaW5uZXJUZXh0KQoJCQkJZm9ybS5wbF9wcmV2aWV3LnZhbHVlID0gcGVybWxpbmtf
ZGl2KCkuaW5uZXJUZXh0OwoJCQlyZXR1cm4gdHJ1ZTsKCQl9CgoJCXJldHVybiBmYWxzZTsK
CX0KCglmdW5jdGlvbiBqc0FycmF5VG9QaHBBcnJheSAoYXJyYXkpIHsKCQkvLyBodHRwOi8v
ZmFybS50dWNvd3MuY29tL2Jsb2cvX2FyY2hpdmVzLzIwMDUvNS8zMC84OTU5MDEuaHRtbAoJ
CXZhciBhcnJheV9waHAgPSAiIjsKCQl2YXIgdG90YWwgPSAwOwoJCWZvciAodmFyIGtleSBp
biBhcnJheSkgewoJCQkrKyB0b3RhbDsKCQkJYXJyYXlfcGhwID0gYXJyYXlfcGhwICsgInM6
IiArCgkJCQlTdHJpbmcoa2V5KS5sZW5ndGggKyAiOlwiIiArIFN0cmluZyhrZXkpICsgIlwi
O3M6IiArCgkJCQlTdHJpbmcoYXJyYXlba2V5XSkubGVuZ3RoICsgIjpcIiIgKyBTdHJpbmco
YXJyYXlba2V5XSkgKyAiXCI7IjsKCQl9CgkJYXJyYXlfcGhwID0gImE6IiArIHRvdGFsICsg
Ijp7IiArIGFycmF5X3BocCArICJ9IjsKCQlyZXR1cm4gYXJyYXlfcGhwOwoJfQoKCWZ1bmN0
aW9uIHBlcm1saW5rX2RpdiAoKSB7CgkJLy8gUmV0dXJuIHRoZSBwZXJtbGluayBydWxlIGVs
ZW1lbnQKCQlyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3skY29tcG9uZW50c19k
aXZ9Jyk7Cgl9CgoJZnVuY3Rpb24gZm9ybSAobmFtZSkgewoJCWlmICghbmFtZSkKCQkJbmFt
ZSA9ICd7JGNvbXBvbmVudHNfZm9ybX0nCgkJLy8gUmV0dXJuIHRoZSBmb3JtIGVsZW1lbnQg
d2l0aCBuYW1lCgkJcmV0dXJuIGRvY3VtZW50LmZvcm1zLm5hbWVkSXRlbShuYW1lKTsKCX0K
CglmdW5jdGlvbiBjb21wb25lbnQgKGluZGV4KSB7CgkJLy8gUmV0dXJuIGNvbXBvbmVudCB3
aXRoIGluZGV4CgkJcmV0dXJuIHBlcm1saW5rX2RpdigpLmNoaWxkTm9kZXNbaW5kZXhdOwoJ
fQoKCS8vIF1dPgoJPC9zY3JpcHQ+CkhUTUw7CgoJCS8vIC0tLSBSdWxlIC0tLSAvLwoKCQkk
b3V0W10gPSBoZWQoJ1Blcm1hbmVudCBsaW5rIHJ1bGUnLCAyKTsKCQkkb3V0W10gPSAnPGRp
diBpZD0iJy4kY29tcG9uZW50c19kaXYuJyIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IHJn
YigyMzAsIDIzMCwgMjMwKTsgd2lkdGg6IGF1dG87IGhlaWdodDogMS41ZW07IG1hcmdpbjog
MTBweCAwOyBwYWRkaW5nOiA1cHg7Ij48L2Rpdj4nOwoJCSRvdXRbXSA9IGdyYWYKCQkJKAoJ
CQkkdGhpcy0+ZklucHV0KCdidXR0b24nLCAnY29tcG9uZW50X2FkZCcsICdBZGQgY29tcG9u
ZW50JywgYXJyYXkoJ2NsaWNrJyA9PiAnY29tcG9uZW50X2FkZCgpOycpKS5uLgoJCQkkdGhp
cy0+ZklucHV0KCdidXR0b24nLCAnY29tcG9uZW50X3JlbW92ZScsICdSZW1vdmUgY29tcG9u
ZW50JywgYXJyYXkoJ2NsaWNrJyA9PiAnY29tcG9uZW50X3JlbW92ZSgpOycpKS5uLgoJCQkk
dGhpcy0+ZklucHV0KCdidXR0b24nLCAnY29tcG9uZW50X2xlZnQnLCAnTW92ZSBsZWZ0Jywg
YXJyYXkoJ2NsaWNrJyA9PiAnY29tcG9uZW50X2xlZnQoKTsnKSkubi4KCQkJJHRoaXMtPmZJ
bnB1dCgnYnV0dG9uJywgJ2NvbXBvbmVudF9yaWdodCcsICdNb3ZlIHJpZ2h0JywgYXJyYXko
J2NsaWNrJyA9PiAnY29tcG9uZW50X3JpZ2h0KCk7JykpCgkJCSk7CgoJCS8vIC0tLSBDb21w
b25lbnQgZm9ybSAtLS0gLy8KCgkJJG91dFtdID0gJzxmb3JtIGFjdGlvbj0iaW5kZXgucGhw
IiBuYW1lPSInLiRjb21wb25lbnRzX2Zvcm0uJyIgb25zdWJtaXQ9InJldHVybiBmYWxzZTsi
Pic7CgoJCS8vIC0tLSBDb21wb25lbnQgdHlwZSAtLS0gLy8KCgkJJGNvbXBvbmVudF90eXBl
cyA9IGFycmF5ICgKCQkJJ3NlY3Rpb24nID0+ICdTZWN0aW9uJywgJ2NhdGVnb3J5JyA9PiAn
Q2F0ZWdvcnknLAoJCQkndGl0bGUnID0+ICdUaXRsZScsICdpZCcgPT4gJ0lEJywKCQkJJ2Rh
dGUnID0+ICdEYXRlICh5eXl5L21tL2RkKScsICd5ZWFyJyA9PiAnWWVhcicsCgkJCSdtb250
aCcgPT4gJ01vbnRoJywgJ2RheScgPT4gJ0RheScsCgkJCSdhdXRob3InID0+ICdBdXRob3Ig
KFJlYWwgbmFtZSknLCAnbG9naW4nID0+ICdBdXRob3IgKExvZ2luKScsCgkJCSdjdXN0b20n
ID0+ICdDdXN0b20gRmllbGQnLCAncGFnZScgPT4gJ1BhZ2UgTnVtYmVyJywKCQkJJ2ZlZWQn
ID0+ICdGZWVkJywgJ3NlYXJjaCcgPT4gJ1NlYXJjaCByZXF1ZXN0JywKCQkJJ3RleHQnID0+
ICdQbGFpbiBUZXh0JywgJ3JlZ2V4JyA9PiAnUmVndWxhciBFeHByZXNzaW9uJwoJCSk7CgkJ
JG91dFtdID0gZ3JhZigkdGhpcy0+ZlNlbGVjdCgndHlwZScsICRjb21wb25lbnRfdHlwZXMs
ICcnLCAxLCAnQ29tcG9uZW50IHR5cGUnLCAnIG9uY2hhbmdlPSJjb21wb25lbnRfdXBkYXRl
KCk7IicpKTsKCgkJLy8gLS0tIENvbXBvbmVudCBkYXRhIC0tLSAvLwoKCQkvLyBHcmFiIHRo
ZSBjdXN0b20gZmllbGQgdGl0bGVzCgkJJGN1c3RvbV9maWVsZHMgPSBhcnJheSgpOwoJCWZv
ciAoJGkgPSAxOyAkaSA8PSAxMDsgJGkrKykgewoJCQlpZiAoJHYgPSAkcHJlZnNbImN1c3Rv
bV97JGl9X3NldCJdKQoJCQkJJGN1c3RvbV9maWVsZHNbJGldID0gJHY7CgkJfQoKCQkkb3V0
W10gPSBncmFmICgKCQkJJHRoaXMtPmZTZWxlY3QoJ2N1c3RvbScsICRjdXN0b21fZmllbGRz
LCAnJywgMCwgJ0N1c3RvbScsICcgb25jaGFuZ2U9ImNvbXBvbmVudF91cGRhdGUodGhpcyk7
IicpLm4uCgkJCSR0aGlzLT5mU2VsZWN0KCdjYXRlZ29yeScsIGFycmF5KCcxJyA9PiAnQ2F0
ZWdvcnkgMScsICcyJyA9PiAnQ2F0ZWdvcnkgMicpLCAnJywgMCwgJ1ByaW1hcnkgQ2F0ZWdv
cnknLCAnIG9uY2hhbmdlPSJjb21wb25lbnRfdXBkYXRlKHRoaXMpOyInKS5uLgoJCQkkdGhp
cy0+ZklucHV0KCd0ZXh0JywgJ25hbWUnLCAnJywgYXJyYXkoJ2tleXVwJyA9PiAnY29tcG9u
ZW50X3VwZGF0ZSh0aGlzKTsnKSwgJ05hbWUnKS5uLgoJCQkkdGhpcy0+ZklucHV0KCd0ZXh0
JywgJ3ByZWZpeCcsICcnLCBhcnJheSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRlKHRo
aXMpOycpLCAnUHJlZml4Jykubi4KCQkJJHRoaXMtPmZJbnB1dCgndGV4dCcsICdyZWdleCcs
ICcnLCBhcnJheSgna2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRlKHRoaXMpOycpLCAnUmVn
dWxhciBFeHByZXNzaW9uJykubi4KCQkJJHRoaXMtPmZJbnB1dCgndGV4dCcsICdzdWZmaXgn
LCAnJywgYXJyYXkoJ2tleXVwJyA9PiAnY29tcG9uZW50X3VwZGF0ZSh0aGlzKTsnKSwgJ1N1
ZmZpeCcpLm4uCgkJCSR0aGlzLT5mSW5wdXQoJ3RleHQnLCAndGV4dCcsICcnLCBhcnJheSgn
a2V5dXAnID0+ICdjb21wb25lbnRfdXBkYXRlKHRoaXMpOycpLCAnVGV4dCcpCgkJKTsKCQkk
aHIgPSAnPGhyIHN0eWxlPSJib3JkZXI6IDA7IGhlaWdodDogMXB4OyBiYWNrZ3JvdW5kLWNv
bG9yOiByZ2IoMjAwLCAyMDAsIDIwMCk7IGNvbG9yOiByZ2IoMjAwLCAyMDAsIDIwMCk7IG1h
cmdpbi1ib3R0b206IDEwcHg7IiAvPic7CgkJJG91dFtdID0gJGhyOwoJCSRvdXRbXSA9ICc8
L2Zvcm0+JzsKCgkJLy8gLS0tIFNldHRpbmdzIGZvcm0gLS0tIC8vCgoJCSRvdXRbXSA9ICc8
Zm9ybSBhY3Rpb249ImluZGV4LnBocCIgbWV0aG9kPSJwb3N0IiBuYW1lPSInLiRzZXR0aW5n
c19mb3JtLiciIG9uc3VibWl0PSJyZXR1cm4gc2F2ZSh0aGlzKTsiPic7CgoJCS8vIC0tLSBT
ZXR0aW5ncyAtLS0gLy8KCgkJJG91dFtdID0gaGVkKCc8YSBocmVmPSIjIiBvbmNsaWNrPSJ0
b2dnbGVEaXNwbGF5KFwnc2V0dGluZ3NcJyk7IHJldHVybiBmYWxzZTsiPlNldHRpbmdzPC9h
PicsIDIpOwoJCSRvdXRbXSA9ICc8ZGl2IGlkPSJzZXR0aW5ncyI+JzsKCQkkb3V0W10gPSBn
cmFmKCR0aGlzLT5mSW5wdXQoJ3RleHQnLCAncGxfbmFtZScsICRwbF9uYW1lLCBOVUxMLCAn
TmFtZScpKTsKCQkkb3V0W10gPSBncmFmKCR0aGlzLT5mSW5wdXQoJ3RleHQnLCAncGxfcHJl
Y2VkZW5jZScsICRwbF9wcmVjZWRlbmNlLCBOVUxMLCAnUHJlY2VkZW5jZScpKTsKCQkkb3V0
W10gPSAnPC9kaXY+JzsKCQkkb3V0W10gPSAkaHI7CgoJCS8vIC0tLSBDb25kaXRpb25zIC0t
LSAvLwoKCQkkb3V0W10gPSBoZWQoJzxhIGhyZWY9IiMiIG9uY2xpY2s9InRvZ2dsZURpc3Bs
YXkoXCdjb25kaXRpb25zXCcpOyByZXR1cm4gZmFsc2U7Ij5Db25kaXRpb25zPC9hPicsIDIp
OwoJCSRvdXRbXSA9ICc8ZGl2IGlkPSJjb25kaXRpb25zIiBzdHlsZT0iZGlzcGxheTpub25l
Ij4nOwoJCSRvdXRbXSA9IGdyYWYoc3Ryb25nKCdPbmx5IHVzZSB0aGlzIHBlcm1hbmVudCBs
aW5rIGlmIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcHBseS4uLicpKTsKCgkJLy8gR2Vu
ZXJhdGUgYSBzZWN0aW9ucyBhcnJheSAobmFtZT0+dGl0bGUpCgkJJHNlY3Rpb25zID0gYXJy
YXkoKTsKCQkkcnMgPSBzYWZlX3Jvd3MoJ25hbWUsIHRpdGxlJywgJ3R4cF9zZWN0aW9uJywg
Im5hbWUgIT0gJ2RlZmF1bHQnIG9yZGVyIGJ5IG5hbWUiKTsKCQlmb3JlYWNoICgkcnMgYXMg
JHNlYykgewoJCQkkc2VjdGlvbnNbJHNlY1snbmFtZSddXSA9ICRzZWNbJ3RpdGxlJ107CgkJ
fQoKCQkvLyBHZW5lcmF0ZSBhIGNhdGVnb3JpZXMgYXJyYXkgKG5hbWU9PnRpdGxlKQoJCSRj
YXRlZ29yaWVzID0gYXJyYXkoKTsKCQkkcnMgPSBzYWZlX3Jvd3MoJ25hbWUsIHRpdGxlJywg
J3R4cF9jYXRlZ29yeScsICJ0eXBlID0gJ2FydGljbGUnIGFuZCBuYW1lICE9ICdyb290JyBv
cmRlciBieSBuYW1lIik7CgkJZm9yZWFjaCAoJHJzIGFzICRzZWMpIHsKCQkJJGNhdGVnb3Jp
ZXNbJHNlY1snbmFtZSddXSA9ICRzZWNbJ3RpdGxlJ107CgkJfQoKCQkkb3V0W10gPSBncmFm
ICgKCQkJJHRoaXMtPmZTZWxlY3QoJ2Nvbl9zZWN0aW9uJywgJHNlY3Rpb25zLCAkY29uX3Nl
Y3Rpb24sIDEsICdXaXRoaW4gc2VjdGlvbicpLm4uCgkJCSR0aGlzLT5mU2VsZWN0KCdjb25f
Y2F0ZWdvcnknLCAkY2F0ZWdvcmllcywgJGNvbl9jYXRlZ29yeSwgMSwgJ1dpdGhpbiBjYXRl
Z29yeScpCgkJKTsKCQkkb3V0W10gPSAnPC9kaXY+JzsKCQkkb3V0W10gPSAkaHI7CgoJCS8v
IC0tLSBEZXN0aW5hdGlvbiAtLS0gLy8KCgkJJG91dFtdID0gaGVkKCc8YSBocmVmPSIjIiBv
bmNsaWNrPSJ0b2dnbGVEaXNwbGF5KFwnZGVzdGluYXRpb25cJyk7IHJldHVybiBmYWxzZTsi
PkRlc3RpbmF0aW9uPC9hPicsIDIpOwoJCSRvdXRbXSA9ICc8ZGl2IGlkPSJkZXN0aW5hdGlv
biIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+JzsKCQkkb3V0W10gPSBncmFmKHN0cm9uZygnRm9y
d2FyZCB0aGlzIHBlcm1hbmVudCBsaW5rIHRvLi4uJykpOwoJCSRvdXRbXSA9IGdyYWYgKAoJ
CQkkdGhpcy0+ZlNlbGVjdCgnZGVzX3NlY3Rpb24nLCAkc2VjdGlvbnMsICRkZXNfc2VjdGlv
biwgMSwgJ1NlY3Rpb24nKS5uLgoJCQkkdGhpcy0+ZlNlbGVjdCgnZGVzX2NhdGVnb3J5Jywg
JGNhdGVnb3JpZXMsICRkZXNfY2F0ZWdvcnksIDEsICdDYXRlZ29yeScpCgkJKTsKCQkkb3V0
W10gPSBncmFmKCR0aGlzLT5mU2VsZWN0KCdkZXNfcGFnZScsIHNhZmVfY29sdW1uKCduYW1l
JywgJ3R4cF9wYWdlJywgIjEiKSwgQCRkZXNfcGFnZSwgMSwgJ1BhZ2UnKSk7CgkJJG91dFtd
ID0gZ3JhZigkdGhpcy0+ZkJveGVzKCdkZXNfZmVlZCcsIGFycmF5KCdyc3MnLCAnYXRvbScs
ICcnKSwgJGRlc19mZWVkLCBOVUxMLCBhcnJheSgnUlNTIGZlZWQnLCAnQXRvbSBmZWVkJywg
J05laXRoZXInKSkpOwoJCSRvdXRbXSA9IGdyYWYoc3Ryb25nKCdSZWRpcmVjdCB0aGlzIHBl
cm1hbmVudCBsaW5rIHRvLi4uJykpOwoJCS8vIEdlbmVyYXRlIGEgcGVybWxpbmtzIGFycmF5
CgkJJHBlcm1saW5rcyA9ICR0aGlzLT5wYXJlbnQtPmdldF9hbGxfcGVybWxpbmtzKDEpOwoJ
CWZvcmVhY2ggKCRwZXJtbGlua3MgYXMgJGtleSA9PiAkcGwpIHsKCQkJJHBlcm1saW5rc1sk
a2V5XSA9ICRwbFsnc2V0dGluZ3MnXVsncGxfbmFtZSddOwoJCX0KCQl1bnNldCgkcGVybWxp
bmtzWyRpZF0pOwoJCSRvdXRbXSA9IGdyYWYoJHRoaXMtPmZTZWxlY3QoJ2Rlc19wZXJtbGlu
aycsICRwZXJtbGlua3MsIEAkZGVzX3Blcm1saW5rLCAxLCAnUGVybWFuZW50IGxpbmsnKSk7
CgkJJG91dFtdID0gZ3JhZigkdGhpcy0+ZklucHV0KCd0ZXh0JywgJ2Rlc19sb2NhdGlvbics
ICRkZXNfbG9jYXRpb24sIE5VTEwsICdIVFRQIGxvY2F0aW9uJykpOwoJCSRvdXRbXSA9ICc8
L2Rpdj4nOwoJCSRvdXRbXSA9ICRocjsKCgkJLy8gU2F2ZSBidXR0b24KCQkkb3V0W10gPSBm
SW5wdXQoJ3N1Ym1pdCcsICcnLCAnU2F2ZSBwZXJtYW5lbnQgbGluaycpOwoKCQkvLyBFeHRy
YSBmb3JtIGlucHV0cyB3aGljaCBnZXQgZmlsbGVkIG9uIHN1Ym1pdAoJCSRvdXRbXSA9IGhJ
bnB1dCgnY29tcG9uZW50cycsICcnKTsKCQkkb3V0W10gPSBoSW5wdXQoJ3BsX3ByZXZpZXcn
LCAnJyk7CgkJLy8gRXZlbnQgYW5kIHRhYiBmb3JtIGlucHV0cwoJCSRvdXRbXSA9ICR0aGlz
LT5mb3JtX2lucHV0cygpOwoJCS8vIFN0ZXAgYW5kIElEIGZvcm0gaW5wdXRzCgkJJG91dFtd
ID0gc0lucHV0KCRzdGVwKTsKCQkkb3V0W10gPSBoSW5wdXQoZ2JwX2lkLCAkaWQpOwoKCQkk
b3V0W10gPSAnPC9mb3JtPic7CgoJCS8vIExldHMgZWNobyBldmVyeXRoaW5nIG91dC4gWWFo
IQoJCWVjaG8gam9pbihuLCAkb3V0KTsKCX0KCglmdW5jdGlvbiBmTGFiZWwgKCRsYWJlbCwg
JGNvbnRlbnRzID0gJycsICRsYWJlbF9yaWdodCA9IGZhbHNlKSB7CgkJLy8gPGxhYmVsPiB0
aGUgY29udGVudHMgd2l0aCB0aGUgbmFtZSAkbGFibGUKCQkkY29udGVudHMgPSAoJGxhYmVs
X3JpZ2h0KQoJCT8gJGNvbnRlbnRzLiRsYWJlbAoJCTogJGxhYmVsLigkY29udGVudHMgPyAn
OiAnLiRjb250ZW50cyA6ICcnKTsKCQlyZXR1cm4gdGFnKCRjb250ZW50cywgJ2xhYmVsJyk7
Cgl9CgoJZnVuY3Rpb24gZkJveGVzICgkbmFtZSA9ICcnLCAkdmFsdWUgPSAnJywgJGNoZWNr
ZWRfdmFsdWUgPSAnJywgJG9uID0gYXJyYXkoKSwgJGxhYmVsID0gJycpIHsKCQkkb3V0ID0g
YXJyYXkoKTsKCQlpZiAoaXNfYXJyYXkoJHZhbHVlKSkgewoJCQkkaSA9IDA7CgkJCWZvcmVh
Y2ggKCR2YWx1ZSBhcyAkdmFsKSB7CgkJCQkkbyA9ICc8aW5wdXQgdHlwZT0icmFkaW8iIG5h
bWU9IicuJG5hbWUuJyIgdmFsdWU9IicuJHZhbC4nIic7CgkJCQkkbyAuPSAoJGNoZWNrZWRf
dmFsdWUgPT0gJHZhbCkgPyAnIGNoZWNrZWQ9ImNoZWNrZWQiJyA6ICcnOwoJCQkJaWYgKGlz
X2FycmF5KCRvbikpIGZvcmVhY2goJG9uIGFzICRrID0+ICR2KQoJCQkJCSRvIC49ICgkb24p
ID8gJyBvbicuJGsuJz0iJy4kdi4nIicgOiAnJzsKCQkJCSRvIC49ICcgLz4nOwoJCQkJJG91
dFtdID0gJHRoaXMtPmZMYWJlbCgkbGFiZWxbJGkrK10sICRvLCB0cnVlKTsKCQkJfQoJCX0g
ZWxzZSB7CgkJCSRvID0gJzxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iJy4kbmFtZS4n
IiB2YWx1ZT0iJy4kdmFsdWUuJyInOwoJCQkkbyAuPSAoJGNoZWNrZWRfdmFsdWUgPT0gJHZh
bHVlKSA/ICcgY2hlY2tlZD0iY2hlY2tlZCInIDogJyc7CgkJCWlmIChpc19hcnJheSgkb24p
KSBmb3JlYWNoKCRvbiBhcyAkayA9PiAkdikKCQkJCSRvIC49ICgkb24pID8gJyBvbicuJGsu
Jz0iJy4kdi4nIicgOiAnJzsKCQkJJG8gLj0gJyAvPic7CgkJCSRvdXRbXSA9ICR0aGlzLT5m
TGFiZWwoJGxhYmVsLCAkbywgdHJ1ZSk7CgkJfQoKCQlyZXR1cm4gam9pbignJywgJG91dCk7
Cgl9CgoJZnVuY3Rpb24gZklucHV0ICgkdHlwZSwgJG5hbWUgPSAnJywgJHZhbHVlID0gJycs
ICRvbiA9IGFycmF5KCksICRsYWJlbCA9ICcnKSB7CgkJaWYgKCR0eXBlID09ICdyYWRpbycg
fHwgJHR5cGUgPT0gJ2NoZWNrYm94JykKCQkJcmV0dXJuICR0aGlzLT5mQm94ZXMoJG5hbWUs
ICR2YWx1ZSwgJG9uLCAkbGFiZWwpOwoKCQkkbyA9ICc8aW5wdXQgdHlwZT0iJy4kdHlwZS4n
IiBuYW1lPSInLiRuYW1lLiciIHZhbHVlPSInLiR2YWx1ZS4nIic7CgkJaWYgKGlzX2FycmF5
KCRvbikpIGZvcmVhY2goJG9uIGFzICRrID0+ICR2KQoJCQkkbyAuPSAoJG9uKSA/ICcgb24n
LiRrLic9IicuJHYuJyInIDogJyc7CgkJJG8gLj0gJyAvPic7CgkJcmV0dXJuICgkbGFiZWwp
ID8gJHRoaXMtPmZMYWJlbCgkbGFiZWwsICRvKSA6ICRvOwoJfQoKCWZ1bmN0aW9uIGZTZWxl
Y3QgKCRuYW1lID0gJycsICRhcnJheSA9ICcnLCAkdmFsdWUgPSAnJywgJGJsYW5rX2ZpcnN0
ID0gJycsICRsYWJlbCA9ICcnLCAkb25fc3VibWl0ID0gJycpIHsKCQkkbyA9IHNlbGVjdElu
cHV0KCRuYW1lLCAkYXJyYXksICR2YWx1ZSwgJGJsYW5rX2ZpcnN0LCAkb25fc3VibWl0KTsK
CQlyZXR1cm4gKCRsYWJlbCA/ICR0aGlzLT5mTGFiZWwoJGxhYmVsLCAkbykgOiAkbyk7Cgl9
CgoJZnVuY3Rpb24gcG9zdF9zYXZlX3Blcm1saW5rICgpIHsKCQkvLyBUaGUgZnVuY3Rpb24g
cG9zdHMgb3Igc2F2ZXMgYSBwZXJtYW5lbnQgbGluayB0byB0eHBfcHJlZnMKCgkJZXh0cmFj
dChncHNhKGFycmF5KCdzdGVwJywgZ2JwX2lkKSkpOwoKCQkvLyBHcmFiIHRoZSB1c2VyIGRl
ZmluZWQgc2V0dGluZ3MgZnJvbSB0aGUgZm9ybSBQT1NUIGRhdGEKCQkkc2V0dGluZ3MgPSBn
cHNhKGFycmF5KAoJCQkncGxfbmFtZScsICdwbF9wcmVjZWRlbmNlJywgJ3BsX3ByZXZpZXcn
LAoJCQknY29uX3NlY3Rpb24nLCAnY29uX2NhdGVnb3J5JywKCQkJJ2Rlc19zZWN0aW9uJywg
J2Rlc19jYXRlZ29yeScsICdkZXNfcGFnZScsCgkJCSdkZXNfcGVybWxpbmsnLCAnZGVzX2Zl
ZWQnLCAnZGVzX2xvY2F0aW9uJywKCQkpKTsKCgkJLy8gUmVtb3ZlIHNwYWNlcyBmcm9tIHRo
ZSBwZXJtYW5lbnQgbGluayBwcmV2aWV3CgkJJHNldHRpbmdzWydwbF9wcmV2aWV3J10gPSBw
cmVnX3JlcGxhY2UoJyVccysvXHMqJScsICcvJywgJHNldHRpbmdzWydwbF9wcmV2aWV3J10p
OwoKCQkvLyBFeHBsb2RlIHRoZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIHNlcmlhbGl6ZSBjb21w
b25lbnRzIC0gdGhpcyB3YXMgbWFkZSBieSBKYXZhU2NyaXB0LgoJCSRzZXJpYWxpemVfY29t
cG9uZW50cyA9IGV4cGxvZGUoZ2JwX3NlcGFyYXRvciwgcnRyaW0oZ3BzKCdjb21wb25lbnRz
JyksIGdicF9zZXBhcmF0b3IpKTsKCgkJLy8gVW5zZXJpYWxpemUgdGhlIGNvbXBvbmVudHMK
CQkkY29tcG9uZW50cyA9IGFycmF5KCk7CgkJZm9yZWFjaCAoJHNlcmlhbGl6ZV9jb21wb25l
bnRzIGFzICRjKQoJCQkkY29tcG9uZW50c1tdID0gdW5zZXJpYWxpemUoc3RyaXBzbGFzaGVz
KCRjKSk7CgoJCS8vIENvbXBsZXRlIHRoZSBwZXJtYW5lbnQgbGluayBhcnJheSAtIHRoaXMg
aXMgZXhhY3RseSB3aGF0IG5lZWRzIHRvIGJlIHN0b3JlZCBpbiB0aGUgZGIKCQkkcGVybWxp
bmsgPSBhcnJheSgnc2V0dGluZ3MnID0+ICRzZXR0aW5ncywgJ2NvbXBvbmVudHMnID0+ICRj
b21wb25lbnRzKTsKCgkJLy8gU2F2ZSBpdAoJCSR0aGlzLT5zZXRfcHJlZmVyZW5jZSgkaWQs
ICRwZXJtbGluaywgJ2dicF9zZXJpYWxpemVkJyk7CgoJCSR0aGlzLT5wYXJlbnQtPm1lc3Nh
Z2UgPSBtZXNzZW5nZXIoJycsICRzZXR0aW5nc1sncGxfbmFtZSddLCAnc2F2ZWQnKTsKCX0K
CglmdW5jdGlvbiBwaHBBcnJheVRvSnNBcnJheSAoJG5hbWUsICRhcnJheSkgewoJCS8vIEZy
b20gUEhQLm5ldAoJCWlmIChpc19hcnJheSgkYXJyYXkpKSB7CgkJCSRyZXN1bHQgPSAkbmFt
ZS4nID0gbmV3IEFycmF5KCk7Jy5uOwoJCQlmb3JlYWNoICgkYXJyYXkgYXMgJGtleSA9PiAk
dmFsdWUpCgkJCQkkcmVzdWx0IC49ICR0aGlzLT5waHBBcnJheVRvSnNBcnJheSgkbmFtZS4n
W1wnJy4ka2V5LidcJ10nLCR2YWx1ZSwnJykubjsKCQl9IGVsc2UgewoJCQkkcmVzdWx0ID0g
JG5hbWUuJyA9IFwnJy4kYXJyYXkuJ1wnOyc7CgkJfQoJCXJldHVybiAkcmVzdWx0OwoJfQp9
CgpjbGFzcyBQZXJtYW5lbnRMaW5rc0xpc3RUYWJWaWV3IGV4dGVuZHMgR0JQQWRtaW5UYWJW
aWV3CnsKCXZhciAkcGVybWlzc2lvbnMgPSAnMSwyJzsKCWZ1bmN0aW9uIHByZWxvYWQgKCkg
ewoJCXJlZ2lzdGVyX2NhbGxiYWNrKGFycmF5KCYkdGhpcywgJHRoaXMtPnBhcmVudC0+ZXZl
bnQuJ19tdWx0aV9lZGl0JyksICR0aGlzLT5wYXJlbnQtPmV2ZW50LCAkdGhpcy0+cGFyZW50
LT5ldmVudC4nX211bHRpX2VkaXQnLCAxKTsKCQlyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgm
JHRoaXMsICR0aGlzLT5wYXJlbnQtPmV2ZW50LidfY2hhbmdlX3BhZ2VieScpLCAkdGhpcy0+
cGFyZW50LT5ldmVudCwgJHRoaXMtPnBhcmVudC0+ZXZlbnQuJ19jaGFuZ2VfcGFnZWJ5Jywg
MSk7Cgl9CgoJZnVuY3Rpb24gbWFpbiAoKSB7CgkJZXh0cmFjdChncHNhKGFycmF5KCdwYWdl
JywgJ3NvcnQnLCAnZGlyJywgJ2NyaXQnLCAnc2VhcmNoX21ldGhvZCcpKSk7CgoJCSRldmVu
dCA9ICR0aGlzLT5wYXJlbnQtPmV2ZW50OwoKCQkkcGVybWxpbmtzID0gJHRoaXMtPnBhcmVu
dC0+Z2V0X2FsbF9wZXJtbGlua3MoKTsKCQkkdG90YWwgPSBjb3VudCgkcGVybWxpbmtzKTsK
CgkJaWYgKCR0b3RhbCA8IDEpIHsKCQkJZWNobyBncmFmKCdZb3UgaGF2ZW5cJ3QgY3JlYXRl
ZCBhbnkgY3VzdG9tIHBlcm1hbmVudCBsaW5rcyBydWxlcyB5ZXQuJywgJyBzdHlsZT0idGV4
dC1hbGlnbjogY2VudGVyOyInKS4KCQkJCSBncmFmKCc8YSBocmVmPSInLiR0aGlzLT51cmwo
YXJyYXkoZ2JwX3RhYiA9PiAnYnVpbGQnKSwgdHJ1ZSkuJyI+Q2xpY2sgaGVyZTwvYT4gdG8g
YWRkIG9uZS4nLCAnIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IicpOwoJCQlyZXR1cm47
CgkJfQoKCQkkbGltaXQgPSBtYXgoJHRoaXMtPnByZWYoJ2xpc3RfcGFnZWJ5JyksIDE1KTsK
CgkJbGlzdCgkcGFnZSwgJG9mZnNldCwgJG51bVBhZ2VzKSA9ICR0aGlzLT5wYWdlcigkdG90
YWwsICRsaW1pdCwgJHBhZ2UpOwoKCQlpZiAoZW1wdHkoJHNvcnQpKQoJCQkkc29ydCA9ICdw
bF9wcmVjZWRlbmNlJzsKCgkJaWYgKGVtcHR5KCRkaXIpKQoJCQkkZGlyID0gJ2Rlc2MnOwoK
CQkkZGlyID0gKCRkaXIgPT0gJ2Rlc2MnKSA/ICdkZXNjJyA6ICdhc2MnOwoKCQkvLyBTb3J0
IHRoZSBwZXJtbGlua3MgdmlhIHRoZSBzZWxlY3RlZCBjb2x1bW4gYW5kIHRoZW4gdGhlaXIg
bmFtZXMuCgkJZm9yZWFjaCAoJHBlcm1saW5rcyBhcyAkaWQgPT4gJHBlcm1saW5rKSB7CgkJ
CSRzb3J0X2tleXNbJGlkXSA9ICRwZXJtbGlua1snc2V0dGluZ3MnXVskc29ydF07CgkJCSRu
YW1lWyRpZF0gPSAkcGVybWxpbmtbJ3NldHRpbmdzJ11bJ3BsX25hbWUnXTsKCQl9CgkJYXJy
YXlfbXVsdGlzb3J0KCRzb3J0X2tleXMsICgoJGRpciA9PSAnZGVzYycpID8gU09SVF9ERVND
IDogU09SVF9BU0MpLCAkbmFtZSwgU09SVF9BU0MsICRwZXJtbGlua3MpOwoKCQkkc3dpdGNo
X2RpciA9ICgkZGlyID09ICdkZXNjJykgPyAnYXNjJyA6ICdkZXNjJzsKCgkJJHBlcm1saW5r
cyA9IGFycmF5X3NsaWNlKCRwZXJtbGlua3MsICRvZmZzZXQsICRsaW1pdCk7CgoJCWlmIChj
b3VudCgkcGVybWxpbmtzKSkgewoJCQllY2hvIG4ubi4nPGZvcm0gbmFtZT0ibG9uZ2Zvcm0i
IG1ldGhvZD0icG9zdCIgYWN0aW9uPSJpbmRleC5waHAiIG9uc3VibWl0PSJyZXR1cm4gdmVy
aWZ5KFwnJy5nVHh0KCdhcmVfeW91X3N1cmUnKS4nXCcpIj4nLgoKCQkJCW4uc3RhcnRUYWJs
ZSgnbGlzdCcpLgoJCQkJbi50cigKCQkJCQluLmNvbHVtbl9oZWFkKCduYW1lJywgJ3BsX25h
bWUnLCAkZXZlbnQsIHRydWUsICRzd2l0Y2hfZGlyLCAkY3JpdCwgJHNlYXJjaF9tZXRob2Qp
LgoJCQkJCWhDZWxsKCkuCgkJCQkJY29sdW1uX2hlYWQoJ3ByZXZpZXcnLCAncGxfcHJldmll
dycsICRldmVudCwgdHJ1ZSwgJHN3aXRjaF9kaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCku
CgkJCQkJY29sdW1uX2hlYWQoJ3ByZWNlZGVuY2UnLCAncGxfcHJlY2VkZW5jZScsICRldmVu
dCwgdHJ1ZSwgJHN3aXRjaF9kaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCkuCgkJCQkJaENl
bGwoKQoJCQkJKTsKCgkJCWluY2x1ZGVfb25jZSB0eHBhdGguJy9wdWJsaXNoL3RhZ2hhbmRs
ZXJzLnBocCc7CgoJCQlmb3JlYWNoICgkcGVybWxpbmtzIGFzICRpZCA9PiAkcGVybWxpbmsp
IHsKCQkJCWV4dHJhY3QoJHBlcm1saW5rWydzZXR0aW5ncyddKTsKCgkJCQkkbWFuYWdlID0g
bi4nPHVsJy4odmVyc2lvbl9jb21wYXJlKCRHTE9CQUxTWyd0aGlzdmVyc2lvbiddLCAnNC4w
LjMnLCAnPD0nKSA/ICcgc3R5bGU9Im1hcmdpbjowO3BhZGRpbmc6MDtsaXN0LXN0eWxlLXR5
cGU6bm9uZTsiPicgOiAnPicpLgoJCQkJCQluLnQuJzxsaT4nLmhyZWYoZ1R4dCgnZWRpdCcp
LCAkdGhpcy0+dXJsKGFycmF5KGdicF90YWIgPT4gJ2J1aWxkJywgZ2JwX2lkID0+ICRpZCks
IHRydWUpKS4nPC9saT4nLgoJCQkJCQluLic8L3VsPic7CgoJCQkJZWNobyBuLm4udHIoCgoJ
CQkJCXRkKAoJCQkJCQlocmVmKCRwbF9uYW1lLCAkdGhpcy0+dXJsKGFycmF5KGdicF90YWIg
PT4gJ2J1aWxkJywgZ2JwX2lkID0+ICRpZCksIHRydWUpKQoJCQkJCSwgNzUpLgoKCQkJCQl0
ZCgkbWFuYWdlLCAzNSkuCgoJCQkJCXRkKCRwbF9wcmV2aWV3LCAxNzUpLgoJCQkJCXRkKCRw
bF9wcmVjZWRlbmNlLicmbmJzcDsnLCA1MCkuCgoJCQkJCXRkKAoJCQkJCQlmSW5wdXQoJ2No
ZWNrYm94JywgJ3NlbGVjdGVkW10nLCAkaWQpCgkJCQkJKQoJCQkJKTsKCQkJfQoKCQkJZWNo
byBuLm4udHIoCgkJCQl0ZGEoCgkJCQkJc2VsZWN0X2J1dHRvbnMoKS4KCQkJCQkkdGhpcy0+
cGVybWxpbmtzX211bHRpZWRpdF9mb3JtKCRwYWdlLCAkc29ydCwgJGRpciwgJGNyaXQsICRz
ZWFyY2hfbWV0aG9kKQoJCQkJLCcgY29sc3Bhbj0iNCIgc3R5bGU9InRleHQtYWxpZ246IHJp
Z2h0OyBib3JkZXI6IG5vbmU7IicpCgkJCSkuCgoJCQluLmVuZFRhYmxlKCkuCgkJCW4uJzwv
Zm9ybT4nLgoKCQkJbi4kdGhpcy0+bmF2X2Zvcm0oJGV2ZW50LCAkcGFnZSwgJG51bVBhZ2Vz
LCAkc29ydCwgJGRpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKS4KCgkJCW4ucGFnZWJ5X2Zv
cm0oJGV2ZW50LCAkdGhpcy0+cHJlZignbGlzdF9wYWdlYnknKSk7CgkJfQoJfQoKCWZ1bmN0
aW9uIHBhZ2VyICgkdG90YWwsICRsaW1pdCwgJHBhZ2UpIHsKCQlpZiAoZnVuY3Rpb25fZXhp
c3RzKCdwYWdlcicpKQoJCQlyZXR1cm4gcGFnZXIoJHRvdGFsLCAkbGltaXQsICRwYWdlKTsK
CgkJLy8gVGhpcyBpcyB0YWtlbiBmcm9tIHR4cGxpYl9taXNjLnBocCByMTU4OCBpdCBpcyBy
ZXF1aXJlZCBmb3IgNC4wLjMgY29tcGF0aWJpdGx5CgkJJG51bV9wYWdlcyA9IGNlaWwoJHRv
dGFsIC8gJGxpbWl0KTsKCQkkcGFnZSA9ICRwYWdlID8gKGludCkgJHBhZ2UgOiAxOwoJCSRw
YWdlID0gbWluKG1heCgkcGFnZSwgMSksICRudW1fcGFnZXMpOwoJCSRvZmZzZXQgPSBtYXgo
KCRwYWdlIC0gMSkgKiAkbGltaXQsIDApOwoJCXJldHVybiBhcnJheSgkcGFnZSwgJG9mZnNl
dCwgJG51bV9wYWdlcyk7Cgl9CgoJZnVuY3Rpb24gbmF2X2Zvcm0gKCRldmVudCwgJHBhZ2Us
ICRudW1QYWdlcywgJHNvcnQsICRkaXIsICRjcml0LCAkbWV0aG9kKSB7CgkJaWYgKGZ1bmN0
aW9uX2V4aXN0cygnbmF2X2Zvcm0nKSkKCQkJcmV0dXJuIG5hdl9mb3JtKCRldmVudCwgJHBh
Z2UsICRudW1QYWdlcywgJHNvcnQsICRkaXIsICRjcml0LCAkbWV0aG9kKTsKCgkJLy8gVGhp
cyBpcyBiYXNpY2FsbHkgc3RvbGVuIGZyb20gdGhlIDQuMC4zIHZlcnNpb24gb2YgaW5jbHVk
ZXMvdHhwX2xpc3QucGhwCgkJLy8gLSBsaXN0X25hdl9mb3JtKCkgZm9yIDQuMC4zIGNvbXBh
dGliaXRseQoJCSRuYXZbXSA9ICgkcGFnZSA+IDEpCgkJCT8gUHJldk5leHRMaW5rKCRldmVu
dCwgJHBhZ2UtMSwgZ1R4dCgncHJldicpLCAncHJldicsICRzb3J0LCAkZGlyKSA6ICcnOwoJ
CSRuYXZbXSA9IHNwLnNtYWxsKCRwYWdlLiAnLycuJG51bVBhZ2VzKS5zcDsKCQkkbmF2W10g
PSAoJHBhZ2UgIT0gJG51bVBhZ2VzKQoJCQk/IFByZXZOZXh0TGluaygkZXZlbnQsICRwYWdl
KzEsIGdUeHQoJ25leHQnKSwgJ25leHQnLCAkc29ydCwgJGRpcikgOiAnJzsKCQlyZXR1cm4g
KCRuYXYpCgkJCT8gZ3JhZihqb2luKCcnLCAkbmF2KSwgJyBhbGlnbj0iY2VudGVyIicpIDog
Jyc7Cgl9CgoJZnVuY3Rpb24gcGVybWxpbmtzX211bHRpZWRpdF9mb3JtICgkcGFnZSwgJHNv
cnQsICRkaXIsICRjcml0LCAkc2VhcmNoX21ldGhvZCkgewoJCSRtZXRob2RzID0gYXJyYXko
CgkJCSdkZWxldGUnID0+IGdUeHQoJ2RlbGV0ZScpLAoJCSk7CgoJCXJldHVybiBldmVudF9t
dWx0aWVkaXRfZm9ybSgkdGhpcy0+cGFyZW50LT5ldmVudCwgJG1ldGhvZHMsICRwYWdlLCAk
c29ydCwgJGRpciwgJGNyaXQsICRzZWFyY2hfbWV0aG9kKTsKCX0KCglmdW5jdGlvbiBwZXJt
bGlua3NfY2hhbmdlX3BhZ2VieSAoKSB7CgkJJHRoaXMtPnNldF9wcmVmZXJlbmNlKCdsaXN0
X3BhZ2VieScsIGdwcygncXR5JykpOwoJfQoKCWZ1bmN0aW9uIHBlcm1saW5rc19tdWx0aV9l
ZGl0ICgpIHsKCQkkbWV0aG9kID0gZ3BzKCdlZGl0X21ldGhvZCcpCgkJCT8gZ3BzKCdlZGl0
X21ldGhvZCcpIC8vIEZyb20gVHhwIDQuMC40IGFuZCBncmVhdGVyCgkJCTogZ3BzKCdtZXRo
b2QnKTsgLy8gVXAgdG8gVHhwIDQuMC4zCgoJCXN3aXRjaCAoJG1ldGhvZCkgewoJCQljYXNl
ICdkZWxldGUnOgoJCQkJZm9yZWFjaCAoZ3BzKCdzZWxlY3RlZCcpIGFzICRpZCkgewoJCQkJ
CQkJJGRlbGV0ZWRbXSA9ICR0aGlzLT5wYXJlbnQtPnJlbW92ZV9wZXJtbGluaygkaWQpOwoJ
CQkJfQoJCQlicmVhazsKCQl9CgoJCSR0aGlzLT5wYXJlbnQtPm1lc3NhZ2UgPSAoaXNzZXQo
JGRlbGV0ZWQpICYmIGlzX2FycmF5KCRkZWxldGVkKSAmJiBjb3VudCgkZGVsZXRlZCkpCgkJ
CT8gbWVzc2VuZ2VyKCcnLCBqb2luKCcsICcsICRkZWxldGVkKSAsJ2RlbGV0ZWQnKQoJCQk6
IG1lc3NlbmdlcignYW4gZXJyb3Igb2NjdXJyZWQnLCAnJywgJycpOwoJfQp9CgpnbG9iYWwg
JGdicF9wbDsKJGdicF9wbCA9IG5ldyBQZXJtYW5lbnRMaW5rcygnUGVybWFuZW50IExpbmtz
JywgJ3Blcm1saW5rcycsICdhZG1pbicpOwppZiAoQHR4cGludGVyZmFjZSA9PSAncHVibGlj
JykgewoJcmVnaXN0ZXJfY2FsbGJhY2soYXJyYXkoJiRnYnBfcGwsICdfZmVlZF9lbnRyeScp
LCAncnNzX2VudHJ5Jyk7CglyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgmJGdicF9wbCwgJ19m
ZWVkX2VudHJ5JyksICdhdG9tX2VudHJ5Jyk7CglyZWdpc3Rlcl9jYWxsYmFjayhhcnJheSgm
JGdicF9wbCwgJ190ZXh0cGF0dGVybicpLCAndGV4dHBhdHRlcm4nKTsKCXJlZ2lzdGVyX2Nh
bGxiYWNrKGFycmF5KCYkZ2JwX3BsLCAnX3RleHRwYXR0ZXJuX2VuZCcpLCAndGV4dHBhdHRl
cm5fZW5kJyk7CgoJZnVuY3Rpb24gZ2JwX2lmX3JlZ2V4ICgkYXR0cywgJHRoaW5nKSB7CgkJ
Z2xvYmFsICRwcmV0ZXh0OwoJCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkJCSduYW1lJyA9PiAn
JywKCQkJJ3ZhbCcgID0+ICcnLAoJCSksJGF0dHMpKTsKCQkkbWF0Y2ggPSAoQCRwcmV0ZXh0
WyJwZXJtbGlua19yZWdleF97JG5hbWV9Il0gPT0gJHZhbCk7CgkJcmV0dXJuIHBhcnNlKEV2
YWxFbHNlKCR0aGluZywgJG1hdGNoKSk7Cgl9CgoJZnVuY3Rpb24gZ2JwX2lmX3RleHQgKCRh
dHRzLCAkdGhpbmcpIHsKCQlnbG9iYWwgJHByZXRleHQ7CgkJZXh0cmFjdChsQXR0cyhhcnJh
eSgKCQkJJ25hbWUnID0+ICcnLAoJCQkndmFsJyAgPT4gJycsCgkJKSwkYXR0cykpOwoKCQkk
bWF0Y2ggPSBmYWxzZTsKCQlpZiAoIWVtcHR5KCRuYW1lKSkgewoJCQlpZiAoZW1wdHkoJHZh
bCkpCgkJCQkkbWF0Y2ggPSAoaXNzZXQoJHByZXRleHRbInBlcm1saW5rX3RleHRfeyRuYW1l
fSJdKSk7CgkJCWVsc2UKCQkJCSRtYXRjaCA9IChAJHByZXRleHRbInBlcm1saW5rX3RleHRf
eyRuYW1lfSJdID09ICR2YWwpOwoJCX0KCQlyZXR1cm4gcGFyc2UoRXZhbEVsc2UoJHRoaW5n
LCAkbWF0Y2gpKTsKCX0KCglmdW5jdGlvbiBnYnBfdXNlX3BhZ2VsaW5rICgkYXR0cywgJHRo
aW5nID0gJycpIHsKCQlnbG9iYWwgJGdicF9wbDsKCQlleHRyYWN0KGxBdHRzKGFycmF5KAoJ
CQkncnVsZScgPT4gJycsCgkJKSwkYXR0cykpOwoJCXJldHVybiAkZ2JwX3BsLT5fdGV4dHBh
dHRlcm5fZW5kX2NhbGxiYWNrKHBhcnNlKCR0aGluZyksICRydWxlKTsKCX0KCglmdW5jdGlv
biBnYnBfZGlzYWJsZV9wZXJtbGlua3MgKCRhdHRzLCAkdGhpbmcgPSAnJykgewoJCWdsb2Jh
bCAkZ2JwX3BsOwoJCXJldHVybiAkZ2JwX3BsLT50b2dnbGVfcGVybWxpbmtfbW9kZSgncGFy
c2UnLCAkdGhpbmcpOwoJfQp9CiI7czozOiJtZDUiO3M6MzI6IjE1MzJkNmJiMWJlMzljNGY5
ZDE3NGY4M2ZkNTlkZDFlIjt9
